[{"title":"素材汇总：坐看世界，提升认知","date":"2024-10-18T13:33:25.000Z","urlname":"gk251mogg0117hzg","is_nav":false,"updated":"2024-10-18T13:34:04.000Z","not_show":false,"description":"互联网-遗忘心理学家丹尼尔•韦格纳（Daniel Wegner）通过实验发现，人类的大脑有一套实用主义的记忆体系，更容易记住信息所在的位置，而不是信息的具体内容。所以，对于那些看过就容易消失的信息，大脑会更容易记住，而那些在互联网上很容易就能获得的信息则被选择性地忽略了，这个现象被称为“谷歌效...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":166,"minutes":1,"text":"1 分钟"},"slug":"doc/🔥 程序员自我修养/个人成长🔝/gk251mogg0117hzg","path":"docs/doc/🔥 程序员自我修养/个人成长🔝/gk251mogg0117hzg","filePath":"docs/doc/🔥 程序员自我修养/个人成长🔝/gk251mogg0117hzg.md","toc":[{"value":"互联网-遗忘","url":"#互联网-遗忘","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"素材汇总：坐看世界，提升认知","datePublished":"2024-10-18T13:33:25.000Z","dateModified":"2024-10-18T13:34:04.000Z","description":"互联网-遗忘心理学家丹尼尔•韦格纳（Daniel Wegner）通过实验发现，人类的大脑有一套实用主义的记忆体系，更容易记住信息所在的位置，而不是信息的具体内容。所以，对于那些看过就容易消失的信息，大脑会更容易记住，而那些在互联网上很容易就能获得的信息则被选择性地忽略了，这个现象被称为“谷歌效...\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/个人成长🔝/gk251mogg0117hzg"}},{"title":"金句汇总：一句话，一人生","date":"2024-10-18T13:32:25.000Z","urlname":"dy6t10uchlh8usdt","is_nav":false,"updated":"2024-10-18T13:35:41.000Z","not_show":false,"description":"脑海不存在的观点毕竟，有一样东西你没法上网搜索，那就是你脑海里并不存在的观点。装水杯一个有盖子的水杯，永远装不满。纸牌、铜牌、银牌如果学历是纸牌，经历是铜牌，本领是银牌，持续赚钱的能力是金牌，那么，持续向上学习的能力就是王牌。世界上有两种人思考的结果是，这个世界上主要有两种人：一种人需要用成本...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":338,"minutes":1,"text":"1 分钟"},"slug":"doc/🔥 程序员自我修养/个人成长🔝/dy6t10uchlh8usdt","path":"docs/doc/🔥 程序员自我修养/个人成长🔝/dy6t10uchlh8usdt","filePath":"docs/doc/🔥 程序员自我修养/个人成长🔝/dy6t10uchlh8usdt.md","toc":[{"value":"脑海不存在的观点","url":"#脑海不存在的观点","depth":1},{"value":"装水杯","url":"#装水杯","depth":1},{"value":"纸牌、铜牌、银牌","url":"#纸牌铜牌银牌","depth":1},{"value":"世界上有两种人","url":"#世界上有两种人","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"金句汇总：一句话，一人生","datePublished":"2024-10-18T13:32:25.000Z","dateModified":"2024-10-18T13:35:41.000Z","description":"脑海不存在的观点毕竟，有一样东西你没法上网搜索，那就是你脑海里并不存在的观点。装水杯一个有盖子的水杯，永远装不满。纸牌、铜牌、银牌如果学历是纸牌，经历是铜牌，本领是银牌，持续赚钱的能力是金牌，那么，持续向上学习的能力就是王牌。世界上有两种人思考的结果是，这个世界上主要有两种人：一种人需要用成本...\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/个人成长🔝/dy6t10uchlh8usdt"}},{"title":"个人成长曲线：愚昧之巅、绝望之谷与开悟之坡","date":"2024-10-18T13:31:13.000Z","urlname":"xpo93y3ssb3mywrw","is_nav":false,"updated":"2024-10-18T13:32:03.000Z","not_show":false,"description":"如下图所示：\r","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1729258317821-f94f8072-860d-452e-9925-be5f3f0eca2b.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":14,"minutes":0,"text":"小于一分钟"},"slug":"doc/🔥 程序员自我修养/个人成长🔝/xpo93y3ssb3mywrw","path":"docs/doc/🔥 程序员自我修养/个人成长🔝/xpo93y3ssb3mywrw","filePath":"docs/doc/🔥 程序员自我修养/个人成长🔝/xpo93y3ssb3mywrw.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"个人成长曲线：愚昧之巅、绝望之谷与开悟之坡","datePublished":"2024-10-18T13:31:13.000Z","dateModified":"2024-10-18T13:32:03.000Z","description":"如下图所示：\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/个人成长🔝/xpo93y3ssb3mywrw"}},{"title":"Cursor Composer：AI 编程革命性功能","date":"2024-10-17T01:04:51.000Z","urlname":"qg33msccyyg3w151","is_nav":false,"updated":"2024-10-17T01:06:30.000Z","not_show":false,"description":"随着人工智能技术的迅猛发展，AI 辅助编程工具正逐渐成为软件开发领域的明星。在众多工具中，Cursor 以其独特的功能脱颖而出，特别是其 Composer 功能，支持多文件同时修改。这不仅显著提升了工程师的生产力，还通过与 Claude-3.5-Sonnet 和 GPT-4 等顶尖模型的深度集...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":939,"minutes":3,"text":"3 分钟"},"slug":"doc/🔥 程序员自我修养/人工智能🤖️/qg33msccyyg3w151","path":"docs/doc/🔥 程序员自我修养/人工智能🤖️/qg33msccyyg3w151","filePath":"docs/doc/🔥 程序员自我修养/人工智能🤖️/qg33msccyyg3w151.md","toc":[{"value":"什么是 Cursor Composer？","url":"#什么是-cursor-composer","depth":3},{"value":"如何启用 Cursor Composer？","url":"#如何启用-cursor-composer","depth":3},{"value":"多文件编辑功能的优势","url":"#多文件编辑功能的优势","depth":3},{"value":"实际操作示例","url":"#实际操作示例","depth":3},{"value":"键盘快捷键与 UI 集成","url":"#键盘快捷键与-ui-集成","depth":3},{"value":"单个模型的局限性与选择","url":"#单个模型的局限性与选择","depth":3},{"value":"总结","url":"#总结-15","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Cursor Composer：AI 编程革命性功能","datePublished":"2024-10-17T01:04:51.000Z","dateModified":"2024-10-17T01:06:30.000Z","description":"随着人工智能技术的迅猛发展，AI 辅助编程工具正逐渐成为软件开发领域的明星。在众多工具中，Cursor 以其独特的功能脱颖而出，特别是其 Composer 功能，支持多文件同时修改。这不仅显著提升了工程师的生产力，还通过与 Claude-3.5-Sonnet 和 GPT-4 等顶尖模型的深度集...\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/人工智能🤖️/qg33msccyyg3w151"}},{"title":"使用Docker安装Umami，统计网站PV/UV","date":"2024-10-14T00:34:32.000Z","urlname":"gcssgnt470rg4vbi","is_nav":false,"updated":"2024-10-14T14:53:45.000Z","not_show":false,"description":"因为有好几个网站，尝试了google、百度的分析统计软件，都不太好用……其实最好用的是vercel，但是要收费，于是找到了Umami这个开源的统计网站，下面是安装教程，数据库是MYsql（我用的8.4）。先下载Docker镜像docker pull docker.umami.is/umami-...\r","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1728866928325-2fb3c2f3-9493-4408-9269-dd6c53a89cea.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":438,"minutes":1,"text":"1 分钟"},"slug":"doc/🔥 程序员自我修养/个人建站 🤖/gcssgnt470rg4vbi","path":"docs/doc/🔥 程序员自我修养/个人建站 🤖/gcssgnt470rg4vbi","filePath":"docs/doc/🔥 程序员自我修养/个人建站 🤖/gcssgnt470rg4vbi.md","toc":[{"value":"先下载Docker镜像","url":"#先下载docker镜像","depth":1},{"value":"编排镜像","url":"#编排镜像","depth":1},{"value":"启动","url":"#启动","depth":1},{"value":"设置反向代理","url":"#设置反向代理","depth":1},{"value":"登录访问","url":"#登录访问","depth":1},{"value":"新建网站","url":"#新建网站","depth":1},{"value":"API调用","url":"#api调用","depth":1},{"value":"网站分析","url":"#网站分析","depth":1},{"value":"API","url":"#api","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"使用Docker安装Umami，统计网站PV/UV","datePublished":"2024-10-14T00:34:32.000Z","dateModified":"2024-10-14T14:53:45.000Z","description":"因为有好几个网站，尝试了google、百度的分析统计软件，都不太好用……其实最好用的是vercel，但是要收费，于是找到了Umami这个开源的统计网站，下面是安装教程，数据库是MYsql（我用的8.4）。先下载Docker镜像docker pull docker.umami.is/umami-...\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/个人建站 🤖/gcssgnt470rg4vbi"}},{"title":"A component is changing an uncontrolled input to be controlled.","date":"2024-10-10T00:21:01.000Z","urlname":"oxwter7kgwvcsr3g","is_nav":false,"updated":"2024-10-10T12:51:06.000Z","not_show":false,"description":"在前端开发中，我们经常会处理表单输入。表单输入组件可以分为受控组件和非受控组件，理解它们之间的转换以及背后的原理对于构建高效、可维护的用户界面至关重要。一、受控组件与非受控组件的概念受控组件受控组件的值由React组件的状态来控制。当表单元素的值发生变化时，通过事件处理函数将新的值更新到组件的...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1719,"minutes":6,"text":"6 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/oxwter7kgwvcsr3g","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/oxwter7kgwvcsr3g","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/oxwter7kgwvcsr3g.md","toc":[{"value":"一、受控组件与非受控组件的概念","url":"#一受控组件与非受控组件的概念","depth":2},{"value":"受控组件","url":"#受控组件","depth":3},{"value":"非受控组件","url":"#非受控组件","depth":3},{"value":"二、为什么要将非受控组件转换为受控组件","url":"#二为什么要将非受控组件转换为受控组件","depth":2},{"value":"1. 更好的状态管理","url":"#1-更好的状态管理","depth":3},{"value":"2. 可预测性和一致性","url":"#2-可预测性和一致性","depth":3},{"value":"三、转换过程及示例","url":"#三转换过程及示例","depth":2},{"value":"步骤一：添加状态和事件处理函数","url":"#步骤一添加状态和事件处理函数","depth":3},{"value":"步骤二：将ref替换为value属性并绑定事件处理函数","url":"#步骤二将ref替换为value属性并绑定事件处理函数","depth":3},{"value":"步骤三：处理初始值（如果有）","url":"#步骤三处理初始值如果有","depth":3},{"value":"四、总结","url":"#四总结","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"A component is changing an uncontrolled input to be controlled.","datePublished":"2024-10-10T00:21:01.000Z","dateModified":"2024-10-10T12:51:06.000Z","description":"在前端开发中，我们经常会处理表单输入。表单输入组件可以分为受控组件和非受控组件，理解它们之间的转换以及背后的原理对于构建高效、可维护的用户界面至关重要。一、受控组件与非受控组件的概念受控组件受控组件的值由React组件的状态来控制。当表单元素的值发生变化时，通过事件处理函数将新的值更新到组件的...\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/oxwter7kgwvcsr3g"}},{"title":"关于Next Image你可能不知道的事情","date":"2024-10-09T05:19:12.000Z","urlname":"fh0i0wlmcihk1f0s","is_nav":false,"updated":"2024-10-10T12:55:09.000Z","not_show":false,"description":"如果使用过 Next.js，可能遇到过 Next Image 组件。这种无忧的图像优化解决方案不仅提供对 webp 和 avif 等现代格式的支持，而且还生成针对不同屏幕尺寸定制的多个版本。要利用这种魔力，只需将以下代码添加到的页面即可：import Image from 'next/imag...\r","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1728451253027-87e5e1dc-6464-4e01-b71c-2d976ffd7030.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":5185,"minutes":17,"text":"17 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/「万赞」不一样的Nextjs！/fh0i0wlmcihk1f0s","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/「万赞」不一样的Nextjs！/fh0i0wlmcihk1f0s","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/「万赞」不一样的Nextjs！/fh0i0wlmcihk1f0s.md","toc":[{"value":"<font style=\"color:rgb(0, 0, 0);\">核心架构</font>","url":"#font-stylecolorrgb0-0-0核心架构font","depth":1},{"value":"React","url":"#react","depth":3},{"value":"<font style=\"color:rgb(0, 0, 0);\">Next Image API</font>","url":"#font-stylecolorrgb0-0-0next-image-apifont","depth":3},{"value":"<font style=\"color:rgb(0, 0, 0);\">Image Optimizer</font><font style=\"color:rgb(0, 0, 0);\"> </font><font style=\"color:rgb(0, 0, 0);\">图像优化器</font>","url":"#font-stylecolorrgb0-0-0image-optimizerfontfont-stylecolorrgb0-0-0-fontfont-stylecolorrgb0-0-0图像优化器font","depth":3},{"value":"<font style=\"color:rgb(0, 0, 0);\">Outcomes</font><font style=\"color:rgb(0, 0, 0);\"> </font><font style=\"color:rgb(0, 0, 0);\">结果</font>","url":"#font-stylecolorrgb0-0-0outcomesfontfont-stylecolorrgb0-0-0-fontfont-stylecolorrgb0-0-0结果font","depth":2},{"value":"<font style=\"color:rgb(0, 0, 0);\">next/image does not crop</font><font style=\"color:rgb(0, 0, 0);\"> </font><font style=\"color:rgb(0, 0, 0);\">下一个/图像不裁剪</font>","url":"#font-stylecolorrgb0-0-0nextimage-does-not-cropfontfont-stylecolorrgb0-0-0-fontfont-stylecolorrgb0-0-0下一个图像不裁剪font","depth":3},{"value":"<font style=\"color:rgb(0, 0, 0);\">Displayed image width ≠ loaded image width</font><font style=\"color:rgb(0, 0, 0);\">","url":"#font-stylecolorrgb0-0-0displayed-image-width--loaded-image-widthfontfont-stylecolorrgb0-0-0","depth":3},{"value":"<font style=\"color:rgb(0, 0, 0);\">Image optimization can be used without the next/image component</font><font style=\"color:rgb(0, 0, 0);\">","url":"#font-stylecolorrgb0-0-0image-optimization-can-be-used-without-the-nextimage-componentfontfont-stylecolorrgb0-0-0","depth":3},{"value":"<font style=\"color:rgb(0, 0, 0);\">Use import for local images</font><font style=\"color:rgb(0, 0, 0);\">","url":"#font-stylecolorrgb0-0-0use-import-for-local-imagesfontfont-stylecolorrgb0-0-0","depth":3},{"value":"<font style=\"color:rgb(0, 0, 0);\">Understanding Sizes and the 100vw Technique</font><font style=\"color:rgb(0, 0, 0);\">","url":"#font-stylecolorrgb0-0-0understanding-sizes-and-the-100vw-techniquefontfont-stylecolorrgb0-0-0","depth":3},{"value":"<font style=\"color:rgb(0, 0, 0);\">Conclusions</font><font style=\"color:rgb(0, 0, 0);\"> </font><font style=\"color:rgb(0, 0, 0);\">结论</font>","url":"#font-stylecolorrgb0-0-0conclusionsfontfont-stylecolorrgb0-0-0-fontfont-stylecolorrgb0-0-0结论font","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"关于Next Image你可能不知道的事情","datePublished":"2024-10-09T05:19:12.000Z","dateModified":"2024-10-10T12:55:09.000Z","description":"如果使用过 Next.js，可能遇到过 Next Image 组件。这种无忧的图像优化解决方案不仅提供对 webp 和 avif 等现代格式的支持，而且还生成针对不同屏幕尺寸定制的多个版本。要利用这种魔力，只需将以下代码添加到的页面即可：import Image from 'next/imag...\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/「万赞」不一样的Nextjs！/fh0i0wlmcihk1f0s"}},{"title":"如何在Tailwind CSS中使用calc()？","date":"2024-10-08T15:08:04.000Z","urlname":"lkhm7yt97ntl3t9f","is_nav":false,"updated":"2024-10-08T15:08:45.000Z","not_show":false,"description":"在Tailwind CSS中，calc()是一个非常有用的功能，它允许我们进行动态的样式计算。以下是关于如何在Tailwind CSS中使用calc()的介绍。一、calc()基础calc()是CSS中的一个函数，它允许我们在样式规则中进行数学计算。例如，我们可以使用它来计算元素的宽度、高度、...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":579,"minutes":2,"text":"2 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/lkhm7yt97ntl3t9f","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/lkhm7yt97ntl3t9f","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/lkhm7yt97ntl3t9f.md","toc":[{"value":"一、calc()基础","url":"#一calc基础","depth":2},{"value":"二、在Tailwind CSS中使用calc()的方法","url":"#二在tailwind-css中使用calc的方法","depth":2},{"value":"（一）直接使用","url":"#一直接使用","depth":3},{"value":"（二）与Tailwind CSS的其他类名结合使用","url":"#二与tailwind-css的其他类名结合使用","depth":3},{"value":"三、注意事项","url":"#三注意事项","depth":2},{"value":"（一）空格问题","url":"#一空格问题","depth":3},{"value":"（二）单位一致性","url":"#二单位一致性","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"如何在Tailwind CSS中使用calc()？","datePublished":"2024-10-08T15:08:04.000Z","dateModified":"2024-10-08T15:08:45.000Z","description":"在Tailwind CSS中，calc()是一个非常有用的功能，它允许我们进行动态的样式计算。以下是关于如何在Tailwind CSS中使用calc()的介绍。一、calc()基础calc()是CSS中的一个函数，它允许我们在样式规则中进行数学计算。例如，我们可以使用它来计算元素的宽度、高度、...\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/lkhm7yt97ntl3t9f"}},{"title":"比亚迪线下hr面+一面+线上二面面经","date":"2024-10-08T13:31:32.000Z","urlname":"cvggg24kfgt46g7k","is_nav":false,"updated":"2024-10-08T13:33:23.000Z","not_show":false,"description":"HR面 作用是了解你的简历，然后给你分对应的面试官，好多人简历的方向不对口，被直接在这个环节劝退，非常逆天，byd的HR连简历都筛不明白是让人想不到的 拷打我既然有腾讯的经历为什么来比亚迪，哥们自己狗扯了一下，你自己公司自己都不自信你招锤子人才，byd我觉得首先培训下HR的话术把，真的捞。 h...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":796,"minutes":3,"text":"3 分钟"},"slug":"doc/💹 大厂面经/面试真题/cvggg24kfgt46g7k","path":"docs/doc/💹 大厂面经/面试真题/cvggg24kfgt46g7k","filePath":"docs/doc/💹 大厂面经/面试真题/cvggg24kfgt46g7k.md","toc":[{"value":"<font style=\"color:rgb(0, 0, 0);\">HR面 </font>","url":"#font-stylecolorrgb0-0-0hr面-font","depth":1},{"value":"<font style=\"color:rgb(0, 0, 0);\">一面 </font>","url":"#font-stylecolorrgb0-0-0一面-font","depth":1},{"value":"<font style=\"color:rgb(0, 0, 0);\">二面 </font>","url":"#font-stylecolorrgb0-0-0二面-font","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"比亚迪线下hr面+一面+线上二面面经","datePublished":"2024-10-08T13:31:32.000Z","dateModified":"2024-10-08T13:33:23.000Z","description":"HR面 作用是了解你的简历，然后给你分对应的面试官，好多人简历的方向不对口，被直接在这个环节劝退，非常逆天，byd的HR连简历都筛不明白是让人想不到的 拷打我既然有腾讯的经历为什么来比亚迪，哥们自己狗扯了一下，你自己公司自己都不自信你招锤子人才，byd我觉得首先培训下HR的话术把，真的捞。 h...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/cvggg24kfgt46g7k"}},{"title":"字节三次面试面经","date":"2024-10-02T15:07:25.000Z","urlname":"iuv8q8c4vg3h6tg8","is_nav":false,"updated":"2024-10-02T15:10:21.000Z","not_show":false,"description":"一面MySQL相关MySQL CPU飙高如何排查？整个系统的性能瓶颈是什么？如何排查的慢SQL？MySQL的索引结构是什么？详细讲一下B +树。MySQL的数据在B +树上是如何存储的？GC垃圾回收相关讲一下GC垃圾回收。GC垃圾回收时CPU大概会提升多少？Redis相关Redis的过期删除机...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":658,"minutes":2,"text":"2 分钟"},"slug":"doc/💹 大厂面经/面试真题/iuv8q8c4vg3h6tg8","path":"docs/doc/💹 大厂面经/面试真题/iuv8q8c4vg3h6tg8","filePath":"docs/doc/💹 大厂面经/面试真题/iuv8q8c4vg3h6tg8.md","toc":[{"value":"一面","url":"#一面-1","depth":1},{"value":"二面","url":"#二面-1","depth":1},{"value":"三面","url":"#三面","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"字节三次面试面经","datePublished":"2024-10-02T15:07:25.000Z","dateModified":"2024-10-02T15:10:21.000Z","description":"一面MySQL相关MySQL CPU飙高如何排查？整个系统的性能瓶颈是什么？如何排查的慢SQL？MySQL的索引结构是什么？详细讲一下B +树。MySQL的数据在B +树上是如何存储的？GC垃圾回收相关讲一下GC垃圾回收。GC垃圾回收时CPU大概会提升多少？Redis相关Redis的过期删除机...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/iuv8q8c4vg3h6tg8"}},{"title":"Steam手柄的操作集、操作层是什么意思？","date":"2024-09-30T12:44:24.000Z","urlname":"iyrbht5x85g94sbr","is_nav":false,"updated":"2024-09-30T12:47:22.000Z","not_show":false,"description":"全网也没几个关于操作集的教程，特别是新版STEAM改版之后。。。。完全看不懂了。于是这篇文章来了，首先，说结论：操作集=组合键方案 操作层=组合键功能映射 给某按键设置操作层切换 = 设置组合键的触发键\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":133,"minutes":0,"text":"小于一分钟"},"slug":"doc/🔥 程序员自我修养/十万个为什么💡/iyrbht5x85g94sbr","path":"docs/doc/🔥 程序员自我修养/十万个为什么💡/iyrbht5x85g94sbr","filePath":"docs/doc/🔥 程序员自我修养/十万个为什么💡/iyrbht5x85g94sbr.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Steam手柄的操作集、操作层是什么意思？","datePublished":"2024-09-30T12:44:24.000Z","dateModified":"2024-09-30T12:47:22.000Z","description":"全网也没几个关于操作集的教程，特别是新版STEAM改版之后。。。。完全看不懂了。于是这篇文章来了，首先，说结论：操作集=组合键方案 操作层=组合键功能映射 给某按键设置操作层切换 = 设置组合键的触发键\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/十万个为什么💡/iyrbht5x85g94sbr"}},{"title":"「推荐」如何安全地使用Nextjs的server-action？","date":"2024-09-30T03:39:36.000Z","urlname":"le4uyv5kbaf9gy65","is_nav":false,"updated":"2024-09-30T03:42:58.000Z","not_show":false,"description":"在现代 Web 开发中，安全性、类型检查和代码效率至关重要。Next.js 的 Server Actions 为我们提供了在服务器端执行操作的强大工具，而 next-safe-action 库则进一步增强了这一功能。本文将深入探讨如何利用 next-safe-action 来创建更安全、更高效...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2042,"minutes":7,"text":"7 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/【教程】不一样的Nextjs！/le4uyv5kbaf9gy65","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/【教程】不一样的Nextjs！/le4uyv5kbaf9gy65","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/【教程】不一样的Nextjs！/le4uyv5kbaf9gy65.md","toc":[{"value":"Server Actions 基础","url":"#server-actions-基础","depth":2},{"value":"基本示例","url":"#基本示例","depth":3},{"value":"next-safe-action 介绍","url":"#next-safe-action-介绍","depth":2},{"value":"深入对比：传统 Server Action vs next-safe-action","url":"#深入对比传统-server-action-vs-next-safe-action","depth":2},{"value":"场景：用户注册功能","url":"#场景用户注册功能","depth":3},{"value":"传统 Server Action 实现","url":"#传统-server-action-实现","depth":4},{"value":"使用 next-safe-action 的实现","url":"#使用-next-safe-action-的实现","depth":4},{"value":"主要区别分析","url":"#主要区别分析","depth":3},{"value":"客户端实现对比","url":"#客户端实现对比","depth":2},{"value":"传统方法","url":"#传统方法","depth":3},{"value":"使用 next-safe-action","url":"#使用-next-safe-action","depth":3},{"value":"客户端实现的主要区别","url":"#客户端实现的主要区别","depth":3},{"value":"next-safe-action 的高级特性","url":"#next-safe-action-的高级特性","depth":2},{"value":"1. 中间件支持","url":"#1-中间件支持","depth":3},{"value":"2. 自定义错误处理","url":"#2-自定义错误处理","depth":3},{"value":"3. 重用验证逻辑","url":"#3-重用验证逻辑","depth":3},{"value":"性能考虑","url":"#性能考虑","depth":2},{"value":"最佳实践","url":"#最佳实践","depth":2},{"value":"结论","url":"#结论-20","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"「推荐」如何安全地使用Nextjs的server-action？","datePublished":"2024-09-30T03:39:36.000Z","dateModified":"2024-09-30T03:42:58.000Z","description":"在现代 Web 开发中，安全性、类型检查和代码效率至关重要。Next.js 的 Server Actions 为我们提供了在服务器端执行操作的强大工具，而 next-safe-action 库则进一步增强了这一功能。本文将深入探讨如何利用 next-safe-action 来创建更安全、更高效...\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/【教程】不一样的Nextjs！/le4uyv5kbaf9gy65"}},{"title":"你真的知道Nextjs的api怎么用吗？","date":"2024-09-30T03:10:25.000Z","urlname":"rtnwlsk5vh350o83","is_nav":false,"updated":"2024-09-30T03:39:34.000Z","not_show":false,"description":"Next.js 13引入了一个新特性：Route Handlers。这个特性为我们提供了一种在App Router中创建API端点的新方式。如果你觉得自己已经很熟悉Next.js的API路由了，那么这篇文章可能会给你一些新的见解。Route Handlers：Next.js API的新时代Ro...\r","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1727667318185-13955a5d-b654-49ca-a93a-90ef5d3ccec0.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1422,"minutes":5,"text":"5 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/【教程】不一样的Nextjs！/rtnwlsk5vh350o83","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/【教程】不一样的Nextjs！/rtnwlsk5vh350o83","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/【教程】不一样的Nextjs！/rtnwlsk5vh350o83.md","toc":[{"value":"Route Handlers：Next.js API的新时代","url":"#route-handlersnextjs-api的新时代","depth":2},{"value":"基本用法","url":"#基本用法","depth":3},{"value":"支持的HTTP方法","url":"#支持的http方法","depth":3},{"value":"高级用法","url":"#高级用法","depth":2},{"value":"1. 动态路由","url":"#1-动态路由","depth":3},{"value":"2. 查询参数处理","url":"#2-查询参数处理","depth":3},{"value":"3. 响应流","url":"#3-响应流","depth":3},{"value":"4. CORS处理","url":"#4-cors处理","depth":3},{"value":"5.文件上传","url":"#5文件上传","depth":3},{"value":"6.性能优化","url":"#6性能优化","depth":3},{"value":"route.js","url":"#routejs","depth":2},{"value":"route.js 的特殊性","url":"#routejs-的特殊性","depth":3},{"value":"文件命名和位置","url":"#文件命名和位置","depth":3},{"value":"配置选项","url":"#配置选项","depth":3},{"value":"示例：配置静态路由","url":"#示例配置静态路由","depth":3},{"value":"注意事项","url":"#注意事项-1","depth":3},{"value":"最佳实践","url":"#最佳实践-1","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"你真的知道Nextjs的api怎么用吗？","datePublished":"2024-09-30T03:10:25.000Z","dateModified":"2024-09-30T03:39:34.000Z","description":"Next.js 13引入了一个新特性：Route Handlers。这个特性为我们提供了一种在App Router中创建API端点的新方式。如果你觉得自己已经很熟悉Next.js的API路由了，那么这篇文章可能会给你一些新的见解。Route Handlers：Next.js API的新时代Ro...\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/【教程】不一样的Nextjs！/rtnwlsk5vh350o83"}},{"title":"「万赞」不一样的Nextjs！","date":"2024-09-30T03:08:19.000Z","urlname":"satyn7anq2cv9p7p","is_nav":false,"nav_path":"nextjs","updated":"2024-09-30T14:39:53.000Z","not_show":false,"description":"---is_nav: falsenav_path: nextjskeywords: Nextjs,Nextjs教程tags: ['Nextjs']---在前端开发的广袤天地中，Next.js 犹如一颗璀璨的新星，吸引着无数开发者的目光。本专栏——“聊点不一样的 Next.js！”将带你踏上一场...","tags":["Nextjs\r"],"keywords":"Nextjs,Nextjs教程","authors":["whitedew"],"type":"Post","readingTime":{"words":686,"minutes":2,"text":"2 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/satyn7anq2cv9p7p","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/satyn7anq2cv9p7p","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/satyn7anq2cv9p7p.md","toc":[{"value":"一、深度与广度兼具","url":"#一深度与广度兼具","depth":2},{"value":"二、实战案例驱动","url":"#二实战案例驱动","depth":2},{"value":"三、最新技术趋势与前沿应用","url":"#三最新技术趋势与前沿应用","depth":2},{"value":"四、社区互动与交流","url":"#四社区互动与交流","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"「万赞」不一样的Nextjs！","datePublished":"2024-09-30T03:08:19.000Z","dateModified":"2024-09-30T14:39:53.000Z","description":"---is_nav: falsenav_path: nextjskeywords: Nextjs,Nextjs教程tags: ['Nextjs']---在前端开发的广袤天地中，Next.js 犹如一颗璀璨的新星，吸引着无数开发者的目光。本专栏——“聊点不一样的 Next.js！”将带你踏上一场...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/satyn7anq2cv9p7p"}},{"title":"2516-每种字符至少取K个","date":"2024-09-27T06:14:39.000Z","urlname":"srmc2fvlpohay0an","is_nav":false,"updated":"2024-09-30T07:06:39.000Z","not_show":false,"description":"深入理解：每种字符至少取 K 个的双指针解法1. 问题回顾给定一个由字符 'a'、'b'、'c' 组成的字符串 s 和一个非负整数 k。每分钟，你可以选择取走 s 最左侧或最右侧的字符。你必须取走每种字符至少 k 个，返回需要的最少分钟数；如果无法取到，则返回 -1。例如：s = \"aabaa...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":889,"minutes":3,"text":"3 分钟"},"slug":"doc/⬇️ 区区算法/每日一题 ⬆️/srmc2fvlpohay0an","path":"docs/doc/⬇️ 区区算法/每日一题 ⬆️/srmc2fvlpohay0an","filePath":"docs/doc/⬇️ 区区算法/每日一题 ⬆️/srmc2fvlpohay0an.md","toc":[{"value":"深入理解：每种字符至少取 K 个的双指针解法","url":"#深入理解每种字符至少取-k-个的双指针解法","depth":1},{"value":"1. 问题回顾","url":"#1-问题回顾","depth":2},{"value":"2. 算法核心思想","url":"#2-算法核心思想","depth":2},{"value":"3. 详细步骤解析","url":"#3-详细步骤解析","depth":2},{"value":"4. 图解算法流程","url":"#4-图解算法流程","depth":2},{"value":"5. 代码解释","url":"#5-代码解释","depth":2},{"value":"6. 总结与思考","url":"#6-总结与思考","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"2516-每种字符至少取K个","datePublished":"2024-09-27T06:14:39.000Z","dateModified":"2024-09-30T07:06:39.000Z","description":"深入理解：每种字符至少取 K 个的双指针解法1. 问题回顾给定一个由字符 'a'、'b'、'c' 组成的字符串 s 和一个非负整数 k。每分钟，你可以选择取走 s 最左侧或最右侧的字符。你必须取走每种字符至少 k 个，返回需要的最少分钟数；如果无法取到，则返回 -1。例如：s = \"aabaa...\r","url":"https://offernow.cn/docs/doc/⬇️ 区区算法/每日一题 ⬆️/srmc2fvlpohay0an"}},{"title":"pnpm lockfile版本不一致","date":"2024-09-26T23:58:44.000Z","urlname":"ypqbhwx47hgka006","is_nav":false,"updated":"2024-09-27T00:01:24.000Z","not_show":false,"description":"背景最近在部署OfferNow的时候，每次推送到线上之后，repo的pnpm-lock就变了。纳闷啊，为什么呢？直到我发现了这个：原来每次我推送的时候lockfileVersion都是9.0.但是一旦从线上拉下来，就变成了6.0. 关键在于我在dockerfile里没有指定pnpm的版本解决以...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1727395194770-ca1b2e5f-bc12-4612-9508-11aa49ca1532.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":661,"minutes":2,"text":"2 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/ypqbhwx47hgka006","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/ypqbhwx47hgka006","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/ypqbhwx47hgka006.md","toc":[{"value":"背景","url":"#背景-3","depth":1},{"value":"解决","url":"#解决-2","depth":1},{"value":"1. 使用 corepack 启用 pnpm 并指定版本","url":"#1-使用-corepack-启用-pnpm-并指定版本","depth":3},{"value":"2. 修改 Dockerfile","url":"#2-修改-dockerfile","depth":3},{"value":"3. 替换 <version>","url":"#3-替换-version","depth":3},{"value":"4. 构建和运行 Docker 镜像","url":"#4-构建和运行-docker-镜像","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"pnpm lockfile版本不一致","datePublished":"2024-09-26T23:58:44.000Z","dateModified":"2024-09-27T00:01:24.000Z","description":"背景最近在部署OfferNow的时候，每次推送到线上之后，repo的pnpm-lock就变了。纳闷啊，为什么呢？直到我发现了这个：原来每次我推送的时候lockfileVersion都是9.0.但是一旦从线上拉下来，就变成了6.0. 关键在于我在dockerfile里没有指定pnpm的版本解决以...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/ypqbhwx47hgka006"}},{"title":"Elasticsearch 的 Mapping设置","date":"2024-09-26T04:36:28.000Z","urlname":"eqx15o4rsygvh108","is_nav":false,"updated":"2024-09-26T04:37:45.000Z","not_show":false,"description":"在 Elasticsearch 中，Mapping（映射）是非常重要的概念，它定义了文档中各个字段的类型、存储方式、分析器等属性。正确地设置 Mapping 可以确保数据能够被有效地存储和检索。本文将详细介绍 Elasticsearch Mapping 文件的设置。一、Mapping 的作用M...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1008,"minutes":3,"text":"3 分钟"},"slug":"doc/📚 计算机基础/ElasticSearch/eqx15o4rsygvh108","path":"docs/doc/📚 计算机基础/ElasticSearch/eqx15o4rsygvh108","filePath":"docs/doc/📚 计算机基础/ElasticSearch/eqx15o4rsygvh108.md","toc":[{"value":"一、Mapping 的作用","url":"#一mapping-的作用","depth":1},{"value":"二、创建 Mapping","url":"#二创建-mapping","depth":1},{"value":"三、Mapping 的属性","url":"#三mapping-的属性","depth":1},{"value":"四、更新 Mapping","url":"#四更新-mapping","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Elasticsearch 的 Mapping设置","datePublished":"2024-09-26T04:36:28.000Z","dateModified":"2024-09-26T04:37:45.000Z","description":"在 Elasticsearch 中，Mapping（映射）是非常重要的概念，它定义了文档中各个字段的类型、存储方式、分析器等属性。正确地设置 Mapping 可以确保数据能够被有效地存储和检索。本文将详细介绍 Elasticsearch Mapping 文件的设置。一、Mapping 的作用M...\r","url":"https://offernow.cn/docs/doc/📚 计算机基础/ElasticSearch/eqx15o4rsygvh108"}},{"title":"ES 倒排索引讲解","date":"2024-09-26T04:36:25.000Z","urlname":"bpg1mnp8mrrl6bg7","is_nav":false,"updated":"2024-09-26T04:39:54.000Z","not_show":false,"description":"在学习其他数据库时，我们了解到索引是数据库系统中至关重要的部分，直接决定着查询的效率。Elasticsearch 之所以能够实现高速查询，主要得益于其底层 Lucene 使用了倒排索引（Inverted Index）的方式，并通过多种优化提升性能。索引的重要性什么是倒排索引？首先，我们来了解一...\r","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/e9923c0080f2156413f8aba119009254.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1514,"minutes":5,"text":"5 分钟"},"slug":"doc/📚 计算机基础/ElasticSearch/bpg1mnp8mrrl6bg7","path":"docs/doc/📚 计算机基础/ElasticSearch/bpg1mnp8mrrl6bg7","filePath":"docs/doc/📚 计算机基础/ElasticSearch/bpg1mnp8mrrl6bg7.md","toc":[{"value":"索引的重要性","url":"#索引的重要性","depth":2},{"value":"什么是倒排索引？","url":"#什么是倒排索引","depth":3},{"value":"Term Dictionary 和 Term Index","url":"#term-dictionary-和-term-index","depth":3},{"value":"Term Index 的引入","url":"#term-index-的引入","depth":4},{"value":"FST：有限状态转移器","url":"#fst有限状态转移器","depth":4},{"value":"为什么 Elasticsearch 比 MySQL 快？","url":"#为什么-elasticsearch-比-mysql-快","depth":4},{"value":"FST 的实现","url":"#fst-的实现","depth":2},{"value":"有序集合（Ordered Sets）","url":"#有序集合ordered-sets","depth":3},{"value":"有序映射（Ordered Maps）","url":"#有序映射ordered-maps","depth":3},{"value":"构建 FST","url":"#构建-fst","depth":3},{"value":"FST 的构建实例","url":"#fst-的构建实例","depth":3},{"value":"步骤1：插入 \"mon:2\"","url":"#步骤1插入-mon2","depth":4},{"value":"步骤2：插入 \"thurs:5\"","url":"#步骤2插入-thurs5","depth":4},{"value":"步骤3：插入 \"tues:3\"","url":"#步骤3插入-tues3","depth":4},{"value":"总结","url":"#总结-13","depth":2},{"value":"参考链接","url":"#参考链接","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"ES 倒排索引讲解","datePublished":"2024-09-26T04:36:25.000Z","dateModified":"2024-09-26T04:39:54.000Z","description":"在学习其他数据库时，我们了解到索引是数据库系统中至关重要的部分，直接决定着查询的效率。Elasticsearch 之所以能够实现高速查询，主要得益于其底层 Lucene 使用了倒排索引（Inverted Index）的方式，并通过多种优化提升性能。索引的重要性什么是倒排索引？首先，我们来了解一...\r","url":"https://offernow.cn/docs/doc/📚 计算机基础/ElasticSearch/bpg1mnp8mrrl6bg7"}},{"title":"1-两数之和","date":"2024-09-26T04:28:43.000Z","urlname":"po4zfzpnv9b90scm","is_nav":false,"updated":"2024-09-29T01:08:29.000Z","not_show":false,"description":"校招面试算法题必刷之两数之和。","tags":["简单","数组\r"],"authors":["whitedew"],"type":"Post","readingTime":{"words":774,"minutes":3,"text":"3 分钟"},"slug":"doc/⬇️ 区区算法/每日一题 ⬆️/po4zfzpnv9b90scm","path":"docs/doc/⬇️ 区区算法/每日一题 ⬆️/po4zfzpnv9b90scm","filePath":"docs/doc/⬇️ 区区算法/每日一题 ⬆️/po4zfzpnv9b90scm.md","toc":[{"value":"题目","url":"#题目-2","depth":1},{"value":"分析","url":"#分析-1","depth":1},{"value":"解答-两头遍历","url":"#解答-两头遍历","depth":1},{"value":"思考","url":"#思考-2","depth":1},{"value":"解答-哈希表","url":"#解答-哈希表","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"1-两数之和","datePublished":"2024-09-26T04:28:43.000Z","dateModified":"2024-09-29T01:08:29.000Z","description":"校招面试算法题必刷之两数之和。","url":"https://offernow.cn/docs/doc/⬇️ 区区算法/每日一题 ⬆️/po4zfzpnv9b90scm"}},{"title":"2535-数组元素和与数字和的绝对差","date":"2024-09-26T04:23:38.000Z","urlname":"gfcdgx0b9ydfla1g","is_nav":false,"updated":"2024-09-27T00:14:55.000Z","not_show":false,"description":"---tags: ['简单','数组']---题目给你一个正整数数组 nums 。元素和 是 nums 中的所有元素相加求和。数字和 是 nums 中每一个元素的每一数位（重复数位需多次求和）相加求和。返回 元素和 与 数字和 的绝对差。示例 1：输入：nums = [1,15,6,3]输出：...","tags":["简单","数组"],"authors":["whitedew"],"type":"Post","readingTime":{"words":471,"minutes":2,"text":"2 分钟"},"slug":"doc/⬇️ 区区算法/每日一题 ⬆️/gfcdgx0b9ydfla1g","path":"docs/doc/⬇️ 区区算法/每日一题 ⬆️/gfcdgx0b9ydfla1g","filePath":"docs/doc/⬇️ 区区算法/每日一题 ⬆️/gfcdgx0b9ydfla1g.md","toc":[{"value":"题目","url":"#题目","depth":1},{"value":"分析","url":"#分析","depth":1},{"value":"解答","url":"#解答","depth":1},{"value":"思考","url":"#思考","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"2535-数组元素和与数字和的绝对差","datePublished":"2024-09-26T04:23:38.000Z","dateModified":"2024-09-27T00:14:55.000Z","description":"---tags: ['简单','数组']---题目给你一个正整数数组 nums 。元素和 是 nums 中的所有元素相加求和。数字和 是 nums 中每一个元素的每一数位（重复数位需多次求和）相加求和。返回 元素和 与 数字和 的绝对差。示例 1：输入：nums = [1,15,6,3]输出：...","url":"https://offernow.cn/docs/doc/⬇️ 区区算法/每日一题 ⬆️/gfcdgx0b9ydfla1g"}},{"title":"artalk的几个邮件通知模板","date":"2024-09-25T13:32:26.000Z","urlname":"xf27pqyhtdno058e","is_nav":false,"updated":"2024-09-27T06:14:40.000Z","not_show":false,"description":"artalk是一个开源的评论组件。根据自己修改以及网上收集，找到了几种好看的样式。信封样式代码：   ","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1727271225596-cf33d76c-72eb-4bdf-a802-17d4175db587.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1093,"minutes":4,"text":"4 分钟"},"slug":"doc/🔥 程序员自我修养/个人建站 🤖/xf27pqyhtdno058e","path":"docs/doc/🔥 程序员自我修养/个人建站 🤖/xf27pqyhtdno058e","filePath":"docs/doc/🔥 程序员自我修养/个人建站 🤖/xf27pqyhtdno058e.md","toc":[{"value":"信封样式","url":"#信封样式","depth":1},{"value":"简洁样式","url":"#简洁样式","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"artalk的几个邮件通知模板","datePublished":"2024-09-25T13:32:26.000Z","dateModified":"2024-09-27T06:14:40.000Z","description":"artalk是一个开源的评论组件。根据自己修改以及网上收集，找到了几种好看的样式。信封样式代码：   ","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/个人建站 🤖/xf27pqyhtdno058e"}},{"title":"2207-字符串中最多数目的子序列","date":"2024-09-25T12:34:21.000Z","urlname":"obfo90gmi892umzf","is_nav":false,"updated":"2024-09-28T04:59:50.000Z","not_show":false,"description":"---tags: ['中等','贪心','字符串','力扣']---题目给你一个下标从 0 开始的字符串 text 和另一个下标从 0 开始且长度为 2 的字符串 pattern ，两者都只包含小写英文字母。你可以在 text 中任意位置插入 一个 字符，这个插入的字符必须是 pattern[...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1727268604843-f2f506b7-7117-4c73-aec4-70ad9a7aed60.png","tags":["中等","贪心","字符串","力扣\r"],"authors":["whitedew"],"type":"Post","readingTime":{"words":1447,"minutes":5,"text":"5 分钟"},"slug":"doc/⬇️ 区区算法/每日一题 ⬆️/obfo90gmi892umzf","path":"docs/doc/⬇️ 区区算法/每日一题 ⬆️/obfo90gmi892umzf","filePath":"docs/doc/⬇️ 区区算法/每日一题 ⬆️/obfo90gmi892umzf.md","toc":[{"value":"题目","url":"#题目-1","depth":1},{"value":"初次分析","url":"#初次分析","depth":1},{"value":"v1-暴力","url":"#v1-暴力","depth":2},{"value":"优化思路","url":"#优化思路","depth":1},{"value":"v2-特殊情况","url":"#v2-特殊情况","depth":2},{"value":"贪心算法","url":"#贪心算法-1","depth":1},{"value":"v3-贪心","url":"#v3-贪心","depth":2},{"value":"思考","url":"#思考-1","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"2207-字符串中最多数目的子序列","datePublished":"2024-09-25T12:34:21.000Z","dateModified":"2024-09-28T04:59:50.000Z","description":"---tags: ['中等','贪心','字符串','力扣']---题目给你一个下标从 0 开始的字符串 text 和另一个下标从 0 开始且长度为 2 的字符串 pattern ，两者都只包含小写英文字母。你可以在 text 中任意位置插入 一个 字符，这个插入的字符必须是 pattern[...","url":"https://offernow.cn/docs/doc/⬇️ 区区算法/每日一题 ⬆️/obfo90gmi892umzf"}},{"title":"import tocbot from tocbot 提示no export？","date":"2024-09-24T14:46:30.000Z","urlname":"lavaxae7yf3771sb","is_nav":false,"updated":"2024-09-24T14:49:12.000Z","not_show":false,"description":"背景最近项目更新了tocbot，结果发现报错了··一脸懵逼，于是问了一下 AI，AI 给出了三种解释以及解决方法。解决你遇到的错误可能是因为 TypeScript 无法正确解析 tocbot 模块的导出方式。tocbot 模块使用了 CommonJS 的导出方式，而 TypeScript 默认...\r","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1727189270590-dadc7cf8-0419-4480-9d77-e1b47ec19c9e.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":495,"minutes":2,"text":"2 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/lavaxae7yf3771sb","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/lavaxae7yf3771sb","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/lavaxae7yf3771sb.md","toc":[{"value":"背景","url":"#背景-1","depth":1},{"value":"解决","url":"#解决","depth":1},{"value":"方法 1: 使用 require 导入","url":"#方法-1-使用-require-导入","depth":3},{"value":"方法 2: 使用 esModuleInterop（测试无效！）","url":"#方法-2-使用-esmoduleinterop测试无效","depth":3},{"value":"方法 3: 使用 import * as（测试有效）","url":"#方法-3-使用-import--as测试有效","depth":3},{"value":"示例代码","url":"#示例代码-20","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"import tocbot from tocbot 提示no export？","datePublished":"2024-09-24T14:46:30.000Z","dateModified":"2024-09-24T14:49:12.000Z","description":"背景最近项目更新了tocbot，结果发现报错了··一脸懵逼，于是问了一下 AI，AI 给出了三种解释以及解决方法。解决你遇到的错误可能是因为 TypeScript 无法正确解析 tocbot 模块的导出方式。tocbot 模块使用了 CommonJS 的导出方式，而 TypeScript 默认...\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/lavaxae7yf3771sb"}},{"title":"懵了,公司实行双休，员工强烈反对···","date":"2024-09-24T13:37:25.000Z","urlname":"okwx88a9hqx6s4ri","is_nav":false,"updated":"2024-09-24T13:37:41.000Z","not_show":false,"description":"大家好，我是白露啊。最近有个事情闹得沸沸扬扬，说是某知名互联网公司要实行双休了。这本该是件大好事，但结果却引发了员工的强烈反对。这是什么操作？双休还有人不愿意？别急，我们慢慢道来。众所周知，PDD 公司一直以来都被戏称为\"血汗厂\"。为啥？因为它的工作强度那叫一个高，单休都算是福利了。员工们天天...\r","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1727182566811-1db1a5a4-caad-44a6-af01-3613784de2f8.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1074,"minutes":4,"text":"4 分钟"},"slug":"doc/💹 大厂面经/互联网新闻/2024 7 月/okwx88a9hqx6s4ri","path":"docs/doc/💹 大厂面经/互联网新闻/2024 7 月/okwx88a9hqx6s4ri","filePath":"docs/doc/💹 大厂面经/互联网新闻/2024 7 月/okwx88a9hqx6s4ri.md","toc":[{"value":"什么是CSRF攻击，如何避免？","url":"#什么是csrf攻击如何避免-1","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"懵了,公司实行双休，员工强烈反对···","datePublished":"2024-09-24T13:37:25.000Z","dateModified":"2024-09-24T13:37:41.000Z","description":"大家好，我是白露啊。最近有个事情闹得沸沸扬扬，说是某知名互联网公司要实行双休了。这本该是件大好事，但结果却引发了员工的强烈反对。这是什么操作？双休还有人不愿意？别急，我们慢慢道来。众所周知，PDD 公司一直以来都被戏称为\"血汗厂\"。为啥？因为它的工作强度那叫一个高，单休都算是福利了。员工们天天...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/互联网新闻/2024 7 月/okwx88a9hqx6s4ri"}},{"title":"每日一题 ⬆️","date":"2024-09-24T07:39:39.000Z","urlname":"lprgqgib9yvhskqy","is_nav":true,"nav_path":"algo-daily","updated":"2024-09-28T03:56:59.000Z","not_show":false,"description":"---is_nav: truenav_path: algo-daily---Hello World!欢迎来到《算法之道：每日一题，提升思维》专栏！在这里，我们每天将为您讲解一道来自力扣、牛客或网上的精选算法题。无论您是算法初学者还是经验丰富的开发者，这个专栏都将为您提供宝贵的学习机会。通过每天...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":542,"minutes":2,"text":"2 分钟"},"slug":"doc/⬇️ 区区算法/lprgqgib9yvhskqy","path":"docs/doc/⬇️ 区区算法/lprgqgib9yvhskqy","filePath":"docs/doc/⬇️ 区区算法/lprgqgib9yvhskqy.md","toc":[{"value":"Hello World!","url":"#hello-world","depth":1},{"value":"技巧","url":"#技巧","depth":1},{"value":"最后","url":"#最后","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"每日一题 ⬆️","datePublished":"2024-09-24T07:39:39.000Z","dateModified":"2024-09-28T03:56:59.000Z","description":"---is_nav: truenav_path: algo-daily---Hello World!欢迎来到《算法之道：每日一题，提升思维》专栏！在这里，我们每天将为您讲解一道来自力扣、牛客或网上的精选算法题。无论您是算法初学者还是经验丰富的开发者，这个专栏都将为您提供宝贵的学习机会。通过每天...","url":"https://offernow.cn/docs/doc/⬇️ 区区算法/lprgqgib9yvhskqy"}},{"title":"Golang各版本特性","date":"2024-09-18T07:10:23.000Z","urlname":"kpowsnfa74htuuep","is_nav":false,"nav_path":"go_version\r","updated":"2024-09-18T07:13:27.000Z","not_show":false,"description":"---is_nav: falsenav_path: go_version---Go 1.22循环变量改进：解决for循环中循环变量意外共享问题，for range中的循环变量在每次迭代中有自己的变量，go work增加支持vendor特性，go mod init不再考虑GOPATH时代的包依赖...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1593,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/Go/kpowsnfa74htuuep","path":"docs/doc/💻 编程语言/Go/kpowsnfa74htuuep","filePath":"docs/doc/💻 编程语言/Go/kpowsnfa74htuuep.md","toc":[{"value":"Go 1.22","url":"#go-122","depth":1},{"value":"Go 1.21","url":"#go-121","depth":1},{"value":"Go 1.20：","url":"#go-120","depth":1},{"value":"Go 1.19","url":"#go-119","depth":1},{"value":"Go 1.18","url":"#go-118","depth":1},{"value":"Go 1.17","url":"#go-117","depth":1},{"value":"Go 1.16","url":"#go-116","depth":1},{"value":"Go 1.15","url":"#go-115","depth":1},{"value":"Go 1.14","url":"#go-114","depth":1},{"value":"Go 1.13","url":"#go-113","depth":1},{"value":"Go 1.12","url":"#go-112","depth":1},{"value":"Go 1.11","url":"#go-111","depth":1},{"value":"Go 1.10","url":"#go-110","depth":1},{"value":"Go 1.9","url":"#go-19","depth":1},{"value":"Go 1.8","url":"#go-18","depth":1},{"value":"Go 1.7","url":"#go-17","depth":1},{"value":"Go 1.6","url":"#go-16","depth":1},{"value":"Go 1.5","url":"#go-15","depth":1},{"value":"Go 1.4","url":"#go-14","depth":1},{"value":"Go 1.3","url":"#go-13","depth":1},{"value":"Go 1.2","url":"#go-12","depth":1},{"value":"Go 1.1","url":"#go-11","depth":1},{"value":"Go 1.0","url":"#go-10","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Golang各版本特性","datePublished":"2024-09-18T07:10:23.000Z","dateModified":"2024-09-18T07:13:27.000Z","description":"---is_nav: falsenav_path: go_version---Go 1.22循环变量改进：解决for循环中循环变量意外共享问题，for range中的循环变量在每次迭代中有自己的变量，go work增加支持vendor特性，go mod init不再考虑GOPATH时代的包依赖...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/kpowsnfa74htuuep"}},{"title":"golang中stringbuilder字符串拼接性能对比","date":"2024-09-12T02:25:26.000Z","urlname":"ml8rzewka106hl4m","is_nav":false,"updated":"2024-09-12T02:34:33.000Z","not_show":false,"description":"golang的str直接相加和strbuilder性能差距有多大？对比测试在 Go 语言中，string是不可变类型，使用+操作符连接字符串时，每次操作都会创建一个新的字符串，涉及到内存分配和数据复制，对于大量的字符串连接操作，性能可能会比较低。而strings.Builder是为了高效地构建...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1499,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/Go/🎁 最佳实践/ml8rzewka106hl4m","path":"docs/doc/💻 编程语言/Go/🎁 最佳实践/ml8rzewka106hl4m","filePath":"docs/doc/💻 编程语言/Go/🎁 最佳实践/ml8rzewka106hl4m.md","toc":[{"value":"对比测试","url":"#对比测试","depth":1},{"value":"分析","url":"#分析-2","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"golang中stringbuilder字符串拼接性能对比","datePublished":"2024-09-12T02:25:26.000Z","dateModified":"2024-09-12T02:34:33.000Z","description":"golang的str直接相加和strbuilder性能差距有多大？对比测试在 Go 语言中，string是不可变类型，使用+操作符连接字符串时，每次操作都会创建一个新的字符串，涉及到内存分配和数据复制，对于大量的字符串连接操作，性能可能会比较低。而strings.Builder是为了高效地构建...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🎁 最佳实践/ml8rzewka106hl4m"}},{"title":"第五章：模块与包","date":"2024-09-10T11:06:18.000Z","urlname":"gz8r0q1cnpo5qprm","is_nav":false,"updated":"2024-09-18T08:09:46.000Z","not_show":false,"description":"模块和包是组织和管理大型程序的重要工具。它们允许我们将代码分割成小的、可管理的部分，提高代码的可重用性和可维护性。5.1 模块的概念模块是一种将相关函数和变量组织在一起的方式，它提供了一个独立的命名空间，有助于避免全局变量的污染。模块的优势：代码组织：相关功能集中在一起。命名空间管理：避免命名...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":919,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Lua/gz8r0q1cnpo5qprm","path":"docs/doc/💻 编程语言/Lua/gz8r0q1cnpo5qprm","filePath":"docs/doc/💻 编程语言/Lua/gz8r0q1cnpo5qprm.md","toc":[{"value":"5.1 模块的概念","url":"#51-模块的概念","depth":2},{"value":"模块的优势：","url":"#模块的优势","depth":3},{"value":"5.2 创建和使用模块","url":"#52-创建和使用模块","depth":2},{"value":"基本模块结构","url":"#基本模块结构","depth":3},{"value":"使用模块","url":"#使用模块","depth":3},{"value":"5.3 require 函数","url":"#53-require-函数","depth":2},{"value":"避免循环依赖","url":"#避免循环依赖","depth":3},{"value":"5.4 包的概念和使用","url":"#54-包的概念和使用","depth":2},{"value":"创建包结构","url":"#创建包结构","depth":3},{"value":"5.5 模块的加载路径","url":"#55-模块的加载路径","depth":2},{"value":"修改搜索路径","url":"#修改搜索路径","depth":3},{"value":"5.6 编写可重用的模块","url":"#56-编写可重用的模块","depth":2},{"value":"设计模块 API","url":"#设计模块-api","depth":3},{"value":"5.7 标准库模块介绍","url":"#57-标准库模块介绍","depth":2},{"value":"5.8 实践项目：简单的日志系统","url":"#58-实践项目简单的日志系统","depth":2},{"value":"练习","url":"#练习","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第五章：模块与包","datePublished":"2024-09-10T11:06:18.000Z","dateModified":"2024-09-18T08:09:46.000Z","description":"模块和包是组织和管理大型程序的重要工具。它们允许我们将代码分割成小的、可管理的部分，提高代码的可重用性和可维护性。5.1 模块的概念模块是一种将相关函数和变量组织在一起的方式，它提供了一个独立的命名空间，有助于避免全局变量的污染。模块的优势：代码组织：相关功能集中在一起。命名空间管理：避免命名...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Lua/gz8r0q1cnpo5qprm"}},{"title":"第三章：控制结构与函数","date":"2024-09-10T11:00:33.000Z","urlname":"pg1rblzimdlhg4lt","is_nav":false,"updated":"2024-09-18T08:09:20.000Z","not_show":false,"description":"控制结构和函数是任何编程语言的核心部分，Lua也不例外。本章将详细介绍Lua中的条件语句、循环结构以及函数的定义和使用。3.1 条件语句 (if-else)条件语句允许程序根据不同的条件执行不同的代码块。Lua提供了灵活的if-else结构来实现条件判断。基本if语句最简单的if语句语法如下：...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1118,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Lua/pg1rblzimdlhg4lt","path":"docs/doc/💻 编程语言/Lua/pg1rblzimdlhg4lt","filePath":"docs/doc/💻 编程语言/Lua/pg1rblzimdlhg4lt.md","toc":[{"value":"3.1 条件语句 (if-else)","url":"#31-条件语句-if-else","depth":2},{"value":"基本if语句","url":"#基本if语句","depth":3},{"value":"if-else语句","url":"#if-else语句","depth":3},{"value":"if-elseif-else多重条件语句","url":"#if-elseif-else多重条件语句","depth":3},{"value":"嵌套条件语句","url":"#嵌套条件语句","depth":3},{"value":"使用and和or进行复合条件判断","url":"#使用and和or进行复合条件判断","depth":3},{"value":"3.2 循环 (while, repeat-until, for)","url":"#32-循环-while-repeat-until-for","depth":2},{"value":"while循环","url":"#while循环","depth":3},{"value":"repeat-until循环","url":"#repeat-until循环","depth":3},{"value":"数值for循环","url":"#数值for循环","depth":3},{"value":"泛型for循环","url":"#泛型for循环","depth":3},{"value":"循环控制：break和goto","url":"#循环控制break和goto","depth":3},{"value":"3.3 函数定义和调用","url":"#33-函数定义和调用","depth":2},{"value":"基本函数定义和调用","url":"#基本函数定义和调用","depth":3},{"value":"局部函数和全局函数","url":"#局部函数和全局函数","depth":3},{"value":"匿名函数","url":"#匿名函数","depth":3},{"value":"函数作为参数","url":"#函数作为参数","depth":3},{"value":"3.4 参数和返回值","url":"#34-参数和返回值","depth":2},{"value":"可变参数函数","url":"#可变参数函数","depth":3},{"value":"多返回值","url":"#多返回值","depth":3},{"value":"3.5 闭包和递归","url":"#35-闭包和递归","depth":2},{"value":"闭包","url":"#闭包","depth":3},{"value":"递归","url":"#递归","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第三章：控制结构与函数","datePublished":"2024-09-10T11:00:33.000Z","dateModified":"2024-09-18T08:09:20.000Z","description":"控制结构和函数是任何编程语言的核心部分，Lua也不例外。本章将详细介绍Lua中的条件语句、循环结构以及函数的定义和使用。3.1 条件语句 (if-else)条件语句允许程序根据不同的条件执行不同的代码块。Lua提供了灵活的if-else结构来实现条件判断。基本if语句最简单的if语句语法如下：...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Lua/pg1rblzimdlhg4lt"}},{"title":"第一章：Lua简介与环境搭建","date":"2024-09-10T10:53:07.000Z","urlname":"yronrdwammftmsd9","is_nav":false,"updated":"2024-09-18T08:07:22.000Z","not_show":false,"description":"1.1 Lua的历史和特点Lua是一种轻量级、高效、可嵌入的脚本语言，由巴西里约热内卢天主教大学（PUC-Rio）的一个研究小组于1993年开发。Lua这个名字在葡萄牙语中意为\"月亮\"。Lua的主要特点：轻量级：Lua的解释器和标准库的总大小通常不超过500KB，非常适合嵌入到其他应用程序中。...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":746,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/Lua/yronrdwammftmsd9","path":"docs/doc/💻 编程语言/Lua/yronrdwammftmsd9","filePath":"docs/doc/💻 编程语言/Lua/yronrdwammftmsd9.md","toc":[{"value":"1.1 Lua的历史和特点","url":"#11-lua的历史和特点","depth":2},{"value":"Lua的主要特点：","url":"#lua的主要特点","depth":3},{"value":"1.2 安装和配置Lua环境","url":"#12-安装和配置lua环境","depth":2},{"value":"Windows环境安装：","url":"#windows环境安装","depth":3},{"value":"Mac OS X环境安装：","url":"#mac-os-x环境安装","depth":3},{"value":"Linux环境安装：","url":"#linux环境安装","depth":3},{"value":"验证安装：","url":"#验证安装","depth":3},{"value":"1.3 第一个Lua程序","url":"#13-第一个lua程序","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第一章：Lua简介与环境搭建","datePublished":"2024-09-10T10:53:07.000Z","dateModified":"2024-09-18T08:07:22.000Z","description":"1.1 Lua的历史和特点Lua是一种轻量级、高效、可嵌入的脚本语言，由巴西里约热内卢天主教大学（PUC-Rio）的一个研究小组于1993年开发。Lua这个名字在葡萄牙语中意为\"月亮\"。Lua的主要特点：轻量级：Lua的解释器和标准库的总大小通常不超过500KB，非常适合嵌入到其他应用程序中。...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Lua/yronrdwammftmsd9"}},{"title":"Lua","date":"2024-09-10T10:45:55.000Z","urlname":"ltmodb8b1a4v48u8","is_nav":false,"nav_path":"lua\r","updated":"2024-09-10T10:53:23.000Z","not_show":false,"description":"---nav_path: luaLua 是一种轻量级、高效、可嵌入的脚本语言。以下是 Lua 的一些主要特点和基本用法：基本语法：-- 这是单行注释  --[[     这是多行注释 ]]  -- 变量声明（默认为全局变量） x = 10  -- 局部变量声明 local y = 20  --...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/d9c0ae33f346a7d8b924cca04e76cebd.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":958,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/ltmodb8b1a4v48u8","path":"docs/doc/💻 编程语言/ltmodb8b1a4v48u8","filePath":"docs/doc/💻 编程语言/ltmodb8b1a4v48u8.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Lua","datePublished":"2024-09-10T10:45:55.000Z","dateModified":"2024-09-10T10:53:23.000Z","description":"---nav_path: luaLua 是一种轻量级、高效、可嵌入的脚本语言。以下是 Lua 的一些主要特点和基本用法：基本语法：-- 这是单行注释  --[[     这是多行注释 ]]  -- 变量声明（默认为全局变量） x = 10  -- 局部变量声明 local y = 20  --...","url":"https://offernow.cn/docs/doc/💻 编程语言/ltmodb8b1a4v48u8"}},{"title":"收钱吧面试真题","date":"2024-08-30T08:23:16.000Z","urlname":"ubg35bic4t7bekms","is_nav":false,"updated":"2024-08-30T09:41:43.000Z","not_show":false,"description":"面试问题什么叫线程安全Java里面有哪些基本类型，对应的包装类有哪些什么场景下使用包装类包装类线程安全吗？ 除了不能修改值，还不能修改什么 String中split方法不是修改String，为啥能保证线程安全线程池的参数创建线程时，是优先把线程最大数放满还是优先放入队列 IO密集型，如何设置参...\r","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/479ed6eea08aca112f7582a5bacc2460.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":10237,"minutes":34,"text":"34 分钟"},"slug":"doc/💹 大厂面经/面试真题/ubg35bic4t7bekms","path":"docs/doc/💹 大厂面经/面试真题/ubg35bic4t7bekms","filePath":"docs/doc/💹 大厂面经/面试真题/ubg35bic4t7bekms.md","toc":[{"value":"面试问题","url":"#面试问题-6","depth":1},{"value":"参考回答","url":"#参考回答-9","depth":1},{"value":"线程安全","url":"#线程安全","depth":2},{"value":"Java基本类型和包装类","url":"#java基本类型和包装类","depth":2},{"value":"包装类使用场景","url":"#包装类使用场景","depth":2},{"value":"包装类的线程安全性","url":"#包装类的线程安全性","depth":2},{"value":"包装类的不可变性","url":"#包装类的不可变性","depth":2},{"value":"String的线程安全性","url":"#string的线程安全性","depth":2},{"value":"线程池参数","url":"#线程池参数","depth":2},{"value":"线程池的任务分配策略","url":"#线程池的任务分配策略","depth":2},{"value":"IO密集型任务的线程池配置","url":"#io密集型任务的线程池配置","depth":2},{"value":"保证核心线程不会销毁","url":"#保证核心线程不会销毁","depth":2},{"value":"Java POJO的hashCode和equals方法","url":"#java-pojo的hashcode和equals方法","depth":2},{"value":"重写hashCode和equals的其他情况","url":"#重写hashcode和equals的其他情况","depth":2},{"value":"数组length和字符串length的区别","url":"#数组length和字符串length的区别","depth":2},{"value":"数组元素的存储方式","url":"#数组元素的存储方式","depth":2},{"value":"Java反射","url":"#java反射","depth":2},{"value":"ClassLoader和Class的区别","url":"#classloader和class的区别","depth":2},{"value":"单例模式","url":"#单例模式","depth":2},{"value":"最简单的单例实现","url":"#最简单的单例实现","depth":2},{"value":"HTTP版本区别","url":"#http版本区别","depth":2},{"value":"Java网络编程Socket","url":"#java网络编程socket","depth":2},{"value":"数据库ACID","url":"#数据库acid","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"收钱吧面试真题","datePublished":"2024-08-30T08:23:16.000Z","dateModified":"2024-08-30T09:41:43.000Z","description":"面试问题什么叫线程安全Java里面有哪些基本类型，对应的包装类有哪些什么场景下使用包装类包装类线程安全吗？ 除了不能修改值，还不能修改什么 String中split方法不是修改String，为啥能保证线程安全线程池的参数创建线程时，是优先把线程最大数放满还是优先放入队列 IO密集型，如何设置参...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/ubg35bic4t7bekms"}},{"title":"操作系统面试必问 50 题！","date":"2024-08-28T08:10:53.000Z","urlname":"gyuw9ixg30htr4y6","is_nav":false,"updated":"2024-09-25T12:26:46.000Z","not_show":false,"description":"问题一览什么是操作系统？操作系统主要有哪些功能？常见的操作系统有哪些？什么是用户态和内核态？为什么要有用户态和内核态？只有一个内核态不行么？用户态和内核态是如何切换的？什么是系统调用？系统调用的过程了解吗？什么是进程和线程？进程和线程的区别是什么？有了进程为什么还需要线程？为什么要使用多线程？...\r","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/3a0131b1c5bfdbec608eb40353411248.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":7969,"minutes":27,"text":"27 分钟"},"slug":"doc/💹 大厂面经/gyuw9ixg30htr4y6","path":"docs/doc/💹 大厂面经/gyuw9ixg30htr4y6","filePath":"docs/doc/💹 大厂面经/gyuw9ixg30htr4y6.md","toc":[{"value":"问题一览","url":"#问题一览","depth":1},{"value":"什么是操作系统？","url":"#什么是操作系统","depth":1},{"value":"操作系统主要有哪些功能？","url":"#操作系统主要有哪些功能","depth":1},{"value":"常见的操作系统有哪些？","url":"#常见的操作系统有哪些","depth":1},{"value":"什么是用户态和内核态？","url":"#什么是用户态和内核态","depth":1},{"value":"为什么要有用户态和内核态？只有一个内核态不行么？","url":"#为什么要有用户态和内核态只有一个内核态不行么","depth":1},{"value":"用户态和内核态是如何切换的？","url":"#用户态和内核态是如何切换的","depth":1},{"value":"什么是系统调用？","url":"#什么是系统调用","depth":1},{"value":"系统调用的过程了解吗？","url":"#系统调用的过程了解吗","depth":1},{"value":"什么是进程和线程？","url":"#什么是进程和线程","depth":1},{"value":"进程和线程的区别是什么？","url":"#进程和线程的区别是什么","depth":1},{"value":"有了进程为什么还需要线程？","url":"#有了进程为什么还需要线程","depth":1},{"value":"为什么要使用多线程？","url":"#为什么要使用多线程","depth":1},{"value":"线程间的同步的方式有哪些？","url":"#线程间的同步的方式有哪些","depth":1},{"value":"PCB是什么？包含哪些信息？","url":"#pcb是什么包含哪些信息","depth":1},{"value":"进程有哪几种状态？","url":"#进程有哪几种状态","depth":1},{"value":"进程间的通信方式有哪些？","url":"#进程间的通信方式有哪些","depth":1},{"value":"进程的调度算法有哪些？","url":"#进程的调度算法有哪些","depth":1},{"value":"什么是僵尸进程和孤儿进程？","url":"#什么是僵尸进程和孤儿进程","depth":1},{"value":"什么是死锁？","url":"#什么是死锁","depth":1},{"value":"能列举一个操作系统发生死锁的例子吗？","url":"#能列举一个操作系统发生死锁的例子吗","depth":1},{"value":"产生死锁的四个必要条件是什么？","url":"#产生死锁的四个必要条件是什么","depth":1},{"value":"能写一个模拟产生死锁的代码吗？","url":"#能写一个模拟产生死锁的代码吗","depth":1},{"value":"解决死锁的方法有哪些？","url":"#解决死锁的方法有哪些","depth":1},{"value":"什么是内存碎片？","url":"#什么是内存碎片","depth":1},{"value":"常见的内存管理方式有哪些？","url":"#常见的内存管理方式有哪些","depth":1},{"value":"什么是虚拟内存？有什么用？","url":"#什么是虚拟内存有什么用","depth":1},{"value":"没有虚拟内存有什么问题？","url":"#没有虚拟内存有什么问题","depth":1},{"value":"什么是虚拟地址和物理地址？什么是虚拟地址空间和物理地址空间？","url":"#什么是虚拟地址和物理地址什么是虚拟地址空间和物理地址空间","depth":1},{"value":"虚拟地址与物理内存地址是如何映射的？","url":"#虚拟地址与物理内存地址是如何映射的","depth":1},{"value":"段表有什么用？地址翻译过程是怎样的？","url":"#段表有什么用地址翻译过程是怎样的","depth":1},{"value":"通过段号一定要找到对应的段表项吗？得到最终的物理地址后对应的物理内存一定存在吗？","url":"#通过段号一定要找到对应的段表项吗得到最终的物理地址后对应的物理内存一定存在吗","depth":1},{"value":"分段机制为什么会导致内存外部碎片？","url":"#分段机制为什么会导致内存外部碎片","depth":1},{"value":"页表有什么用？地址翻译过程是怎样的？","url":"#页表有什么用地址翻译过程是怎样的","depth":1},{"value":"通过虚拟页号一定要找到对应的物理页号吗？找到了物理页号得到最终的物理地址后对应的物理页一定存在吗？","url":"#通过虚拟页号一定要找到对应的物理页号吗找到了物理页号得到最终的物理地址后对应的物理页一定存在吗","depth":1},{"value":"单级页表有什么问题？为什么需要多级页表？","url":"#单级页表有什么问题为什么需要多级页表","depth":1},{"value":"TLB有什么用？使用TLB之后的地址翻译流程是怎样的？","url":"#tlb有什么用使用tlb之后的地址翻译流程是怎样的","depth":1},{"value":"换页机制有什么用？","url":"#换页机制有什么用","depth":1},{"value":"什么是页缺失？","url":"#什么是页缺失","depth":1},{"value":"常见的页面置换算法有哪些？","url":"#常见的页面置换算法有哪些","depth":1},{"value":"FIFO页面置换算法性能为何不好？","url":"#fifo页面置换算法性能为何不好","depth":1},{"value":"哪一种页面置换算法实际用的比较多？","url":"#哪一种页面置换算法实际用的比较多","depth":1},{"value":"分页机制和分段机制有哪些共同点和区别？","url":"#分页机制和分段机制有哪些共同点和区别","depth":1},{"value":"局部性原理是什么？","url":"#局部性原理是什么","depth":1},{"value":"文件系统主要做了什么？","url":"#文件系统主要做了什么","depth":1},{"value":"硬链接和软链接有什么区别？","url":"#硬链接和软链接有什么区别","depth":1},{"value":"硬链接为什么不能跨文件系统？","url":"#硬链接为什么不能跨文件系统","depth":1},{"value":"提高文件系统性能的方式有哪些？","url":"#提高文件系统性能的方式有哪些","depth":1},{"value":"常见的磁盘调度算法有哪些？","url":"#常见的磁盘调度算法有哪些","depth":1},{"value":"","url":"#-4","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"操作系统面试必问 50 题！","datePublished":"2024-08-28T08:10:53.000Z","dateModified":"2024-09-25T12:26:46.000Z","description":"问题一览什么是操作系统？操作系统主要有哪些功能？常见的操作系统有哪些？什么是用户态和内核态？为什么要有用户态和内核态？只有一个内核态不行么？用户态和内核态是如何切换的？什么是系统调用？系统调用的过程了解吗？什么是进程和线程？进程和线程的区别是什么？有了进程为什么还需要线程？为什么要使用多线程？...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/gyuw9ixg30htr4y6"}},{"title":"操作系统面试必问 50 题！","date":"2024-08-28T08:10:53.000Z","urlname":"gyuw9ixg30htr4y6","is_nav":false,"updated":"2024-08-28T09:39:52.000Z","not_show":false,"description":"问题一览什么是操作系统？操作系统主要有哪些功能？常见的操作系统有哪些？什么是用户态和内核态？为什么要有用户态和内核态？只有一个内核态不行么？用户态和内核态是如何切换的？什么是系统调用？系统调用的过程了解吗？什么是进程和线程？进程和线程的区别是什么？有了进程为什么还需要线程？为什么要使用多线程？...\r","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/3a0131b1c5bfdbec608eb40353411248.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":7959,"minutes":27,"text":"27 分钟"},"slug":"doc/📚 计算机基础/操作系统/gyuw9ixg30htr4y6","path":"docs/doc/📚 计算机基础/操作系统/gyuw9ixg30htr4y6","filePath":"docs/doc/📚 计算机基础/操作系统/gyuw9ixg30htr4y6.md","toc":[{"value":"问题一览","url":"#问题一览-1","depth":1},{"value":"什么是操作系统？","url":"#什么是操作系统-1","depth":1},{"value":"操作系统主要有哪些功能？","url":"#操作系统主要有哪些功能-1","depth":1},{"value":"什么是用户态和内核态？","url":"#什么是用户态和内核态-1","depth":1},{"value":"为什么要有用户态和内核态？只有一个内核态不行么？","url":"#为什么要有用户态和内核态只有一个内核态不行么-1","depth":1},{"value":"用户态和内核态是如何切换的？","url":"#用户态和内核态是如何切换的-1","depth":1},{"value":"什么是系统调用？","url":"#什么是系统调用-1","depth":1},{"value":"系统调用的过程了解吗？","url":"#系统调用的过程了解吗-1","depth":1},{"value":"什么是进程和线程？","url":"#什么是进程和线程-1","depth":1},{"value":"进程和线程的区别是什么？","url":"#进程和线程的区别是什么-1","depth":1},{"value":"为什么要使用多线程？","url":"#为什么要使用多线程-1","depth":1},{"value":"线程间的同步的方式有哪些？","url":"#线程间的同步的方式有哪些-1","depth":1},{"value":"PCB是什么？包含哪些信息？","url":"#pcb是什么包含哪些信息-1","depth":1},{"value":"进程有哪几种状态？","url":"#进程有哪几种状态-1","depth":1},{"value":"进程间的通信方式有哪些？","url":"#进程间的通信方式有哪些-1","depth":1},{"value":"进程的调度算法有哪些？","url":"#进程的调度算法有哪些-1","depth":1},{"value":"什么是僵尸进程和孤儿进程？","url":"#什么是僵尸进程和孤儿进程-1","depth":1},{"value":"什么是死锁？","url":"#什么是死锁-1","depth":1},{"value":"能列举一个操作系统发生死锁的例子吗？","url":"#能列举一个操作系统发生死锁的例子吗-1","depth":1},{"value":"产生死锁的四个必要条件是什么？","url":"#产生死锁的四个必要条件是什么-1","depth":1},{"value":"能写一个模拟产生死锁的代码吗？","url":"#能写一个模拟产生死锁的代码吗-1","depth":1},{"value":"解决死锁的方法有哪些？","url":"#解决死锁的方法有哪些-1","depth":1},{"value":"常见的内存管理方式有哪些？","url":"#常见的内存管理方式有哪些-1","depth":1},{"value":"什么是虚拟内存？有什么用？","url":"#什么是虚拟内存有什么用-1","depth":1},{"value":"没有虚拟内存有什么问题？","url":"#没有虚拟内存有什么问题-1","depth":1},{"value":"什么是虚拟地址和物理地址？什么是虚拟地址空间和物理地址空间？","url":"#什么是虚拟地址和物理地址什么是虚拟地址空间和物理地址空间-1","depth":1},{"value":"虚拟地址与物理内存地址是如何映射的？","url":"#虚拟地址与物理内存地址是如何映射的-1","depth":1},{"value":"段表有什么用？地址翻译过程是怎样的？","url":"#段表有什么用地址翻译过程是怎样的-1","depth":1},{"value":"分段机制为什么会导致内存外部碎片？","url":"#分段机制为什么会导致内存外部碎片-1","depth":1},{"value":"页表有什么用？地址翻译过程是怎样的？","url":"#页表有什么用地址翻译过程是怎样的-1","depth":1},{"value":"通过虚拟页号一定要找到对应的物理页号吗？找到了物理页号得到最终的物理地址后对应的物理页一定存在吗？","url":"#通过虚拟页号一定要找到对应的物理页号吗找到了物理页号得到最终的物理地址后对应的物理页一定存在吗-1","depth":1},{"value":"单级页表有什么问题？为什么需要多级页表？","url":"#单级页表有什么问题为什么需要多级页表-1","depth":1},{"value":"TLB有什么用？使用TLB之后的地址翻译流程是怎样的？","url":"#tlb有什么用使用tlb之后的地址翻译流程是怎样的-1","depth":1},{"value":"换页机制有什么用？","url":"#换页机制有什么用-1","depth":1},{"value":"什么是页缺失？","url":"#什么是页缺失-1","depth":1},{"value":"常见的页面置换算法有哪些？","url":"#常见的页面置换算法有哪些-1","depth":1},{"value":"FIFO页面置换算法性能为何不好？","url":"#fifo页面置换算法性能为何不好-1","depth":1},{"value":"哪一种页面置换算法实际用的比较多？","url":"#哪一种页面置换算法实际用的比较多-1","depth":1},{"value":"分页机制和分段机制有哪些共同点和区别？","url":"#分页机制和分段机制有哪些共同点和区别-1","depth":1},{"value":"局部性原理是什么？","url":"#局部性原理是什么-1","depth":1},{"value":"文件系统主要做了什么？","url":"#文件系统主要做了什么-1","depth":1},{"value":"硬链接和软链接有什么区别？","url":"#硬链接和软链接有什么区别-1","depth":1},{"value":"硬链接为什么不能跨文件系统？","url":"#硬链接为什么不能跨文件系统-1","depth":1},{"value":"提高文件系统性能的方式有哪些？","url":"#提高文件系统性能的方式有哪些-1","depth":1},{"value":"常见的磁盘调度算法有哪些？","url":"#常见的磁盘调度算法有哪些-1","depth":1},{"value":"","url":"#-12","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"操作系统面试必问 50 题！","datePublished":"2024-08-28T08:10:53.000Z","dateModified":"2024-08-28T09:39:52.000Z","description":"问题一览什么是操作系统？操作系统主要有哪些功能？常见的操作系统有哪些？什么是用户态和内核态？为什么要有用户态和内核态？只有一个内核态不行么？用户态和内核态是如何切换的？什么是系统调用？系统调用的过程了解吗？什么是进程和线程？进程和线程的区别是什么？有了进程为什么还需要线程？为什么要使用多线程？...\r","url":"https://offernow.cn/docs/doc/📚 计算机基础/操作系统/gyuw9ixg30htr4y6"}},{"title":"《学会提问》读书笔记","date":"2024-08-23T04:15:55.000Z","urlname":"wcur7204xegeks3o","is_nav":false,"updated":"2024-09-28T04:03:39.000Z","not_show":false,"cover":"https://cdn.nlark.com/yuque/0/2024/jpeg/22382235/1724386717240-2896e294-700a-4a60-ab2b-60224d10113e.jpeg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":11,"minutes":0,"text":"小于一分钟"},"slug":"doc/🔥 程序员自我修养/个人成长🔝/wcur7204xegeks3o","path":"docs/doc/🔥 程序员自我修养/个人成长🔝/wcur7204xegeks3o","filePath":"docs/doc/🔥 程序员自我修养/个人成长🔝/wcur7204xegeks3o.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"《学会提问》读书笔记","datePublished":"2024-08-23T04:15:55.000Z","dateModified":"2024-09-28T04:03:39.000Z","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/个人成长🔝/wcur7204xegeks3o"}},{"title":"计算机网络面试必问","date":"2024-08-07T04:53:57.000Z","urlname":"kxspepu7t1b7783v","is_nav":false,"updated":"2024-10-04T01:08:21.000Z","not_show":false,"description":"HTTP常用的状态码及其含义HTTP状态码是用来表示服务器响应客户端请求的状态。常用的状态码分为以下几类：状态码含义200OK：请求成功，服务器已返回所请求的数据。201Created：请求成功并且服务器创建了新的资源。204No Content：服务器成功处理了请求，但没有返回任何内容。30...\r","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1722953399419-c3811ae6-707c-48c1-8a48-d32f46d24b40.png?x-oss-process=image%2Fformat%2Cwebp","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":18349,"minutes":61,"text":"61 分钟"},"slug":"doc/💹 大厂面经/kxspepu7t1b7783v","path":"docs/doc/💹 大厂面经/kxspepu7t1b7783v","filePath":"docs/doc/💹 大厂面经/kxspepu7t1b7783v.md","toc":[{"value":"HTTP常用的状态码及其含义","url":"#http常用的状态码及其含义","depth":1},{"value":"HTTP常用的请求方式，区别和用途","url":"#http常用的请求方式区别和用途","depth":1},{"value":"端口及对应的服务","url":"#端口及对应的服务","depth":1},{"value":"计算机网络体系结构","url":"#计算机网络体系结构","depth":1},{"value":"OSI七层模型","url":"#osi七层模型","depth":2},{"value":"TCP/IP四层模型","url":"#tcpip四层模型","depth":2},{"value":"如何理解HTTP协议是无状态的?","url":"#如何理解http协议是无状态的","depth":1},{"value":"你能详细说明一下如何在HTTP这种无状态协议上实现有状态的交互吗","url":"#你能详细说明一下如何在http这种无状态协议上实现有状态的交互吗","depth":2},{"value":"详细说明一下HTTP/1.0、HTTP/1.1和HTTP/2.0的主要区别","url":"#详细说明一下http10http11和http20的主要区别","depth":1},{"value":"你能详细解释一下HTTPS的工作流程吗？","url":"#你能详细解释一下https的工作流程吗","depth":1},{"value":"你能详细说明一下GET和POST这两种常用的HTTP请求方法的区别吗？","url":"#你能详细说明一下get和post这两种常用的http请求方法的区别吗","depth":1},{"value":"什么是跨域请求，为什么会有跨域限制，以及如何解决跨域问题吗？","url":"#什么是跨域请求为什么会有跨域限制以及如何解决跨域问题吗","depth":1},{"value":"HTTP 如何实现长连接？在什么时候会超时？","url":"#http-如何实现长连接在什么时候会超时","depth":1},{"value":"什么是数字签名？什么是数字证书？","url":"#什么是数字签名什么是数字证书","depth":1},{"value":"对称加密与非对称加密有什么区别？","url":"#对称加密与非对称加密有什么区别","depth":1},{"value":"说说DNS的解析过程？","url":"#说说dns的解析过程","depth":1},{"value":"什么是CSRF攻击，如何避免？","url":"#什么是csrf攻击如何避免","depth":1},{"value":"WebSocket与socket的区别","url":"#websocket与socket的区别","depth":1},{"value":"DoS、DDoS、DRDoS攻击的区别","url":"#dosddosdrdos攻击的区别","depth":1},{"value":"XSS攻击及其防御","url":"#xss攻击及其防御","depth":1},{"value":"forward和redirect的区别","url":"#forward和redirect的区别","depth":1},{"value":"ARP协议的工作过程","url":"#arp协议的工作过程","depth":1},{"value":"IP地址与MAC地址的必要性","url":"#ip地址与mac地址的必要性","depth":1},{"value":"TCP和UDP对应的常见应用层协议","url":"#tcp和udp对应的常见应用层协议","depth":1},{"value":"URI和URL的区别","url":"#uri和url的区别","depth":1},{"value":"ICMP协议的功能","url":"#icmp协议的功能","depth":1},{"value":"ping命令的原理","url":"#ping命令的原理","depth":1},{"value":"TCP的三次握手机制","url":"#tcp的三次握手机制","depth":1},{"value":"TCP握手为什么是三次","url":"#tcp握手为什么是三次","depth":1},{"value":"TCP四次挥手过程","url":"#tcp四次挥手过程","depth":1},{"value":"为什么挥手是4次","url":"#为什么挥手是4次","depth":1},{"value":"为什么需要等待2MSL","url":"#为什么需要等待2msl","depth":1},{"value":"TCP的粘包和拆包","url":"#tcp的粘包和拆包","depth":1},{"value":"TCP的流量控制","url":"#tcp的流量控制","depth":1},{"value":"半连接队列和SYN Flood攻击","url":"#半连接队列和syn-flood攻击","depth":1},{"value":"TCP的滑动窗口","url":"#tcp的滑动窗口","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"计算机网络面试必问","datePublished":"2024-08-07T04:53:57.000Z","dateModified":"2024-10-04T01:08:21.000Z","description":"HTTP常用的状态码及其含义HTTP状态码是用来表示服务器响应客户端请求的状态。常用的状态码分为以下几类：状态码含义200OK：请求成功，服务器已返回所请求的数据。201Created：请求成功并且服务器创建了新的资源。204No Content：服务器成功处理了请求，但没有返回任何内容。30...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/kxspepu7t1b7783v"}},{"title":"Goland Proxy，国内镜像加速","date":"2024-08-03T04:02:37.000Z","urlname":"ls3yv2g2ssevtkvo","is_nav":false,"updated":"2024-09-06T01:04:22.000Z","not_show":false,"description":"前言众所周知，国内网络访问国外资源经常会出现不稳定的情况。 Go 生态系统中有着许多中国 Gopher 们无法获取的模块，比如最著名的 golang.org/x/...。并且在中国大陆从 GitHub 获取模块的速度也有点慢。 因此设置 CDN 加速代理就很有必要了，以下是几个速度不错的提供者...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":380,"minutes":1,"text":"1 分钟"},"slug":"doc/🔥 程序员自我修养/环境安装😭/ls3yv2g2ssevtkvo","path":"docs/doc/🔥 程序员自我修养/环境安装😭/ls3yv2g2ssevtkvo","filePath":"docs/doc/🔥 程序员自我修养/环境安装😭/ls3yv2g2ssevtkvo.md","toc":[{"value":"前言","url":"#前言-5","depth":1},{"value":"教程","url":"#教程","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Goland Proxy，国内镜像加速","datePublished":"2024-08-03T04:02:37.000Z","dateModified":"2024-09-06T01:04:22.000Z","description":"前言众所周知，国内网络访问国外资源经常会出现不稳定的情况。 Go 生态系统中有着许多中国 Gopher 们无法获取的模块，比如最著名的 golang.org/x/...。并且在中国大陆从 GitHub 获取模块的速度也有点慢。 因此设置 CDN 加速代理就很有必要了，以下是几个速度不错的提供者...\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/环境安装😭/ls3yv2g2ssevtkvo"}},{"title":"京东秋招实习面经","date":"2024-08-02T11:13:22.000Z","urlname":"cfd64u2k9y1i2kk9","is_nav":false,"updated":"2024-08-30T08:23:53.000Z","not_show":false,"description":"京东实习面经你之前说你的项目这边涉及大数据这块比较多，那你代码工程是怎么样的一个工程，就是直接用一些have的SQL去搞这种直接数据的开发，还是怎么去做的这种系统的编程。这个工程是怎么搭出来的对外提供什么接口，系统之间是怎么调接口的传输方式，就是说不同部门之间怎么去调一个服务Java通常使用什...\r","cover":"https://cdn.nlark.com/yuque/__puml/254e87cf2b01fc509e44845a6d3b363d.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1486,"minutes":5,"text":"5 分钟"},"slug":"doc/💹 大厂面经/面试真题/cfd64u2k9y1i2kk9","path":"docs/doc/💹 大厂面经/面试真题/cfd64u2k9y1i2kk9","filePath":"docs/doc/💹 大厂面经/面试真题/cfd64u2k9y1i2kk9.md","toc":[{"value":"京东实习面经","url":"#京东实习面经","depth":1},{"value":"参考回答","url":"#参考回答","depth":1},{"value":"1. 你之前说你的项目这边涉及大数据这块比较多，那你代码工程是怎么样的一个工程，就是直接用一些have的SQL去搞这种直接数据的开发，还是怎么去做的这种系统的编程。这个工程是怎么搭出来的？","url":"#1-你之前说你的项目这边涉及大数据这块比较多那你代码工程是怎么样的一个工程就是直接用一些have的sql去搞这种直接数据的开发还是怎么去做的这种系统的编程这个工程是怎么搭出来的","depth":4},{"value":"2. 对外提供什么接口，系统之间是怎么调接口的传输方式，就是说不同部门之间怎么去调一个服务？","url":"#2-对外提供什么接口系统之间是怎么调接口的传输方式就是说不同部门之间怎么去调一个服务","depth":4},{"value":"3. Java通常使用什么方式实现HTTP的调用？","url":"#3-java通常使用什么方式实现http的调用","depth":4},{"value":"4. HTTP里面的GET和POST有什么区别？","url":"#4-http里面的get和post有什么区别","depth":4},{"value":"5. 从Controller到Service都用到什么SpringMVC注解？","url":"#5-从controller到service都用到什么springmvc注解","depth":4},{"value":"6. 举一些线程安全的例子","url":"#6-举一些线程安全的例子","depth":4},{"value":"7. 有了解哪些线程安全的数据结构吗？","url":"#7-有了解哪些线程安全的数据结构吗","depth":4},{"value":"8. ConcurrentHashMap和synchronizedHashMap有什么区别？","url":"#8-concurrenthashmap和synchronizedhashmap有什么区别","depth":4},{"value":"9. ConcurrentHashMap锁粒度","url":"#9-concurrenthashmap锁粒度","depth":4},{"value":"10. 线程池的参数都是怎么去支撑线程池的运作的？","url":"#10-线程池的参数都是怎么去支撑线程池的运作的","depth":4},{"value":"11. 拒绝策略都有哪些，实际都用过哪些？","url":"#11-拒绝策略都有哪些实际都用过哪些","depth":4},{"value":"12. SpringBoot Starter是什么，你有自己实现过吗？","url":"#12-springboot-starter是什么你有自己实现过吗","depth":4},{"value":"13. Redis数据结构都有哪些，你在项目中都用过哪些？","url":"#13-redis数据结构都有哪些你在项目中都用过哪些","depth":4},{"value":"14. 重写和重载，返回值不一样算重载吗？","url":"#14-重写和重载返回值不一样算重载吗","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"京东秋招实习面经","datePublished":"2024-08-02T11:13:22.000Z","dateModified":"2024-08-30T08:23:53.000Z","description":"京东实习面经你之前说你的项目这边涉及大数据这块比较多，那你代码工程是怎么样的一个工程，就是直接用一些have的SQL去搞这种直接数据的开发，还是怎么去做的这种系统的编程。这个工程是怎么搭出来的对外提供什么接口，系统之间是怎么调接口的传输方式，就是说不同部门之间怎么去调一个服务Java通常使用什...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/cfd64u2k9y1i2kk9"}},{"title":"字节 抖音一面 很难！","date":"2024-07-30T10:23:07.000Z","urlname":"volv8i2cdtcg7vbp","is_nav":false,"updated":"2024-07-30T10:23:48.000Z","not_show":false,"description":"面试内容项目由来 自己优化的部分 主要加一些什么样的功能 是否部署过 部署的细节项目的分布式锁是怎么设计的 分布式锁用什么来实现？所需用 Redis 用具体的是哪些命令行来实现的 setnx是否能设置过期时间; 使用lua脚本的话，我是怎样让它尽量避免死锁的。如果想避免死锁要如何处理 缓存一致...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":325,"minutes":1,"text":"1 分钟"},"slug":"doc/💹 大厂面经/面试真题/volv8i2cdtcg7vbp","path":"docs/doc/💹 大厂面经/面试真题/volv8i2cdtcg7vbp","filePath":"docs/doc/💹 大厂面经/面试真题/volv8i2cdtcg7vbp.md","toc":[{"value":"面试内容","url":"#面试内容-2","depth":1},{"value":"参考回答","url":"#参考回答-7","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"字节 抖音一面 很难！","datePublished":"2024-07-30T10:23:07.000Z","dateModified":"2024-07-30T10:23:48.000Z","description":"面试内容项目由来 自己优化的部分 主要加一些什么样的功能 是否部署过 部署的细节项目的分布式锁是怎么设计的 分布式锁用什么来实现？所需用 Redis 用具体的是哪些命令行来实现的 setnx是否能设置过期时间; 使用lua脚本的话，我是怎样让它尽量避免死锁的。如果想避免死锁要如何处理 缓存一致...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/volv8i2cdtcg7vbp"}},{"title":"百度网盘一二面","date":"2024-07-30T10:20:14.000Z","urlname":"xpa3f9bvo294qeb8","is_nav":false,"updated":"2024-07-30T10:20:54.000Z","not_show":false,"description":"面试内容一面实习项目go学习多久C++ golang python优缺点GMP模型slice底层实现cap和len的区别TCP和UDP区别TCP如何保证可靠性拥塞控制TCP两次握手可行性MySQL使用的是什么索引为什么使用B+树而不是平衡二叉树查看某个端口的占用的Linux命令统计一个文件中的...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":214,"minutes":1,"text":"1 分钟"},"slug":"doc/💹 大厂面经/面试真题/xpa3f9bvo294qeb8","path":"docs/doc/💹 大厂面经/面试真题/xpa3f9bvo294qeb8","filePath":"docs/doc/💹 大厂面经/面试真题/xpa3f9bvo294qeb8.md","toc":[{"value":"面试内容","url":"#面试内容-3","depth":1},{"value":"参考回答","url":"#参考回答-8","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"百度网盘一二面","datePublished":"2024-07-30T10:20:14.000Z","dateModified":"2024-07-30T10:20:54.000Z","description":"面试内容一面实习项目go学习多久C++ golang python优缺点GMP模型slice底层实现cap和len的区别TCP和UDP区别TCP如何保证可靠性拥塞控制TCP两次握手可行性MySQL使用的是什么索引为什么使用B+树而不是平衡二叉树查看某个端口的占用的Linux命令统计一个文件中的...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/xpa3f9bvo294qeb8"}},{"title":"必看！字节后端-质量 一面面经","date":"2024-07-30T10:18:38.000Z","urlname":"dndp91gf7gdmw7gx","is_nav":false,"updated":"2024-07-30T10:35:07.000Z","not_show":false,"description":"这次模拟面试涵盖了Go语言的多个核心概念，包括slice、map、channel、defer、panic/recover、GMP模型和垃圾回收机制等。面试者展示了对这些概念的深入理解，以及在实际编程中的应用能力。这样的回答应该会给面试官留下很好的印象。面试问题一、自我介绍 5m二、项目并穿插八...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":9710,"minutes":32,"text":"32 分钟"},"slug":"doc/💹 大厂面经/面试真题/dndp91gf7gdmw7gx","path":"docs/doc/💹 大厂面经/面试真题/dndp91gf7gdmw7gx","filePath":"docs/doc/💹 大厂面经/面试真题/dndp91gf7gdmw7gx.md","toc":[{"value":"面试问题","url":"#面试问题-2","depth":1},{"value":"参考回答","url":"#参考回答-2","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"必看！字节后端-质量 一面面经","datePublished":"2024-07-30T10:18:38.000Z","dateModified":"2024-07-30T10:35:07.000Z","description":"这次模拟面试涵盖了Go语言的多个核心概念，包括slice、map、channel、defer、panic/recover、GMP模型和垃圾回收机制等。面试者展示了对这些概念的深入理解，以及在实际编程中的应用能力。这样的回答应该会给面试官留下很好的印象。面试问题一、自我介绍 5m二、项目并穿插八...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/dndp91gf7gdmw7gx"}},{"title":"rss订阅是怎么实现的？","date":"2024-07-29T04:32:06.000Z","urlname":"nrzyh8l8y1vdi8d2","is_nav":false,"updated":"2024-07-29T04:41:33.000Z","not_show":false,"description":"RSS（Really Simple Syndication）是一种用于发布频繁更新的网站内容的标准格式。我计划用Nextjs实现一波。包括以下步骤：创建 RSS Feed生成 RSS XML提供 RSS 端点1. 安装依赖首先，我们需要安装 feed 库来帮助生成 RSS feed：npm i...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":672,"minutes":2,"text":"2 分钟"},"slug":"doc/🔥 程序员自我修养/个人建站 🤖/nrzyh8l8y1vdi8d2","path":"docs/doc/🔥 程序员自我修养/个人建站 🤖/nrzyh8l8y1vdi8d2","filePath":"docs/doc/🔥 程序员自我修养/个人建站 🤖/nrzyh8l8y1vdi8d2.md","toc":[{"value":"1. 安装依赖","url":"#1-安装依赖","depth":3},{"value":"2. 创建 RSS 生成函数","url":"#2-创建-rss-生成函数","depth":3},{"value":"3. 创建 RSS 端点","url":"#3-创建-rss-端点","depth":3},{"value":"4. 添加 RSS 链接到你的网站","url":"#4-添加-rss-链接到你的网站","depth":3},{"value":"5. 更新站点地图","url":"#5-更新站点地图","depth":3},{"value":"6. 测试 RSS Feed","url":"#6-测试-rss-feed","depth":3},{"value":"注意事项","url":"#注意事项","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"rss订阅是怎么实现的？","datePublished":"2024-07-29T04:32:06.000Z","dateModified":"2024-07-29T04:41:33.000Z","description":"RSS（Really Simple Syndication）是一种用于发布频繁更新的网站内容的标准格式。我计划用Nextjs实现一波。包括以下步骤：创建 RSS Feed生成 RSS XML提供 RSS 端点1. 安装依赖首先，我们需要安装 feed 库来帮助生成 RSS feed：npm i...\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/个人建站 🤖/nrzyh8l8y1vdi8d2"}},{"title":"百度日常实习一面&二面","date":"2024-07-27T12:25:19.000Z","urlname":"dgrqv2fxa8gg8xrs","is_nav":false,"updated":"2024-07-27T12:49:03.000Z","not_show":false,"description":"面试问题项目拷打Redis避免主从读取不一致的问题线程的生命周期操作系统层面线程和进程的区别JAVA集合有哪些?hashmap底层实现原理java gc过程Java四大引用区别和应用分布式服务 对接口做限流 实现思路redis淘汰策略JAVA设计模式Java反射理解十万个单词  从中找出访问频...\r","cover":"https://cdn.nlark.com/yuque/__puml/90a7d789afce7c5f4ad81ba1e1c9d6a3.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":4531,"minutes":15,"text":"15 分钟"},"slug":"doc/💹 大厂面经/面试真题/dgrqv2fxa8gg8xrs","path":"docs/doc/💹 大厂面经/面试真题/dgrqv2fxa8gg8xrs","filePath":"docs/doc/💹 大厂面经/面试真题/dgrqv2fxa8gg8xrs.md","toc":[{"value":"面试问题","url":"#面试问题-1","depth":1},{"value":"参考回答","url":"#参考回答-1","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"百度日常实习一面&二面","datePublished":"2024-07-27T12:25:19.000Z","dateModified":"2024-07-27T12:49:03.000Z","description":"面试问题项目拷打Redis避免主从读取不一致的问题线程的生命周期操作系统层面线程和进程的区别JAVA集合有哪些?hashmap底层实现原理java gc过程Java四大引用区别和应用分布式服务 对接口做限流 实现思路redis淘汰策略JAVA设计模式Java反射理解十万个单词  从中找出访问频...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/dgrqv2fxa8gg8xrs"}},{"title":"夸克网盘自动签到功能上线","date":"2024-07-27T02:37:23.000Z","urlname":"tgaw8ygonvh5e6rf","is_nav":false,"updated":"2024-07-27T02:39:48.000Z","not_show":false,"description":"经过不懈努力，我发现了一个好用的工具——夸克网盘自动签到。虽然每日签到所获得的空间不多，但积少成多，也是一份不错的小福利。对于感兴趣的朋友，以下是详细的操作步骤：项目获取：前往GitHub，找到我们的项目页面alipan_auto_sign，点击fork，将项目复制到您的个人仓库。出于安全考虑...\r","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1722047931274-1677fa96-3eab-444f-87bc-281ae7507cf9.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":356,"minutes":1,"text":"1 分钟"},"slug":"doc/🔥 程序员自我修养/环境安装😭/tgaw8ygonvh5e6rf","path":"docs/doc/🔥 程序员自我修养/环境安装😭/tgaw8ygonvh5e6rf","filePath":"docs/doc/🔥 程序员自我修养/环境安装😭/tgaw8ygonvh5e6rf.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"夸克网盘自动签到功能上线","datePublished":"2024-07-27T02:37:23.000Z","dateModified":"2024-07-27T02:39:48.000Z","description":"经过不懈努力，我发现了一个好用的工具——夸克网盘自动签到。虽然每日签到所获得的空间不多，但积少成多，也是一份不错的小福利。对于感兴趣的朋友，以下是详细的操作步骤：项目获取：前往GitHub，找到我们的项目页面alipan_auto_sign，点击fork，将项目复制到您的个人仓库。出于安全考虑...\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/环境安装😭/tgaw8ygonvh5e6rf"}},{"title":"校招参考！腾娱互动-Go社招一面","date":"2024-07-23T14:20:47.000Z","urlname":"dxwkhngq4yrc7xac","is_nav":false,"updated":"2024-07-23T14:28:20.000Z","not_show":false,"description":"面试问题为什么想离职对我们的招聘岗位有了解吗有去过武汉吗自我介绍什么时候接触golang的，自学的是么，为什么想到去学go分享一下go语言的学习经验学习go的时候有没有遇到过什么问题？讲一下goroutine与线程有什么不同呢？什么情况下会引起panic怎么捕获panicerror 和 pan...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":6051,"minutes":20,"text":"20 分钟"},"slug":"doc/💹 大厂面经/面试真题/dxwkhngq4yrc7xac","path":"docs/doc/💹 大厂面经/面试真题/dxwkhngq4yrc7xac","filePath":"docs/doc/💹 大厂面经/面试真题/dxwkhngq4yrc7xac.md","toc":[{"value":"面试问题","url":"#面试问题-4","depth":1},{"value":"参考回答","url":"#参考回答-4","depth":1},{"value":"离职原因和求职动机","url":"#离职原因和求职动机","depth":4},{"value":"自我介绍和Go语言学习经历","url":"#自我介绍和go语言学习经历","depth":4},{"value":"Go语言核心概念","url":"#go语言核心概念","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"校招参考！腾娱互动-Go社招一面","datePublished":"2024-07-23T14:20:47.000Z","dateModified":"2024-07-23T14:28:20.000Z","description":"面试问题为什么想离职对我们的招聘岗位有了解吗有去过武汉吗自我介绍什么时候接触golang的，自学的是么，为什么想到去学go分享一下go语言的学习经验学习go的时候有没有遇到过什么问题？讲一下goroutine与线程有什么不同呢？什么情况下会引起panic怎么捕获panicerror 和 pan...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/dxwkhngq4yrc7xac"}},{"title":"生财有术的七条原则","date":"2024-07-21T07:22:40.000Z","urlname":"kgo2qgo7afzgxnng","is_nav":false,"updated":"2024-07-30T23:09:56.000Z","not_show":false,"description":"这篇文章是亦仁对自己创办的\"生财有术\"社群七年历程的总结和反思。以下是我的读书笔记，主要围绕亦仁提出的七条重要原则展开：保持头脑极度开放亦仁强调，赚钱机会往往来自于我们第一眼看不上的信息差。保持开放的心态可以让各种信息和机会流入。他建议多尝试一些看似没有前途的小项目，因为大项目往往是小项目叠加...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":647,"minutes":2,"text":"2 分钟"},"slug":"doc/🔥 程序员自我修养/个人成长/kgo2qgo7afzgxnng","path":"docs/doc/🔥 程序员自我修养/个人成长/kgo2qgo7afzgxnng","filePath":"docs/doc/🔥 程序员自我修养/个人成长/kgo2qgo7afzgxnng.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"生财有术的七条原则","datePublished":"2024-07-21T07:22:40.000Z","dateModified":"2024-07-30T23:09:56.000Z","description":"这篇文章是亦仁对自己创办的\"生财有术\"社群七年历程的总结和反思。以下是我的读书笔记，主要围绕亦仁提出的七条重要原则展开：保持头脑极度开放亦仁强调，赚钱机会往往来自于我们第一眼看不上的信息差。保持开放的心态可以让各种信息和机会流入。他建议多尝试一些看似没有前途的小项目，因为大项目往往是小项目叠加...\r","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/个人成长/kgo2qgo7afzgxnng"}},{"title":"生财有术的七条原则|副业原则","date":"2024-07-21T07:22:40.000Z","urlname":"kgo2qgo7afzgxnng","is_nav":false,"updated":"2024-09-28T04:02:58.000Z","not_show":false,"description":"这篇文章是亦仁对自己创办的\"生财有术\"社群七年历程的总结和反思。以下是我的读书笔记，主要围绕亦仁提出的七条重要原则展开：保持头脑极度开放亦仁强调，赚钱机会往往来自于我们第一眼看不上的信息差。保持开放的心态可以让各种信息和机会流入。他建议多尝试一些看似没有前途的小项目，因为大项目往往是小项目叠加...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":647,"minutes":2,"text":"2 分钟"},"slug":"doc/🔥 程序员自我修养/个人成长🔝/kgo2qgo7afzgxnng","path":"docs/doc/🔥 程序员自我修养/个人成长🔝/kgo2qgo7afzgxnng","filePath":"docs/doc/🔥 程序员自我修养/个人成长🔝/kgo2qgo7afzgxnng.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"生财有术的七条原则|副业原则","datePublished":"2024-07-21T07:22:40.000Z","dateModified":"2024-09-28T04:02:58.000Z","description":"这篇文章是亦仁对自己创办的\"生财有术\"社群七年历程的总结和反思。以下是我的读书笔记，主要围绕亦仁提出的七条重要原则展开：保持头脑极度开放亦仁强调，赚钱机会往往来自于我们第一眼看不上的信息差。保持开放的心态可以让各种信息和机会流入。他建议多尝试一些看似没有前途的小项目，因为大项目往往是小项目叠加...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/个人成长🔝/kgo2qgo7afzgxnng"}},{"title":"pnpm、npm 、yarn更换国内源","date":"2024-07-17T13:51:15.000Z","urlname":"elci0wuxaz92cymo","is_nav":false,"updated":"2024-07-17T14:52:59.000Z","not_show":false,"description":"背景pnpm下载国外包的时候实在是太难受了！！我要换源！pnpm换源相关命令# 安装 npm install -g pnpm # 查看源 pnpm get registry pnpm config get registry # 临时修改 pnpm config set registry <re...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":318,"minutes":1,"text":"1 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/elci0wuxaz92cymo","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/elci0wuxaz92cymo","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/elci0wuxaz92cymo.md","toc":[{"value":"背景","url":"#背景","depth":1},{"value":"pnpm换源","url":"#pnpm换源","depth":1},{"value":"npm换源","url":"#npm换源","depth":2},{"value":"yarn换源","url":"#yarn换源","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"pnpm、npm 、yarn更换国内源","datePublished":"2024-07-17T13:51:15.000Z","dateModified":"2024-07-17T14:52:59.000Z","description":"背景pnpm下载国外包的时候实在是太难受了！！我要换源！pnpm换源相关命令# 安装 npm install -g pnpm # 查看源 pnpm get registry pnpm config get registry # 临时修改 pnpm config set registry <re...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/elci0wuxaz92cymo"}},{"title":"字节飞书一面，难度适中，必会！","date":"2024-07-15T14:26:22.000Z","urlname":"bg15413yf107b8lc","is_nav":false,"updated":"2024-07-17T13:10:09.000Z","not_show":false,"description":"面试问题redis的大key和热key问题。为什么热k影响redis的背后底层原理（比如能抗住1000w qps的redis为什么会被100w 热k给打挂掉）热点菜品问题处理方案。限流应该怎么做？服务降级应该有什么准则服务注册和服务发现怎么做的？服务注册和服务发现内部实现细节权限校验机制怎么做...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":9846,"minutes":33,"text":"33 分钟"},"slug":"doc/💹 大厂面经/面试真题/bg15413yf107b8lc","path":"docs/doc/💹 大厂面经/面试真题/bg15413yf107b8lc","filePath":"docs/doc/💹 大厂面经/面试真题/bg15413yf107b8lc.md","toc":[{"value":"面试问题","url":"#面试问题","depth":2},{"value":"面试参考回答","url":"#面试参考回答","depth":2},{"value":"Redis的大key和热key问题","url":"#redis的大key和热key问题","depth":4},{"value":"热key对Redis性能的影响","url":"#热key对redis性能的影响","depth":4},{"value":"热点菜品问题处理方案","url":"#热点菜品问题处理方案","depth":4},{"value":"限流实现方案","url":"#限流实现方案","depth":4},{"value":"服务降级准则","url":"#服务降级准则","depth":4},{"value":"服务注册与发现机制","url":"#服务注册与发现机制","depth":4},{"value":"权限校验机制","url":"#权限校验机制","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"字节飞书一面，难度适中，必会！","datePublished":"2024-07-15T14:26:22.000Z","dateModified":"2024-07-17T13:10:09.000Z","description":"面试问题redis的大key和热key问题。为什么热k影响redis的背后底层原理（比如能抗住1000w qps的redis为什么会被100w 热k给打挂掉）热点菜品问题处理方案。限流应该怎么做？服务降级应该有什么准则服务注册和服务发现怎么做的？服务注册和服务发现内部实现细节权限校验机制怎么做...","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/bg15413yf107b8lc"}},{"title":"字节飞书后端二面：简单的一批！","date":"2024-07-13T06:39:12.000Z","urlname":"dymac5z7gm1iragd","is_nav":false,"updated":"2024-09-28T13:26:07.000Z","not_show":false,"description":"面试题目1、自我介绍2、项目太简单，随便问了两句==================数据结构================1、数据结构的排序算法有哪些？（每种时间复杂度都说一下，快排和堆排的编程思想是什么？）2、说一下经典的图论算法及使用场景（最短路、最小生成树等等）3、如何判断有向图是否有...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":5275,"minutes":18,"text":"18 分钟"},"slug":"doc/💹 大厂面经/面试真题/dymac5z7gm1iragd","path":"docs/doc/💹 大厂面经/面试真题/dymac5z7gm1iragd","filePath":"docs/doc/💹 大厂面经/面试真题/dymac5z7gm1iragd.md","toc":[{"value":"面试题目","url":"#面试题目","depth":1},{"value":"参考回答","url":"#参考回答-5","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"字节飞书后端二面：简单的一批！","datePublished":"2024-07-13T06:39:12.000Z","dateModified":"2024-09-28T13:26:07.000Z","description":"面试题目1、自我介绍2、项目太简单，随便问了两句==================数据结构================1、数据结构的排序算法有哪些？（每种时间复杂度都说一下，快排和堆排的编程思想是什么？）2、说一下经典的图论算法及使用场景（最短路、最小生成树等等）3、如何判断有向图是否有...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/dymac5z7gm1iragd"}},{"title":"字节测开一面：感觉比后端开发还难啊···","date":"2024-07-12T05:17:06.000Z","urlname":"mpr8avvkgpn7bi8r","is_nav":false,"updated":"2024-07-12T13:52:50.000Z","not_show":false,"description":"面试内容1.自我介绍2.问自己哪个项目最困难3.问常见的数据结构有哪些4.问怎么用两个队列实现栈5.问计网，TCP与UDP的区别6.进程和线程7.手撕：最长回文子串8.噢想起来还问了一个栈和队列的区别面试回答自我介绍面试官：欢迎来到字节跳动的面试。首先，请你做一个简单的自我介绍吧。求职者：好的...\r","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/a4fd339adcbcdf773a32d9d3c9ae4671.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":9729,"minutes":32,"text":"32 分钟"},"slug":"doc/💹 大厂面经/面试真题/mpr8avvkgpn7bi8r","path":"docs/doc/💹 大厂面经/面试真题/mpr8avvkgpn7bi8r","filePath":"docs/doc/💹 大厂面经/面试真题/mpr8avvkgpn7bi8r.md","toc":[{"value":"面试内容","url":"#面试内容","depth":1},{"value":"面试回答","url":"#面试回答-1","depth":1},{"value":"自我介绍","url":"#自我介绍","depth":4},{"value":"项目经历","url":"#项目经历","depth":4},{"value":"常见的数据结构","url":"#常见的数据结构","depth":4},{"value":"用两个队列实现栈","url":"#用两个队列实现栈","depth":4},{"value":"TCP与UDP的区别","url":"#tcp与udp的区别","depth":4},{"value":"进程和线程","url":"#进程和线程","depth":4},{"value":"算法题：最长回文子串","url":"#算法题最长回文子串","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"字节测开一面：感觉比后端开发还难啊···","datePublished":"2024-07-12T05:17:06.000Z","dateModified":"2024-07-12T13:52:50.000Z","description":"面试内容1.自我介绍2.问自己哪个项目最困难3.问常见的数据结构有哪些4.问怎么用两个队列实现栈5.问计网，TCP与UDP的区别6.进程和线程7.手撕：最长回文子串8.噢想起来还问了一个栈和队列的区别面试回答自我介绍面试官：欢迎来到字节跳动的面试。首先，请你做一个简单的自我介绍吧。求职者：好的...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/mpr8avvkgpn7bi8r"}},{"title":"字节后端面经:3小时极限压榨，11个高频问题","date":"2024-07-12T05:06:53.000Z","urlname":"echqwn8b64s6zty0","is_nav":false,"updated":"2024-07-13T01:59:06.000Z","not_show":false,"description":"面试问题字节后端面经，严刑拷打3小时。问实习经历，但是拷打的是自己的项目，正规的规则引擎了解过吗。浏览器键入网址全过程http为什么是无状态死锁条件子网掩码的作用mysql b+树和b树redis数据结构，用什么结构实现延迟消息队列redis分片集群，如何分片的，有什么好处jvm内存分布，有垃...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":9851,"minutes":33,"text":"33 分钟"},"slug":"doc/💹 大厂面经/面试真题/echqwn8b64s6zty0","path":"docs/doc/💹 大厂面经/面试真题/echqwn8b64s6zty0","filePath":"docs/doc/💹 大厂面经/面试真题/echqwn8b64s6zty0.md","toc":[{"value":"面试问题","url":"#面试问题-5","depth":1},{"value":"面试回答","url":"#面试回答","depth":1},{"value":"一面","url":"#一面","depth":2},{"value":"二面","url":"#二面","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"字节后端面经:3小时极限压榨，11个高频问题","datePublished":"2024-07-12T05:06:53.000Z","dateModified":"2024-07-13T01:59:06.000Z","description":"面试问题字节后端面经，严刑拷打3小时。问实习经历，但是拷打的是自己的项目，正规的规则引擎了解过吗。浏览器键入网址全过程http为什么是无状态死锁条件子网掩码的作用mysql b+树和b树redis数据结构，用什么结构实现延迟消息队列redis分片集群，如何分片的，有什么好处jvm内存分布，有垃...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/echqwn8b64s6zty0"}},{"title":"Go内存模型详解","date":"2024-07-12T04:39:23.000Z","urlname":"muby5dz3x4wlzb5k","is_nav":false,"updated":"2024-07-12T04:48:52.000Z","not_show":false,"description":"引言Go内存模型规定了在一个goroutine中读取变量时，在何种条件下可以保证观察到另一个goroutine中对同一变量的写入所产生的值。建议同时被多个goroutine访问的程序数据必须进行同步访问。要序列化访问，请使用通道操作或其他同步原语（如sync和sync/atomic包中的那些）...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":5473,"minutes":18,"text":"18 分钟"},"slug":"doc/💻 编程语言/Go/🎁 最佳实践/muby5dz3x4wlzb5k","path":"docs/doc/💻 编程语言/Go/🎁 最佳实践/muby5dz3x4wlzb5k","filePath":"docs/doc/💻 编程语言/Go/🎁 最佳实践/muby5dz3x4wlzb5k.md","toc":[{"value":"引言","url":"#引言","depth":1},{"value":"建议","url":"#建议","depth":1},{"value":"非正式概述","url":"#非正式概述","depth":1},{"value":"内存模型","url":"#内存模型","depth":1},{"value":"包含数据竞争的程序的实现限制","url":"#包含数据竞争的程序的实现限制","depth":1},{"value":"同步","url":"#同步","depth":1},{"value":"初始化","url":"#初始化","depth":2},{"value":"Goroutine创建","url":"#goroutine创建","depth":2},{"value":"Goroutine销毁","url":"#goroutine销毁","depth":2},{"value":"通道通信","url":"#通道通信","depth":2},{"value":"锁","url":"#锁-1","depth":1},{"value":"Once","url":"#once","depth":1},{"value":"原子值","url":"#原子值","depth":1},{"value":"终结器","url":"#终结器","depth":1},{"value":"附加机制","url":"#附加机制","depth":2},{"value":"不正确的同步","url":"#不正确的同步","depth":2},{"value":"不正确的编译","url":"#不正确的编译","depth":2},{"value":"结论","url":"#结论-19","depth":1},{"value":"参考","url":"#参考-1","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Go内存模型详解","datePublished":"2024-07-12T04:39:23.000Z","dateModified":"2024-07-12T04:48:52.000Z","description":"引言Go内存模型规定了在一个goroutine中读取变量时，在何种条件下可以保证观察到另一个goroutine中对同一变量的写入所产生的值。建议同时被多个goroutine访问的程序数据必须进行同步访问。要序列化访问，请使用通道操作或其他同步原语（如sync和sync/atomic包中的那些）...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🎁 最佳实践/muby5dz3x4wlzb5k"}},{"title":"曹操的铜雀台 - 建造者模式","date":"2024-07-05T04:31:34.000Z","urlname":"ckronzbv5gb1uh4g","is_nav":false,"updated":"2024-07-05T04:41:37.000Z","not_show":false,"description":"\"雄才大略铸宏图，一砖一瓦筑雄关。\"魏国建安年间，曹操在邺城兴建了一座雄伟壮观的建筑群——铜雀台。这座融合了宫殿、花园和军事要塞特点的建筑，不仅展现了曹操的雄心壮志，更蕴含了现代软件设计中建造者模式的精髓。让我们穿越时空，探索铜雀台的建造过程，揭示建造者模式的奥秘。铜雀高台耸云霄，层层叠叠显奇...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/c16e79eea77ecca62d6e90265bf6da0a.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1734,"minutes":6,"text":"6 分钟"},"slug":"doc/📚 计算机基础/“设计模式” 🆚 三国/ckronzbv5gb1uh4g","path":"docs/doc/📚 计算机基础/“设计模式” 🆚 三国/ckronzbv5gb1uh4g","filePath":"docs/doc/📚 计算机基础/“设计模式” 🆚 三国/ckronzbv5gb1uh4g.md","toc":[{"value":"铜雀台的建造","url":"#铜雀台的建造","depth":2},{"value":"建造者模式解析","url":"#建造者模式解析","depth":2},{"value":"代码实现","url":"#代码实现","depth":2},{"value":"运行结果","url":"#运行结果","depth":2},{"value":"建造者模式的妙用","url":"#建造者模式的妙用","depth":2},{"value":"结语","url":"#结语","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"曹操的铜雀台 - 建造者模式","datePublished":"2024-07-05T04:31:34.000Z","dateModified":"2024-07-05T04:41:37.000Z","description":"\"雄才大略铸宏图，一砖一瓦筑雄关。\"魏国建安年间，曹操在邺城兴建了一座雄伟壮观的建筑群——铜雀台。这座融合了宫殿、花园和军事要塞特点的建筑，不仅展现了曹操的雄心壮志，更蕴含了现代软件设计中建造者模式的精髓。让我们穿越时空，探索铜雀台的建造过程，揭示建造者模式的奥秘。铜雀高台耸云霄，层层叠叠显奇...","url":"https://offernow.cn/docs/doc/📚 计算机基础/“设计模式” 🆚 三国/ckronzbv5gb1uh4g"}},{"title":"6.28 字节一年，人间三年","date":"2024-07-05T04:10:40.000Z","urlname":"abtdkewug0syus02","is_nav":false,"updated":"2024-09-24T03:36:19.000Z","not_show":false,"description":"想来字节做研发，可以先看我这三年的体会和建议。大家好，我是白露啊。今天和大家分享一个真实的故事，是关于字节网友分享自己三年的工作经历和感受。由于白露也曾在字节待过两年，可以说，说的都对。你有没有想过来字节跳动做研发？如果你有这个想法，那么不妨先看看，或许可以为你提供一些参考。当我还没来字节的时...\r","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1719583138192-8a03e0dc-d4a5-4701-b683-41bfd5fcfe71.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2133,"minutes":7,"text":"7 分钟"},"slug":"doc/💹 大厂面经/互联网新闻/2024 6 月/abtdkewug0syus02","path":"docs/doc/💹 大厂面经/互联网新闻/2024 6 月/abtdkewug0syus02","filePath":"docs/doc/💹 大厂面经/互联网新闻/2024 6 月/abtdkewug0syus02.md","toc":[{"value":"新人Landing","url":"#新人landing","depth":3},{"value":"业务和个人成长","url":"#业务和个人成长","depth":3},{"value":"工作氛围和公司文化","url":"#工作氛围和公司文化","depth":3},{"value":"我的建议","url":"#我的建议-1","depth":3},{"value":"Ending","url":"#ending","depth":2},{"value":"简单的场景题——TopK","url":"#简单的场景题topk","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.28 字节一年，人间三年","datePublished":"2024-07-05T04:10:40.000Z","dateModified":"2024-09-24T03:36:19.000Z","description":"想来字节做研发，可以先看我这三年的体会和建议。大家好，我是白露啊。今天和大家分享一个真实的故事，是关于字节网友分享自己三年的工作经历和感受。由于白露也曾在字节待过两年，可以说，说的都对。你有没有想过来字节跳动做研发？如果你有这个想法，那么不妨先看看，或许可以为你提供一些参考。当我还没来字节的时...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/互联网新闻/2024 6 月/abtdkewug0syus02"}},{"title":"字节一年，人间三年","date":"2024-07-05T04:10:40.000Z","urlname":"abtdkewug0syus02","is_nav":false,"updated":"2024-07-05T04:10:58.000Z","not_show":false,"description":"想来字节做研发，可以先看我这三年的体会和建议。大家好，我是白露啊。今天和大家分享一个真实的故事，是关于字节网友分享自己三年的工作经历和感受。由于白露也曾在字节待过两年，可以说，说的都对。你有没有想过来字节跳动做研发？如果你有这个想法，那么不妨先看看，或许可以为你提供一些参考。当我还没来字节的时...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1719583138192-8a03e0dc-d4a5-4701-b683-41bfd5fcfe71.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2137,"minutes":7,"text":"7 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/abtdkewug0syus02","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/abtdkewug0syus02","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/abtdkewug0syus02.md","toc":[{"value":"新人Landing","url":"#新人landing-1","depth":3},{"value":"业务和个人成长","url":"#业务和个人成长-1","depth":3},{"value":"工作氛围和公司文化","url":"#工作氛围和公司文化-1","depth":3},{"value":"我的建议","url":"#我的建议-2","depth":3},{"value":"Ending","url":"#ending-2","depth":2},{"value":"简单的场景题——TopK","url":"#简单的场景题topk-1","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"字节一年，人间三年","datePublished":"2024-07-05T04:10:40.000Z","dateModified":"2024-07-05T04:10:58.000Z","description":"想来字节做研发，可以先看我这三年的体会和建议。大家好，我是白露啊。今天和大家分享一个真实的故事，是关于字节网友分享自己三年的工作经历和感受。由于白露也曾在字节待过两年，可以说，说的都对。你有没有想过来字节跳动做研发？如果你有这个想法，那么不妨先看看，或许可以为你提供一些参考。当我还没来字节的时...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/abtdkewug0syus02"}},{"title":"双非进大厂也并非不可能","date":"2024-07-05T04:09:59.000Z","urlname":"elocqv7dobz6tlo1","is_nav":false,"updated":"2024-09-27T01:25:29.000Z","not_show":false,"description":"大家好，我是白露啊。今天我们要分享一个非常励志的故事，它证明了双非背景的毕业生也可以通过努力和坚持，进入梦想中的大厂。下面是这位网友的真实经历，希望能为正在找工作的你提供一些激励和参考。背景介绍这位网友的背景并不特殊，他是一名双非本科毕业生。实习经历包括顺丰和货拉拉。在秋招时，他只有一个秋招期...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1719834296789-8cc59077-2735-471a-b01c-7120874f3c05.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3398,"minutes":11,"text":"11 分钟"},"slug":"doc/💹 大厂面经/互联网新闻/2024 7 月/elocqv7dobz6tlo1","path":"docs/doc/💹 大厂面经/互联网新闻/2024 7 月/elocqv7dobz6tlo1","filePath":"docs/doc/💹 大厂面经/互联网新闻/2024 7 月/elocqv7dobz6tlo1.md","toc":[{"value":"背景介绍","url":"#背景介绍","depth":3},{"value":"秋招和春招的面试与Offer","url":"#秋招和春招的面试与offer","depth":3},{"value":"秋招和春招的感悟","url":"#秋招和春招的感悟","depth":3},{"value":"给24届校招生的建议","url":"#给24届校招生的建议","depth":3},{"value":"美团一面面经","url":"#美团一面面经","depth":1},{"value":"进程间通信","url":"#进程间通信-1","depth":3},{"value":"TCP和UDP","url":"#tcp和udp","depth":3},{"value":"线程安全的单例模式","url":"#线程安全的单例模式","depth":3},{"value":"数据库隔离级别","url":"#数据库隔离级别","depth":3},{"value":"联合索引","url":"#联合索引","depth":3},{"value":"算法题","url":"#算法题","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"双非进大厂也并非不可能","datePublished":"2024-07-05T04:09:59.000Z","dateModified":"2024-09-27T01:25:29.000Z","description":"大家好，我是白露啊。今天我们要分享一个非常励志的故事，它证明了双非背景的毕业生也可以通过努力和坚持，进入梦想中的大厂。下面是这位网友的真实经历，希望能为正在找工作的你提供一些激励和参考。背景介绍这位网友的背景并不特殊，他是一名双非本科毕业生。实习经历包括顺丰和货拉拉。在秋招时，他只有一个秋招期...","url":"https://offernow.cn/docs/doc/💹 大厂面经/互联网新闻/2024 7 月/elocqv7dobz6tlo1"}},{"title":"牛马也要卖个好价钱：我劝你不跳槽也要多面试","date":"2024-07-05T04:09:28.000Z","urlname":"qkzq1vr17x0d30lq","is_nav":false,"updated":"2024-07-05T04:09:59.000Z","not_show":false,"description":"hey，大家好，我是白露啊。前几天，智联招聘有一篇文章“建议大家有事没事就去面试”上了热搜，引发了很多网友的共鸣。这让我想起之前有位实验室的师兄也跟我提过类似的观点：市场在不断变化，即使不打算换工作，也一定要多去面试，因为面试不仅仅是找工作，更是看世界的一种方式。面试是看世界的窗职场中，我们常...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2097,"minutes":7,"text":"7 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/7月/qkzq1vr17x0d30lq","path":"docs/doc/💹 大厂面经/拿下面试官实战/7月/qkzq1vr17x0d30lq","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/7月/qkzq1vr17x0d30lq.md","toc":[{"value":"面试是看世界的窗","url":"#面试是看世界的窗","depth":2},{"value":"显示市场价值，调整期望","url":"#显示市场价值调整期望","depth":2},{"value":"发现自身优势和短板","url":"#发现自身优势和短板","depth":2},{"value":"拓展行业人脉和资源","url":"#拓展行业人脉和资源","depth":2},{"value":"掌握面试技巧，提升自我价值","url":"#掌握面试技巧提升自我价值","depth":2},{"value":"Ending","url":"#ending-1","depth":2},{"value":"001.赋值运算符函数","url":"#001赋值运算符函数-1","depth":1},{"value":"补充：赋值/拷贝重载函数","url":"#补充赋值拷贝重载函数-1","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"牛马也要卖个好价钱：我劝你不跳槽也要多面试","datePublished":"2024-07-05T04:09:28.000Z","dateModified":"2024-07-05T04:09:59.000Z","description":"hey，大家好，我是白露啊。前几天，智联招聘有一篇文章“建议大家有事没事就去面试”上了热搜，引发了很多网友的共鸣。这让我想起之前有位实验室的师兄也跟我提过类似的观点：市场在不断变化，即使不打算换工作，也一定要多去面试，因为面试不仅仅是找工作，更是看世界的一种方式。面试是看世界的窗职场中，我们常...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/7月/qkzq1vr17x0d30lq"}},{"title":"7月","date":"2024-07-05T04:09:22.000Z","urlname":"wm3w0rct48awrtbe","is_nav":false,"nav_path":"20247","updated":"2024-07-05T04:09:49.000Z","skip_nav":false,"not_show":false,"description":"---is_nav: falsenav_path: '20247'skip_nav: false---","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":0,"minutes":0,"text":"小于一分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/wm3w0rct48awrtbe","path":"docs/doc/💹 大厂面经/拿下面试官实战/wm3w0rct48awrtbe","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/wm3w0rct48awrtbe.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"7月","datePublished":"2024-07-05T04:09:22.000Z","dateModified":"2024-07-05T04:09:49.000Z","description":"---is_nav: falsenav_path: '20247'skip_nav: false---","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/wm3w0rct48awrtbe"}},{"title":"诸葛亮的连环计 - 责任链模式","date":"2024-07-05T03:28:35.000Z","urlname":"ev5mq3v4brstfd78","is_nav":false,"updated":"2024-07-09T14:14:41.000Z","not_show":false,"description":"\"万事谋定而后动，一环扣一环，方能成大事。\"在三国时期，诸葛亮以其超凡的智慧闻名天下。在他众多的计策中，有一个鲜为人知却极具智慧的连环计，完美诠释了现代软件设计中的责任链模式。让我们一同探索这个巧妙的计策，揭示责任链模式的奥秘。连环妙计出奇谋，层层推进显神通。责任传递如流水，一环扣一环成功。诸...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/394a87161732fab246c86aac73081509.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1646,"minutes":5,"text":"5 分钟"},"slug":"doc/📚 计算机基础/“设计模式” 🆚 三国/ev5mq3v4brstfd78","path":"docs/doc/📚 计算机基础/“设计模式” 🆚 三国/ev5mq3v4brstfd78","filePath":"docs/doc/📚 计算机基础/“设计模式” 🆚 三国/ev5mq3v4brstfd78.md","toc":[{"value":"诸葛亮的连环计","url":"#诸葛亮的连环计","depth":2},{"value":"责任链模式解析","url":"#责任链模式解析","depth":2},{"value":"运行结果","url":"#运行结果-2","depth":2},{"value":"责任链模式的妙用","url":"#责任链模式的妙用","depth":2},{"value":"结语","url":"#结语-2","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"诸葛亮的连环计 - 责任链模式","datePublished":"2024-07-05T03:28:35.000Z","dateModified":"2024-07-09T14:14:41.000Z","description":"\"万事谋定而后动，一环扣一环，方能成大事。\"在三国时期，诸葛亮以其超凡的智慧闻名天下。在他众多的计策中，有一个鲜为人知却极具智慧的连环计，完美诠释了现代软件设计中的责任链模式。让我们一同探索这个巧妙的计策，揭示责任链模式的奥秘。连环妙计出奇谋，层层推进显神通。责任传递如流水，一环扣一环成功。诸...","url":"https://offernow.cn/docs/doc/📚 计算机基础/“设计模式” 🆚 三国/ev5mq3v4brstfd78"}},{"title":"诸葛亮的七星灯阵 - 单例模式","date":"2024-07-05T03:02:44.000Z","urlname":"gc2uxn4sfb8s94ts","is_nav":false,"updated":"2024-07-08T14:39:30.000Z","not_show":false,"description":"\"运筹帷幄之中，决胜千里之外。一盏明灯，照亮万里江山。\"在蜀汉建兴五年，诸葛亮率军北伐，欲一举扫平魏国。然而，大军行至祁山，却遭遇了前所未有的困境。在这危急时刻，诸葛亮设下了一个神秘的阵法——七星灯阵。这个阵法不仅化解了危机，更蕴含了现代软件设计中单例模式的精髓。七星灯阵耀夜空，一盏明灯定乾坤...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/1052bb1bd8e93fd0fc5d255a61287ba6.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1169,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/“设计模式” 🆚 三国/gc2uxn4sfb8s94ts","path":"docs/doc/📚 计算机基础/“设计模式” 🆚 三国/gc2uxn4sfb8s94ts","filePath":"docs/doc/📚 计算机基础/“设计模式” 🆚 三国/gc2uxn4sfb8s94ts.md","toc":[{"value":"七星灯阵","url":"#七星灯阵","depth":2},{"value":"单例模式解析","url":"#单例模式解析","depth":2},{"value":"运行结果","url":"#运行结果-3","depth":2},{"value":"单例模式的妙用","url":"#单例模式的妙用","depth":2},{"value":"结语","url":"#结语-3","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"诸葛亮的七星灯阵 - 单例模式","datePublished":"2024-07-05T03:02:44.000Z","dateModified":"2024-07-08T14:39:30.000Z","description":"\"运筹帷幄之中，决胜千里之外。一盏明灯，照亮万里江山。\"在蜀汉建兴五年，诸葛亮率军北伐，欲一举扫平魏国。然而，大军行至祁山，却遭遇了前所未有的困境。在这危急时刻，诸葛亮设下了一个神秘的阵法——七星灯阵。这个阵法不仅化解了危机，更蕴含了现代软件设计中单例模式的精髓。七星灯阵耀夜空，一盏明灯定乾坤...","url":"https://offernow.cn/docs/doc/📚 计算机基础/“设计模式” 🆚 三国/gc2uxn4sfb8s94ts"}},{"title":"诸葛亮的空城计 - 代理模式","date":"2024-07-05T03:02:00.000Z","urlname":"vpb2ynhhocz1pgy6","is_nav":false,"updated":"2024-07-07T14:36:38.000Z","not_show":false,"description":"定场诗\"无形之中蕴含至理，虚实相生方见大道。\"在三国演义中，诸葛亮的空城计可谓神来之笔。这看似冒险的策略，实则蕴含深意。今天，我们将透过空城计，一窥软件设计中代理模式的奥秘。西城无人旦夕危，诸葛单骑解危机。虚张声势胜千军，代理模式妙无比。空城妙计蜀汉建兴七年，诸葛亮率军北伐，屯兵祁山。一日，探...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/aaf83d97a5e5ed845c5091cfbdd48179.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1071,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/“设计模式” 🆚 三国/vpb2ynhhocz1pgy6","path":"docs/doc/📚 计算机基础/“设计模式” 🆚 三国/vpb2ynhhocz1pgy6","filePath":"docs/doc/📚 计算机基础/“设计模式” 🆚 三国/vpb2ynhhocz1pgy6.md","toc":[{"value":"定场诗","url":"#定场诗-1","depth":2},{"value":"空城妙计","url":"#空城妙计","depth":2},{"value":"代理模式解析","url":"#代理模式解析","depth":2},{"value":"运行结果","url":"#运行结果-5","depth":2},{"value":"代理模式的妙用","url":"#代理模式的妙用","depth":2},{"value":"结语","url":"#结语-5","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"诸葛亮的空城计 - 代理模式","datePublished":"2024-07-05T03:02:00.000Z","dateModified":"2024-07-07T14:36:38.000Z","description":"定场诗\"无形之中蕴含至理，虚实相生方见大道。\"在三国演义中，诸葛亮的空城计可谓神来之笔。这看似冒险的策略，实则蕴含深意。今天，我们将透过空城计，一窥软件设计中代理模式的奥秘。西城无人旦夕危，诸葛单骑解危机。虚张声势胜千军，代理模式妙无比。空城妙计蜀汉建兴七年，诸葛亮率军北伐，屯兵祁山。一日，探...","url":"https://offernow.cn/docs/doc/📚 计算机基础/“设计模式” 🆚 三国/vpb2ynhhocz1pgy6"}},{"title":"曹操的五色棋布阵 - 工厂方法模式","date":"2024-07-05T03:01:23.000Z","urlname":"dfd7a2gtvtf9mue4","is_nav":false,"updated":"2024-07-07T14:32:19.000Z","not_show":false,"description":"定场诗\"兵无常势，水无常形，能因敌变化而取胜者，谓之神。\"在三国的战场上，兵法如棋，布阵如画。曹操的五色棋布阵，不正是今日软件设计中工厂方法模式的绝妙写照吗？让我们从这个神奇的布阵之法，揭开工厂方法模式的神秘面纱。五色旗分兵布阵，八门金锁任调遣。工厂方法创军团，灵活多变战未然。五色棋布阵建安十...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/2d5db1d86e3d73bd936407244ef2d204.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1307,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/“设计模式” 🆚 三国/dfd7a2gtvtf9mue4","path":"docs/doc/📚 计算机基础/“设计模式” 🆚 三国/dfd7a2gtvtf9mue4","filePath":"docs/doc/📚 计算机基础/“设计模式” 🆚 三国/dfd7a2gtvtf9mue4.md","toc":[{"value":"定场诗","url":"#定场诗","depth":2},{"value":"五色棋布阵","url":"#五色棋布阵","depth":2},{"value":"工厂方法模式解析","url":"#工厂方法模式解析","depth":2},{"value":"运行结果","url":"#运行结果-1","depth":2},{"value":"工厂方法模式的妙用","url":"#工厂方法模式的妙用","depth":2},{"value":"结语","url":"#结语-1","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"曹操的五色棋布阵 - 工厂方法模式","datePublished":"2024-07-05T03:01:23.000Z","dateModified":"2024-07-07T14:32:19.000Z","description":"定场诗\"兵无常势，水无常形，能因敌变化而取胜者，谓之神。\"在三国的战场上，兵法如棋，布阵如画。曹操的五色棋布阵，不正是今日软件设计中工厂方法模式的绝妙写照吗？让我们从这个神奇的布阵之法，揭开工厂方法模式的神秘面纱。五色旗分兵布阵，八门金锁任调遣。工厂方法创军团，灵活多变战未然。五色棋布阵建安十...","url":"https://offernow.cn/docs/doc/📚 计算机基础/“设计模式” 🆚 三国/dfd7a2gtvtf9mue4"}},{"title":"赤壁之战的烽火台 - 观察者模式","date":"2024-07-05T03:00:47.000Z","urlname":"la44sq94482qcne2","is_nav":false,"updated":"2024-07-05T03:30:28.000Z","not_show":false,"description":"\"当烽火连三月，家书抵万金；设计模式得其法，千军如一心。\"在波澜壮阔的三国历史长河中，赤壁之战无疑是一场改变乾坤的重要战役。而在这场战役中，一个看似简单却至关重要的系统发挥了巨大作用——烽火台。这个古老的通讯系统，是否让你联想到了现代软件设计中的观察者模式？今天，让我们穿越千年，从烽火台的烟雾...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/2d451104487ed50a3ebffe4ab7d7e83c.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1355,"minutes":5,"text":"5 分钟"},"slug":"doc/📚 计算机基础/“设计模式” 🆚 三国/la44sq94482qcne2","path":"docs/doc/📚 计算机基础/“设计模式” 🆚 三国/la44sq94482qcne2","filePath":"docs/doc/📚 计算机基础/“设计模式” 🆚 三国/la44sq94482qcne2.md","toc":[{"value":"烽火连天","url":"#烽火连天","depth":2},{"value":"观察者模式解析","url":"#观察者模式解析","depth":2},{"value":"运行结果","url":"#运行结果-4","depth":2},{"value":"观察者模式的妙用","url":"#观察者模式的妙用","depth":2},{"value":"结语","url":"#结语-4","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"赤壁之战的烽火台 - 观察者模式","datePublished":"2024-07-05T03:00:47.000Z","dateModified":"2024-07-05T03:30:28.000Z","description":"\"当烽火连三月，家书抵万金；设计模式得其法，千军如一心。\"在波澜壮阔的三国历史长河中，赤壁之战无疑是一场改变乾坤的重要战役。而在这场战役中，一个看似简单却至关重要的系统发挥了巨大作用——烽火台。这个古老的通讯系统，是否让你联想到了现代软件设计中的观察者模式？今天，让我们穿越千年，从烽火台的烟雾...","url":"https://offernow.cn/docs/doc/📚 计算机基础/“设计模式” 🆚 三国/la44sq94482qcne2"}},{"title":"诸葛亮的锦囊妙计 - 策略模式","date":"2024-07-05T03:00:02.000Z","urlname":"ymfzf8csegmsccld","is_nav":false,"updated":"2024-07-06T03:10:35.000Z","not_show":false,"description":"白露一直觉得，将三国和设计模式可以很好的融合在一起。想象一下，如果你能将三国时代的智慧与现代软件设计的精髓融为一体，会是怎样一番景象？在这里，诸葛亮的锦囊妙计不再仅仅是历史传说，而是活生生的策略模式；赤壁之战的烽火狼烟化身为观察者模式的绝妙示例；曹操的五色棋布阵则完美诠释了工厂方法模式的精髓。...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/e83b3d3a6dd9f3f8fd4293cf1e31b68a.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1391,"minutes":5,"text":"5 分钟"},"slug":"doc/📚 计算机基础/“设计模式” 🆚 三国/ymfzf8csegmsccld","path":"docs/doc/📚 计算机基础/“设计模式” 🆚 三国/ymfzf8csegmsccld","filePath":"docs/doc/📚 计算机基础/“设计模式” 🆚 三国/ymfzf8csegmsccld.md","toc":[{"value":"草船借箭","url":"#草船借箭","depth":2},{"value":"策略模式解析","url":"#策略模式解析","depth":2},{"value":"运行结果","url":"#运行结果-6","depth":2},{"value":"策略模式的妙用","url":"#策略模式的妙用","depth":2},{"value":"结语","url":"#结语-6","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"诸葛亮的锦囊妙计 - 策略模式","datePublished":"2024-07-05T03:00:02.000Z","dateModified":"2024-07-06T03:10:35.000Z","description":"白露一直觉得，将三国和设计模式可以很好的融合在一起。想象一下，如果你能将三国时代的智慧与现代软件设计的精髓融为一体，会是怎样一番景象？在这里，诸葛亮的锦囊妙计不再仅仅是历史传说，而是活生生的策略模式；赤壁之战的烽火狼烟化身为观察者模式的绝妙示例；曹操的五色棋布阵则完美诠释了工厂方法模式的精髓。...","url":"https://offernow.cn/docs/doc/📚 计算机基础/“设计模式” 🆚 三国/ymfzf8csegmsccld"}},{"title":"“设计模式” 🆚 三国","date":"2024-07-05T02:52:38.000Z","urlname":"azein3sxgue1fes5","is_nav":false,"nav_path":"design_patterns","updated":"2024-07-05T02:59:56.000Z","not_show":false,"description":"---is_nav: falsenav_path: design_patterns---伟大的软件源于优秀的设计。在软件开发的广阔天地中，设计模式如同指引方向的北极星，照亮了通往高质量、可维护代码的道路。欢迎来到我们的设计模式专栏，这里是每一位追求卓越的开发者的必经之地。为什么设计模式如此重要...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1029,"minutes":3,"text":"3 分钟"},"slug":"doc/📚 计算机基础/azein3sxgue1fes5","path":"docs/doc/📚 计算机基础/azein3sxgue1fes5","filePath":"docs/doc/📚 计算机基础/azein3sxgue1fes5.md","toc":[{"value":"为什么设计模式如此重要？","url":"#为什么设计模式如此重要","depth":2},{"value":"专栏特色","url":"#专栏特色","depth":2},{"value":"谁应该关注这个专栏？","url":"#谁应该关注这个专栏","depth":2},{"value":"学习旅程","url":"#学习旅程","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"“设计模式” 🆚 三国","datePublished":"2024-07-05T02:52:38.000Z","dateModified":"2024-07-05T02:59:56.000Z","description":"---is_nav: falsenav_path: design_patterns---伟大的软件源于优秀的设计。在软件开发的广阔天地中，设计模式如同指引方向的北极星，照亮了通往高质量、可维护代码的道路。欢迎来到我们的设计模式专栏，这里是每一位追求卓越的开发者的必经之地。为什么设计模式如此重要...","url":"https://offernow.cn/docs/doc/📚 计算机基础/azein3sxgue1fes5"}},{"title":"深度学习激活函数有哪些？","date":"2024-07-03T05:10:52.000Z","urlname":"nt61gsah6eyoi8ip","is_nav":false,"updated":"2024-07-03T05:11:06.000Z","not_show":false,"description":"参考链接1激活函数有什么用？在多层神经网络中，上层节点的输出和下层节点的输入之间具有一个函数关系，这个函数称为激活函数（又称激励函数）。——即是每经过一层节点，需要对该层的输出做一个效用评估，将最后的评估结果传递给下一个节点。而且每层节点的作用一般是线性的（加减乘除），激活函数却是非线性的，而...","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1630684292186-8199f38a-a2e4-4912-bf2a-50830df23763.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2951,"minutes":10,"text":"10 分钟"},"slug":"doc/🔥 程序员自我修养/🤖人工智能/nt61gsah6eyoi8ip","path":"docs/doc/🔥 程序员自我修养/🤖人工智能/nt61gsah6eyoi8ip","filePath":"docs/doc/🔥 程序员自我修养/🤖人工智能/nt61gsah6eyoi8ip.md","toc":[{"value":"激活函数有什么用？","url":"#激活函数有什么用","depth":1},{"value":"激活函数分类","url":"#激活函数分类","depth":1},{"value":"Sigmoid","url":"#sigmoid","depth":2},{"value":"Tanh","url":"#tanh","depth":2},{"value":"Relu","url":"#relu","depth":2},{"value":"Leaky Relu","url":"#leaky-relu","depth":2},{"value":"RRelu","url":"#rrelu","depth":2},{"value":"ELU","url":"#elu","depth":2},{"value":"Maxout","url":"#maxout","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"深度学习激活函数有哪些？","datePublished":"2024-07-03T05:10:52.000Z","dateModified":"2024-07-03T05:11:06.000Z","description":"参考链接1激活函数有什么用？在多层神经网络中，上层节点的输出和下层节点的输入之间具有一个函数关系，这个函数称为激活函数（又称激励函数）。——即是每经过一层节点，需要对该层的输出做一个效用评估，将最后的评估结果传递给下一个节点。而且每层节点的作用一般是线性的（加减乘除），激活函数却是非线性的，而...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/🤖人工智能/nt61gsah6eyoi8ip"}},{"title":"图像算法工程师面试","date":"2024-07-03T05:10:11.000Z","urlname":"lk1hgmd5h9mrgodd","is_nav":false,"updated":"2024-09-24T03:55:51.000Z","not_show":false,"description":"机器学习和深度学习的关系其实它俩都是AI中的子问题：机器学习是实现人工智能的方法；深度学习是一种实现机器学习的技术；如何防止过拟合？链接正则化L1、L2；L2如下：更大的数据集：数据增强（平移、切分、亮度、等等）；训练时间太长，提前终止训练；融合多种模型：bagging、Boosting；Dr...\r","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1631113841304-d88a7820-816b-4490-972a-b6a11c636b0f.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":10027,"minutes":33,"text":"33 分钟"},"slug":"doc/💹 大厂面经/lk1hgmd5h9mrgodd","path":"docs/doc/💹 大厂面经/lk1hgmd5h9mrgodd","filePath":"docs/doc/💹 大厂面经/lk1hgmd5h9mrgodd.md","toc":[{"value":"机器学习和深度学习的关系","url":"#机器学习和深度学习的关系","depth":1},{"value":"如何防止过拟合？","url":"#如何防止过拟合","depth":1},{"value":"经典的轻量级网络","url":"#经典的轻量级网络","depth":1},{"value":"经典的机器学习算法","url":"#经典的机器学习算法","depth":1},{"value":"SVM：Support Vector Machine 支持向量机","url":"#svmsupport-vector-machine-支持向量机","depth":2},{"value":"<font style=\"color:rgb(18, 18, 18);\">决策树</font>","url":"#font-stylecolorrgb18-18-18决策树font","depth":2},{"value":"随机森林","url":"#随机森林","depth":2},{"value":"逻辑回归（线性回归）","url":"#逻辑回归线性回归","depth":2},{"value":"K近邻算法（有监督算法，分类算法）","url":"#k近邻算法有监督算法分类算法","depth":2},{"value":"K均值（无监督算法，聚类算法，随机算法）","url":"#k均值无监督算法聚类算法随机算法","depth":2},{"value":"马尔科夫","url":"#马尔科夫","depth":2},{"value":"模型/权重初始化方式","url":"#模型权重初始化方式","depth":1},{"value":"深度学习优化方式","url":"#深度学习优化方式","depth":1},{"value":"SGD","url":"#sgd","depth":2},{"value":"Momentum","url":"#momentum","depth":2},{"value":"Adagrad","url":"#adagrad","depth":2},{"value":"BN层的作用和参数","url":"#bn层的作用和参数","depth":1},{"value":"L1/L2的区别","url":"#l1l2的区别","depth":1},{"value":"模型的加速与压缩","url":"#模型的加速与压缩","depth":1},{"value":"数据不平衡的问题","url":"#数据不平衡的问题","depth":1},{"value":"腐蚀、膨胀、开闭运算","url":"#腐蚀膨胀开闭运算","depth":1},{"value":"图像去噪方法","url":"#图像去噪方法","depth":1},{"value":"边缘检测算子","url":"#边缘检测算子","depth":1},{"value":"贝叶斯概率","url":"#贝叶斯概率","depth":1},{"value":"贝叶斯公式","url":"#贝叶斯公式","depth":1},{"value":"联邦学习","url":"#联邦学习","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"图像算法工程师面试","datePublished":"2024-07-03T05:10:11.000Z","dateModified":"2024-09-24T03:55:51.000Z","description":"机器学习和深度学习的关系其实它俩都是AI中的子问题：机器学习是实现人工智能的方法；深度学习是一种实现机器学习的技术；如何防止过拟合？链接正则化L1、L2；L2如下：更大的数据集：数据增强（平移、切分、亮度、等等）；训练时间太长，提前终止训练；融合多种模型：bagging、Boosting；Dr...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/lk1hgmd5h9mrgodd"}},{"title":"决策树是什么？","date":"2024-07-03T05:09:11.000Z","urlname":"ioa4al8z2lh9hf9o","is_nav":false,"updated":"2024-07-03T05:09:53.000Z","not_show":false,"description":"由于随机森林里有决策树相关的知识，因此先对决策树的知识进行学习简介简单点说就是，决策树是一种类似于流程图的结构，其中每个内部节点代表在某一个特征上的“判断”(例如，一个硬币是正面还是反面)，每个分支代表判断的结果，每个叶节点代表一个类标签(计算所有属性后做出的决定)。从根到叶的路径表示分类规则...","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1631436513352-4a6c9b57-f926-458d-95dd-23d072f3e64d.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1485,"minutes":5,"text":"5 分钟"},"slug":"doc/🔥 程序员自我修养/🤖人工智能/ioa4al8z2lh9hf9o","path":"docs/doc/🔥 程序员自我修养/🤖人工智能/ioa4al8z2lh9hf9o","filePath":"docs/doc/🔥 程序员自我修养/🤖人工智能/ioa4al8z2lh9hf9o.md","toc":[{"value":"简介","url":"#简介","depth":1},{"value":"构造过程","url":"#构造过程","depth":1},{"value":"ID3","url":"#id3","depth":1},{"value":"C4.5","url":"#c45","depth":1},{"value":"CART与剪枝","url":"#cart与剪枝","depth":1},{"value":"代码实现/参考链接","url":"#代码实现参考链接","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"决策树是什么？","datePublished":"2024-07-03T05:09:11.000Z","dateModified":"2024-07-03T05:09:53.000Z","description":"由于随机森林里有决策树相关的知识，因此先对决策树的知识进行学习简介简单点说就是，决策树是一种类似于流程图的结构，其中每个内部节点代表在某一个特征上的“判断”(例如，一个硬币是正面还是反面)，每个分支代表判断的结果，每个叶节点代表一个类标签(计算所有属性后做出的决定)。从根到叶的路径表示分类规则...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/🤖人工智能/ioa4al8z2lh9hf9o"}},{"title":"逻辑回归与线性回归什么关系？","date":"2024-07-03T05:08:39.000Z","urlname":"rdlggr5pu4ra8ny0","is_nav":false,"updated":"2024-07-03T05:08:57.000Z","not_show":false,"description":"逻辑回归（LR，Logic Regression）链接逻辑回归是用来做分类算法的。通常结合sigmoid函数将输出值域归一化到[0,1]，从而通过设定阈值来进行输出结果的判断。以最简单的一维逻辑回归为例，y=ax+b。如果是以sigmoid函数作为结果的归一化函数，则其损失函数（log los...","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1631866036846-a788ad5d-9fa0-4857-8195-cebf7a65997e.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2233,"minutes":7,"text":"7 分钟"},"slug":"doc/🔥 程序员自我修养/🤖人工智能/rdlggr5pu4ra8ny0","path":"docs/doc/🔥 程序员自我修养/🤖人工智能/rdlggr5pu4ra8ny0","filePath":"docs/doc/🔥 程序员自我修养/🤖人工智能/rdlggr5pu4ra8ny0.md","toc":[{"value":"逻辑回归（LR，Logic Regression）","url":"#逻辑回归lrlogic-regression","depth":1},{"value":"似然函数","url":"#似然函数","depth":2},{"value":"极大似然函数的导数","url":"#极大似然函数的导数","depth":2},{"value":"代码实现","url":"#代码实现-1","depth":2},{"value":"线性回归","url":"#线性回归","depth":1},{"value":"最小二乘法（MSE）","url":"#最小二乘法mse","depth":2},{"value":"正则化","url":"#正则化","depth":2},{"value":"逻辑回归与线性回归的关系","url":"#逻辑回归与线性回归的关系","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"逻辑回归与线性回归什么关系？","datePublished":"2024-07-03T05:08:39.000Z","dateModified":"2024-07-03T05:08:57.000Z","description":"逻辑回归（LR，Logic Regression）链接逻辑回归是用来做分类算法的。通常结合sigmoid函数将输出值域归一化到[0,1]，从而通过设定阈值来进行输出结果的判断。以最简单的一维逻辑回归为例，y=ax+b。如果是以sigmoid函数作为结果的归一化函数，则其损失函数（log los...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/🤖人工智能/rdlggr5pu4ra8ny0"}},{"title":"KNN分类算法","date":"2024-07-03T05:07:39.000Z","urlname":"bznerz89sdg5qwfe","is_nav":false,"updated":"2024-07-03T05:08:40.000Z","not_show":false,"description":"KNN没有训练一个模型去学习输入到输出的映射，只是会把训练数据存储在kdtree的数据结构中，唯一训练的是kdtree中每个节点的split规则。而kdtree只是加速找NN的过程。KNN，K-Nearest Neighbor algorithm，所谓K近邻算法，即是给定一个训练数据集，对新的...","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1631462535724-70e59f8d-3520-4bc3-a83f-eaf803381ced.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3686,"minutes":12,"text":"12 分钟"},"slug":"doc/🔥 程序员自我修养/🤖人工智能/bznerz89sdg5qwfe","path":"docs/doc/🔥 程序员自我修养/🤖人工智能/bznerz89sdg5qwfe","filePath":"docs/doc/🔥 程序员自我修养/🤖人工智能/bznerz89sdg5qwfe.md","toc":[{"value":"距离度量","url":"#距离度量","depth":1},{"value":"选取K值","url":"#选取k值","depth":1},{"value":"KD树","url":"#kd树","depth":1},{"value":"KD改进-BBF","url":"#kd改进-bbf","depth":1},{"value":"简单实现-手写字体识别","url":"#简单实现-手写字体识别","depth":1},{"value":"参考","url":"#参考","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"KNN分类算法","datePublished":"2024-07-03T05:07:39.000Z","dateModified":"2024-07-03T05:08:40.000Z","description":"KNN没有训练一个模型去学习输入到输出的映射，只是会把训练数据存储在kdtree的数据结构中，唯一训练的是kdtree中每个节点的split规则。而kdtree只是加速找NN的过程。KNN，K-Nearest Neighbor algorithm，所谓K近邻算法，即是给定一个训练数据集，对新的...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/🤖人工智能/bznerz89sdg5qwfe"}},{"title":"AI跨界学习，不再是梦","date":"2024-07-03T05:04:57.000Z","urlname":"ucvbe5w9nqtiolmd","is_nav":false,"updated":"2024-07-03T05:05:23.000Z","not_show":false,"description":"大家好！今天给大家推荐的 GPTs 是【行业知识脉络】，帮助大家快速了解某个领域的脉络，并提供足够的学习资料和建议。在AI时代，从小白到专家的1万小时定律即将失效，用少于1千小时掌握行业知识树和其核心概念是如何学习的呢？昂起来，一起让跨界学习不再是梦！介绍以 【人工智能】为例，当我们提出问题的...","cover":"https://cdn.nlark.com/yuque/0/2023/png/22382235/1701871171157-61e5195b-0d13-4f96-9b0b-517fe8c9143c.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1699,"minutes":6,"text":"6 分钟"},"slug":"doc/🔥 程序员自我修养/🤖人工智能/ucvbe5w9nqtiolmd","path":"docs/doc/🔥 程序员自我修养/🤖人工智能/ucvbe5w9nqtiolmd","filePath":"docs/doc/🔥 程序员自我修养/🤖人工智能/ucvbe5w9nqtiolmd.md","toc":[{"value":"介绍","url":"#介绍-4","depth":1},{"value":"Prompt分享","url":"#prompt分享","depth":1},{"value":"免费体验地址","url":"#免费体验地址","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"AI跨界学习，不再是梦","datePublished":"2024-07-03T05:04:57.000Z","dateModified":"2024-07-03T05:05:23.000Z","description":"大家好！今天给大家推荐的 GPTs 是【行业知识脉络】，帮助大家快速了解某个领域的脉络，并提供足够的学习资料和建议。在AI时代，从小白到专家的1万小时定律即将失效，用少于1千小时掌握行业知识树和其核心概念是如何学习的呢？昂起来，一起让跨界学习不再是梦！介绍以 【人工智能】为例，当我们提出问题的...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/🤖人工智能/ucvbe5w9nqtiolmd"}},{"title":"IDEA 2024.1.4 最新激活码,破解版安装教程（亲测有效~）","date":"2024-07-02T14:56:42.000Z","urlname":"clbaakq70pduuoew","is_nav":false,"updated":"2024-07-03T13:23:04.000Z","not_show":false,"description":"申明：本教程 IntelliJ IDEA 破解补丁、激活码均收集于网络，请勿商用，仅供个人学习使用，如有侵权，请联系作者删除。若条件允许，希望大家购买正版 ！PS: 本教程最新更新时间: 2024 年 6 月 24 日, 网站持续更新，收藏本站防失联哟~前言6 月临近月尾，IDEA 新版本又发...","cover":"https://cdn.nlark.com/yuque/0/2024/jpeg/22382235/1719932219286-10887949-db2c-4aa0-8fbc-7a86f6700d99.jpeg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2710,"minutes":9,"text":"9 分钟"},"slug":"doc/🔥 程序员自我修养/环境安装😭/clbaakq70pduuoew","path":"docs/doc/🔥 程序员自我修养/环境安装😭/clbaakq70pduuoew","filePath":"docs/doc/🔥 程序员自我修养/环境安装😭/clbaakq70pduuoew.md","toc":[{"value":"前言","url":"#前言-4","depth":2},{"value":"说明","url":"#说明","depth":2},{"value":"第一步：下载 IDEA 安装包","url":"#第一步下载-idea-安装包","depth":2},{"value":"第二步：卸载老版本 IDEA(未安装则不用管，跳过看下面步骤)","url":"#第二步卸载老版本-idea未安装则不用管跳过看下面步骤","depth":2},{"value":"第三步：安装 IDEA 2024.1.4 版本","url":"#第三步安装-idea-202414-版本","depth":2},{"value":"第四步：破解补丁下载","url":"#第四步破解补丁下载","depth":2},{"value":"第五步：开始破解","url":"#第五步开始破解","depth":2},{"value":"Windows 系统","url":"#windows-系统","depth":3},{"value":"Mac / Linux 系统","url":"#mac--linux-系统","depth":3},{"value":"执行脚本，都干了些啥？","url":"#执行脚本都干了些啥","depth":3},{"value":"第六步：重启 IDEA","url":"#第六步重启-idea","depth":2},{"value":"第七步：填入指定激活码完成激活","url":"#第七步填入指定激活码完成激活","depth":2},{"value":"你可能会遇到的问题","url":"#你可能会遇到的问题","depth":2},{"value":"一切按照教程来，输入激活码提示 Key is invalid？","url":"#一切按照教程来输入激活码提示-key-is-invalid","depth":3},{"value":"需要注意的问题","url":"#需要注意的问题","depth":2},{"value":"激活成功后，不要升级 IDEA 版本","url":"#激活成功后不要升级-idea-版本","depth":3},{"value":"激活成功后，补丁文件夹能不能删掉或者移动？","url":"#激活成功后补丁文件夹能不能删掉或者移动","depth":3},{"value":"声明","url":"#声明-1","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"IDEA 2024.1.4 最新激活码,破解版安装教程（亲测有效~）","datePublished":"2024-07-02T14:56:42.000Z","dateModified":"2024-07-03T13:23:04.000Z","description":"申明：本教程 IntelliJ IDEA 破解补丁、激活码均收集于网络，请勿商用，仅供个人学习使用，如有侵权，请联系作者删除。若条件允许，希望大家购买正版 ！PS: 本教程最新更新时间: 2024 年 6 月 24 日, 网站持续更新，收藏本站防失联哟~前言6 月临近月尾，IDEA 新版本又发...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/环境安装😭/clbaakq70pduuoew"}},{"title":"15、Vue3实战项目三：社交媒体平台","date":"2024-06-28T04:14:33.000Z","urlname":"ecpzrwpgo9ugf2bb","is_nav":false,"updated":"2024-06-28T04:15:29.000Z","not_show":false,"description":"keywords: 社交媒体平台,用户管理,动态发布,评论功能,Vue 项目实战在本章节,我们将使用 Vue 3.0 来开发一个社交媒体平台。通过这个项目,你将学会如何使用 Vue 来构建一个完整的社交应用,包括用户注册登录、用户资料管理、动态发布评论等核心功能。让我们一起来探索 Vue 在实...","tags":[],"keywords":"社交媒体平台,用户管理,动态发布,评论功能,Vue 项目实战","authors":["whitedew"],"type":"Post","readingTime":{"words":3220,"minutes":11,"text":"11 分钟"},"slug":"doc/💻 编程语言/Vue3/ecpzrwpgo9ugf2bb","path":"docs/doc/💻 编程语言/Vue3/ecpzrwpgo9ugf2bb","filePath":"docs/doc/💻 编程语言/Vue3/ecpzrwpgo9ugf2bb.md","toc":[{"value":"15.1 项目需求分析","url":"#151-项目需求分析-2","depth":2},{"value":"15.1.1 用户注册和登录","url":"#1511-用户注册和登录","depth":3},{"value":"15.1.2 用户资料管理","url":"#1512-用户资料管理","depth":3},{"value":"15.1.3 动态发布和评论","url":"#1513-动态发布和评论","depth":3},{"value":"15.2 项目结构设计","url":"#152-项目结构设计","depth":2},{"value":"15.2.1 项目目录结构","url":"#1521-项目目录结构","depth":3},{"value":"15.2.2 功能模块划分","url":"#1522-功能模块划分","depth":3},{"value":"15.2.3 路由配置","url":"#1523-路由配置","depth":3},{"value":"15.3 主要功能实现","url":"#153-主要功能实现","depth":2},{"value":"15.3.1 用户注册和登录","url":"#1531-用户注册和登录","depth":3},{"value":"注册页面","url":"#注册页面","depth":4},{"value":"登录页面","url":"#登录页面","depth":4},{"value":"15.3.2 用户资料管理","url":"#1532-用户资料管理","depth":3},{"value":"15.3.3 动态发布和评论","url":"#1533-动态发布和评论","depth":3},{"value":"动态列表","url":"#动态列表","depth":4},{"value":"动态发布","url":"#动态发布","depth":4},{"value":"评论功能","url":"#评论功能","depth":4},{"value":"15.4 部署和发布","url":"#154-部署和发布","depth":2},{"value":"15.4.1 构建和打包","url":"#1541-构建和打包","depth":3},{"value":"15.4.2 部署到服务器","url":"#1542-部署到服务器","depth":3},{"value":"15.4.3 监控和优化","url":"#1543-监控和优化","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"15、Vue3实战项目三：社交媒体平台","datePublished":"2024-06-28T04:14:33.000Z","dateModified":"2024-06-28T04:15:29.000Z","description":"keywords: 社交媒体平台,用户管理,动态发布,评论功能,Vue 项目实战在本章节,我们将使用 Vue 3.0 来开发一个社交媒体平台。通过这个项目,你将学会如何使用 Vue 来构建一个完整的社交应用,包括用户注册登录、用户资料管理、动态发布评论等核心功能。让我们一起来探索 Vue 在实...","url":"https://offernow.cn/docs/doc/💻 编程语言/Vue3/ecpzrwpgo9ugf2bb"}},{"title":"Vue3","date":"2024-06-28T04:14:26.000Z","urlname":"gq0f157tki9wshfb","is_nav":false,"nav_path":"vue3","updated":"2024-06-28T04:14:52.000Z","not_show":false,"description":"---is_nav: falsenav_path: vue3---","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":0,"minutes":0,"text":"小于一分钟"},"slug":"doc/💻 编程语言/gq0f157tki9wshfb","path":"docs/doc/💻 编程语言/gq0f157tki9wshfb","filePath":"docs/doc/💻 编程语言/gq0f157tki9wshfb.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Vue3","datePublished":"2024-06-28T04:14:26.000Z","dateModified":"2024-06-28T04:14:52.000Z","description":"---is_nav: falsenav_path: vue3---","url":"https://offernow.cn/docs/doc/💻 编程语言/gq0f157tki9wshfb"}},{"title":"7、代码生成","date":"2024-06-28T04:00:48.000Z","urlname":"tsrqpph0qqsl9wbq","is_nav":false,"updated":"2024-06-28T04:10:09.000Z","not_show":false,"description":"keywords: 代码生成, 目标代码, 指令选择, 寄存器分配, 指令调度---代码生成是编译过程的最后阶段，它将优化后的中间表示转换为目标机器的汇编代码或机器代码。这个阶段直接影响程序的执行效率和资源使用，因此在编译器设计中占据着关键地位。7.1 代码生成概述7.1.1 代码生成的目标和...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/cfb5e3a30e2e1c621dbb67a29ec259fa.svg","tags":[],"keywords":"代码生成, 目标代码, 指令选择, 寄存器分配, 指令调度","authors":["whitedew"],"type":"Post","readingTime":{"words":2345,"minutes":8,"text":"8 分钟"},"slug":"doc/📚 计算机基础/编译原理/tsrqpph0qqsl9wbq","path":"docs/doc/📚 计算机基础/编译原理/tsrqpph0qqsl9wbq","filePath":"docs/doc/📚 计算机基础/编译原理/tsrqpph0qqsl9wbq.md","toc":[{"value":"7.1 代码生成概述","url":"#71-代码生成概述","depth":2},{"value":"7.1.1 代码生成的目标和挑战","url":"#711-代码生成的目标和挑战","depth":3},{"value":"7.1.2 代码生成的输入和输出","url":"#712-代码生成的输入和输出","depth":3},{"value":"7.2 指令选择","url":"#72-指令选择","depth":2},{"value":"7.2.1 指令选择的基本策略","url":"#721-指令选择的基本策略","depth":3},{"value":"7.2.2 基于树覆盖的指令选择","url":"#722-基于树覆盖的指令选择","depth":3},{"value":"7.2.3 复杂指令集的处理","url":"#723-复杂指令集的处理","depth":3},{"value":"7.3 寄存器分配","url":"#73-寄存器分配","depth":2},{"value":"7.3.1 寄存器分配的基本问题","url":"#731-寄存器分配的基本问题","depth":3},{"value":"7.3.2 图着色寄存器分配","url":"#732-图着色寄存器分配","depth":3},{"value":"7.3.3 线性扫描寄存器分配","url":"#733-线性扫描寄存器分配","depth":3},{"value":"7.3.4 寄存器分配的优化策略","url":"#734-寄存器分配的优化策略","depth":3},{"value":"7.4 指令调度","url":"#74-指令调度","depth":2},{"value":"7.4.1 基本块内指令调度","url":"#741-基本块内指令调度","depth":3},{"value":"7.4.2 全局指令调度","url":"#742-全局指令调度","depth":3},{"value":"7.4.3 软件流水","url":"#743-软件流水","depth":3},{"value":"7.5 目标代码优化","url":"#75-目标代码优化","depth":2},{"value":"7.5.1 窥孔优化","url":"#751-窥孔优化","depth":3},{"value":"7.5.2 分支优化","url":"#752-分支优化","depth":3},{"value":"7.5.3 地址计算优化","url":"#753-地址计算优化","depth":3},{"value":"7.6 目标相关的代码生成","url":"#76-目标相关的代码生成","depth":2},{"value":"7.6.1 CISC架构的代码生成","url":"#761-cisc架构的代码生成","depth":3},{"value":"7.6.2 RISC架构的代码生成","url":"#762-risc架构的代码生成","depth":3},{"value":"7.6.3 VLIW架构的代码生成","url":"#763-vliw架构的代码生成","depth":3},{"value":"7.7 代码生成的评估与优化","url":"#77-代码生成的评估与优化","depth":2},{"value":"7.7.1 性能度量","url":"#771-性能度量","depth":3},{"value":"7.7.2 反馈导向优化","url":"#772-反馈导向优化","depth":3},{"value":"7.7.3 自适应优化","url":"#773-自适应优化","depth":3},{"value":"7.8 新兴技术和未来方向","url":"#78-新兴技术和未来方向","depth":2},{"value":"7.8.1 机器学习辅助的代码生成","url":"#781-机器学习辅助的代码生成","depth":3},{"value":"7.8.2 针对新型硬件架构的代码生成","url":"#782-针对新型硬件架构的代码生成","depth":3},{"value":"7.8.3 跨平台代码生成","url":"#783-跨平台代码生成","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"7、代码生成","datePublished":"2024-06-28T04:00:48.000Z","dateModified":"2024-06-28T04:10:09.000Z","description":"keywords: 代码生成, 目标代码, 指令选择, 寄存器分配, 指令调度---代码生成是编译过程的最后阶段，它将优化后的中间表示转换为目标机器的汇编代码或机器代码。这个阶段直接影响程序的执行效率和资源使用，因此在编译器设计中占据着关键地位。7.1 代码生成概述7.1.1 代码生成的目标和...","url":"https://offernow.cn/docs/doc/📚 计算机基础/编译原理/tsrqpph0qqsl9wbq"}},{"title":"8、编译器实现与工具","date":"2024-06-28T04:00:46.000Z","urlname":"dxd5zdrf6d0uhmfc","is_nav":false,"updated":"2024-06-28T04:06:56.000Z","not_show":false,"description":"keywords: 编译器实现, 编译器工具, 词法分析器生成, 语法分析器生成, 中间代码生成---编译器的实现是一个复杂的工程，涉及多个阶段和多种技术。本章将介绍编译器的实现方法，以及在编译器构建过程中常用的工具和技术。8.1 编译器结构概述8.1.1 编译器的基本结构编译器通常由前端、中...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/1a58e032e050cec963f4527b2d6b16ec.svg","tags":[],"keywords":"编译器实现, 编译器工具, 词法分析器生成, 语法分析器生成, 中间代码生成","authors":["whitedew"],"type":"Post","readingTime":{"words":1791,"minutes":6,"text":"6 分钟"},"slug":"doc/📚 计算机基础/编译原理/dxd5zdrf6d0uhmfc","path":"docs/doc/📚 计算机基础/编译原理/dxd5zdrf6d0uhmfc","filePath":"docs/doc/📚 计算机基础/编译原理/dxd5zdrf6d0uhmfc.md","toc":[{"value":"8.1 编译器结构概述","url":"#81-编译器结构概述","depth":2},{"value":"8.1.1 编译器的基本结构","url":"#811-编译器的基本结构","depth":3},{"value":"8.1.3 编译器构建的策略","url":"#813-编译器构建的策略","depth":3},{"value":"8.2 词法分析器生成工具","url":"#82-词法分析器生成工具","depth":2},{"value":"8.2.1 Lex/Flex 简介","url":"#821-lexflex-简介","depth":3},{"value":"8.2.2 Lex 规则文件的结构","url":"#822-lex-规则文件的结构","depth":3},{"value":"8.2.3 使用 Lex/Flex 生成词法分析器","url":"#823-使用-lexflex-生成词法分析器","depth":3},{"value":"8.3 语法分析器生成工具","url":"#83-语法分析器生成工具","depth":2},{"value":"8.3.1 Yacc/Bison 简介","url":"#831-yaccbison-简介","depth":3},{"value":"8.3.2 Yacc 规则文件的结构","url":"#832-yacc-规则文件的结构","depth":3},{"value":"8.3.3 使用 Yacc/Bison 生成语法分析器","url":"#833-使用-yaccbison-生成语法分析器","depth":3},{"value":"8.3.4 Lex 和 Yacc 的协同工作","url":"#834-lex-和-yacc-的协同工作","depth":3},{"value":"8.4 语义分析和中间代码生成工具","url":"#84-语义分析和中间代码生成工具","depth":2},{"value":"8.4.1 属性文法工具","url":"#841-属性文法工具","depth":3},{"value":"8.4.2 树遍历器生成器","url":"#842-树遍历器生成器","depth":3},{"value":"8.4.3 中间表示库","url":"#843-中间表示库","depth":3},{"value":"8.5 代码优化框架","url":"#85-代码优化框架","depth":2},{"value":"8.5.1 LLVM 优化通道","url":"#851-llvm-优化通道","depth":3},{"value":"8.5.2 GCC 优化通道","url":"#852-gcc-优化通道","depth":3},{"value":"8.5.3 数据流分析框架","url":"#853-数据流分析框架","depth":3},{"value":"8.6 目标代码生成工具","url":"#86-目标代码生成工具","depth":2},{"value":"8.6.1 指令选择生成器","url":"#861-指令选择生成器","depth":3},{"value":"8.6.2 寄存器分配器生成器","url":"#862-寄存器分配器生成器","depth":3},{"value":"8.6.3 汇编器和链接器","url":"#863-汇编器和链接器","depth":3},{"value":"8.7 调试信息生成","url":"#87-调试信息生成","depth":2},{"value":"8.7.1 DWARF 调试信息","url":"#871-dwarf-调试信息","depth":3},{"value":"8.7.2 源码映射工具","url":"#872-源码映射工具","depth":3},{"value":"8.8 编译器测试工具","url":"#88-编译器测试工具","depth":2},{"value":"8.8.1 测试用例生成器","url":"#881-测试用例生成器","depth":3},{"value":"8.8.2 模糊测试（Fuzzing）工具","url":"#882-模糊测试fuzzing工具","depth":3},{"value":"8.8.3 回归测试框架","url":"#883-回归测试框架","depth":3},{"value":"8.9 性能分析工具","url":"#89-性能分析工具","depth":2},{"value":"8.9.1 编译时间分析","url":"#891-编译时间分析","depth":3},{"value":"8.9.2 生成代码质量分析","url":"#892-生成代码质量分析","depth":3},{"value":"8.10 编译器开发环境","url":"#810-编译器开发环境","depth":2},{"value":"8.10.1 集成开发环境（IDE）","url":"#8101-集成开发环境ide","depth":3},{"value":"8.10.2 版本控制系统","url":"#8102-版本控制系统","depth":3},{"value":"8.10.3 持续集成/持续部署（CI/CD）","url":"#8103-持续集成持续部署cicd","depth":3},{"value":"8.11 新兴工具和技术","url":"#811-新兴工具和技术","depth":2},{"value":"8.11.1 机器学习辅助的编译器工具","url":"#8111-机器学习辅助的编译器工具","depth":3},{"value":"8.11.2 形式化验证工具","url":"#8112-形式化验证工具","depth":3},{"value":"8.11.3 跨语言编译工具","url":"#8113-跨语言编译工具","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"8、编译器实现与工具","datePublished":"2024-06-28T04:00:46.000Z","dateModified":"2024-06-28T04:06:56.000Z","description":"keywords: 编译器实现, 编译器工具, 词法分析器生成, 语法分析器生成, 中间代码生成---编译器的实现是一个复杂的工程，涉及多个阶段和多种技术。本章将介绍编译器的实现方法，以及在编译器构建过程中常用的工具和技术。8.1 编译器结构概述8.1.1 编译器的基本结构编译器通常由前端、中...","url":"https://offernow.cn/docs/doc/📚 计算机基础/编译原理/dxd5zdrf6d0uhmfc"}},{"title":"9、编译器前沿技术与未来趋势","date":"2024-06-28T04:00:44.000Z","urlname":"tp9ez5znawwoshe2","is_nav":false,"updated":"2024-06-28T04:19:29.000Z","not_show":false,"description":"keywords: 并行编译, 跨语言编译, 机器学习编译, 量子计算编译, 编译器安全---随着计算机科学和软件工程的快速发展，编译器技术也在不断进化，以适应新的硬件架构、编程范式和应用需求。本章将深入探讨编译器领域的前沿技术和未来发展趋势，为读者提供一个全面的视角。9.1 并行和分布式编译...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/4b1a042028a48b128557c0d1db3f03ec.svg","tags":[],"keywords":"并行编译, 跨语言编译, 机器学习编译, 量子计算编译, 编译器安全","authors":["whitedew"],"type":"Post","readingTime":{"words":7238,"minutes":24,"text":"24 分钟"},"slug":"doc/📚 计算机基础/编译原理/tp9ez5znawwoshe2","path":"docs/doc/📚 计算机基础/编译原理/tp9ez5znawwoshe2","filePath":"docs/doc/📚 计算机基础/编译原理/tp9ez5znawwoshe2.md","toc":[{"value":"9.1 并行和分布式编译","url":"#91-并行和分布式编译","depth":2},{"value":"9.1.1 多核编译","url":"#911-多核编译","depth":3},{"value":"9.1.2 分布式编译","url":"#912-分布式编译","depth":3},{"value":"9.1.3 增量编译","url":"#913-增量编译","depth":3},{"value":"9.2 跨语言编译","url":"#92-跨语言编译","depth":2},{"value":"9.2.1 多语言虚拟机","url":"#921-多语言虚拟机","depth":3},{"value":"9.2.2 源到源转译","url":"#922-源到源转译","depth":3},{"value":"9.2.3 多目标后端","url":"#923-多目标后端","depth":3},{"value":"9.3 机器学习与编译器优化","url":"#93-机器学习与编译器优化","depth":2},{"value":"9.3.1 自动特征提取","url":"#931-自动特征提取","depth":3},{"value":"9.3.2 智能指令调度","url":"#932-智能指令调度","depth":3},{"value":"9.3.3 自适应编译","url":"#933-自适应编译","depth":3},{"value":"9.4 面向特定领域的编译器","url":"#94-面向特定领域的编译器","depth":2},{"value":"9.4.1 图像处理编译器","url":"#941-图像处理编译器","depth":3},{"value":"9.4.2 深度学习编译器","url":"#942-深度学习编译器","depth":3},{"value":"9.4.3 数据库查询编译器","url":"#943-数据库查询编译器","depth":3},{"value":"9.5 量子计算编译","url":"#95-量子计算编译","depth":2},{"value":"9.5.1 量子电路优化","url":"#951-量子电路优化","depth":3},{"value":"9.5.2 量子-经典混合编译","url":"#952-量子-经典混合编译","depth":3},{"value":"9.5.3 错误校正编译","url":"#953-错误校正编译","depth":3},{"value":"9.6 编译器安全","url":"#96-编译器安全","depth":2},{"value":"9.6.1 安全性检查","url":"#961-安全性检查","depth":3},{"value":"9.6.2 漏洞缓解","url":"#962-漏洞缓解","depth":3},{"value":"9.6.3 形式化验证","url":"#963-形式化验证","depth":3},{"value":"9.7 可逆计算编译","url":"#97-可逆计算编译","depth":2},{"value":"9.7.1 可逆程序转换","url":"#971-可逆程序转换","depth":3},{"value":"9.7.2 可逆调试","url":"#972-可逆调试","depth":3},{"value":"9.8 编译器基础设施","url":"#98-编译器基础设施","depth":2},{"value":"9.8.1 LLVM 项目","url":"#981-llvm-项目","depth":3},{"value":"9.8.2 GCC 生态系统","url":"#982-gcc-生态系统","depth":3},{"value":"9.8.3 WebAssembly","url":"#983-webassembly","depth":3},{"value":"9.9 编程语言设计与编译器协同演进","url":"#99-编程语言设计与编译器协同演进","depth":2},{"value":"9.9.1 语言特性的高效实现","url":"#991-语言特性的高效实现","depth":3},{"value":"9.9.2 编译时计算","url":"#992-编译时计算","depth":3},{"value":"9.9.3 元编程","url":"#993-元编程","depth":3},{"value":"9.10 未来展望","url":"#910-未来展望","depth":2},{"value":"9.10.1 自适应智能编译系统","url":"#9101-自适应智能编译系统","depth":3},{"value":"9.10.2 跨平台统一编译框架","url":"#9102-跨平台统一编译框架","depth":3},{"value":"9.10.3 编译器即服务（Compiler as a Service）","url":"#9103-编译器即服务compiler-as-a-service","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"9、编译器前沿技术与未来趋势","datePublished":"2024-06-28T04:00:44.000Z","dateModified":"2024-06-28T04:19:29.000Z","description":"keywords: 并行编译, 跨语言编译, 机器学习编译, 量子计算编译, 编译器安全---随着计算机科学和软件工程的快速发展，编译器技术也在不断进化，以适应新的硬件架构、编程范式和应用需求。本章将深入探讨编译器领域的前沿技术和未来发展趋势，为读者提供一个全面的视角。9.1 并行和分布式编译...","url":"https://offernow.cn/docs/doc/📚 计算机基础/编译原理/tp9ez5znawwoshe2"}},{"title":"10、高级编译器优化技术","date":"2024-06-28T04:00:42.000Z","urlname":"tuwzgkad8g0tgm6g","is_nav":false,"updated":"2024-06-28T04:21:59.000Z","not_show":false,"description":"keywords: 编译器优化, 循环优化, 数据流分析, 内联优化, 并行化---编译器优化是提高程序执行效率的关键因素。本章将深入探讨一系列高级编译器优化技术，这些技术能够显著提升程序的性能、减少资源消耗，并为现代硬件架构提供更好的适配。10.1 优化概述编译器优化是一个复杂的过程，涉及多...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/a41587d01f52a47bbadba94814f66901.svg","tags":[],"keywords":"编译器优化, 循环优化, 数据流分析, 内联优化, 并行化","authors":["whitedew"],"type":"Post","readingTime":{"words":3488,"minutes":12,"text":"12 分钟"},"slug":"doc/📚 计算机基础/编译原理/tuwzgkad8g0tgm6g","path":"docs/doc/📚 计算机基础/编译原理/tuwzgkad8g0tgm6g","filePath":"docs/doc/📚 计算机基础/编译原理/tuwzgkad8g0tgm6g.md","toc":[{"value":"10.1 优化概述","url":"#101-优化概述","depth":2},{"value":"10.1.1 优化的目标","url":"#1011-优化的目标","depth":3},{"value":"10.1.2 优化的层次","url":"#1012-优化的层次","depth":3},{"value":"10.1.3 优化的时机","url":"#1013-优化的时机","depth":3},{"value":"10.2.1 循环不变量外提","url":"#1021-循环不变量外提","depth":3},{"value":"10.2.2 循环展开","url":"#1022-循环展开","depth":3},{"value":"10.2.3 循环融合","url":"#1023-循环融合","depth":3},{"value":"10.2.4 循环分割","url":"#1024-循环分割","depth":3},{"value":"10.2.5 循环交换","url":"#1025-循环交换","depth":3},{"value":"10.3 数据流分析","url":"#103-数据流分析","depth":2},{"value":"10.3.1 到达定值分析","url":"#1031-到达定值分析","depth":3},{"value":"10.3.2 活跃变量分析","url":"#1032-活跃变量分析","depth":3},{"value":"10.3.3 可用表达式分析","url":"#1033-可用表达式分析","depth":3},{"value":"10.4.1 SSA构建","url":"#1041-ssa构建","depth":3},{"value":"10.4.2 基于SSA的优化","url":"#1042-基于ssa的优化","depth":3},{"value":"10.5 全局优化","url":"#105-全局优化","depth":2},{"value":"10.5.1 全局公共子表达式消除","url":"#1051-全局公共子表达式消除","depth":3},{"value":"10.5.2 全局值编号","url":"#1052-全局值编号","depth":3},{"value":"10.5.3 全局代码移动","url":"#1053-全局代码移动","depth":3},{"value":"10.6 过程间优化","url":"#106-过程间优化","depth":2},{"value":"10.6.1 内联优化","url":"#1061-内联优化","depth":3},{"value":"10.6.2 过程间常量传播","url":"#1062-过程间常量传播","depth":3},{"value":"10.6.3 死函数消除","url":"#1063-死函数消除","depth":3},{"value":"10.7 指令调度","url":"#107-指令调度","depth":2},{"value":"10.7.1 列表调度","url":"#1071-列表调度","depth":3},{"value":"10.7.2 软件流水","url":"#1072-软件流水","depth":3},{"value":"10.8 内存优化","url":"#108-内存优化","depth":2},{"value":"10.8.1 缓存优化","url":"#1081-缓存优化","depth":3},{"value":"10.8.2 预取指令插入","url":"#1082-预取指令插入","depth":3},{"value":"10.8.3 内存别名分析","url":"#1083-内存别名分析","depth":3},{"value":"10.9 并行化优化","url":"#109-并行化优化","depth":2},{"value":"10.9.1 自动向量化","url":"#1091-自动向量化","depth":3},{"value":"10.9.2 自动并行化","url":"#1092-自动并行化","depth":3},{"value":"10.9.3 任务分解","url":"#1093-任务分解","depth":3},{"value":"10.10 针对特定硬件的优化","url":"#1010-针对特定硬件的优化","depth":2},{"value":"10.10.1 GPU优化","url":"#10101-gpu优化","depth":3},{"value":"10.10.2 DSP优化","url":"#10102-dsp优化","depth":3},{"value":"10.10.3 FPGA优化","url":"#10103-fpga优化","depth":3},{"value":"10.11 基于机器学习的优化","url":"#1011-基于机器学习的优化","depth":2},{"value":"10.11.1 自动特征提取","url":"#10111-自动特征提取","depth":3},{"value":"10.11.2 优化序列预测","url":"#10112-优化序列预测","depth":3},{"value":"10.11.3 自适应编译","url":"#10113-自适应编译","depth":3},{"value":"10.12.1 边界检查优化","url":"#10121-边界检查优化","depth":3},{"value":"10.12.2 控制流完整性","url":"#10122-控制流完整性","depth":3},{"value":"10.12.3 数据流完整性","url":"#10123-数据流完整性","depth":3},{"value":"10.13 调试信息保留","url":"#1013-调试信息保留","depth":2},{"value":"10.13.1 行号映射","url":"#10131-行号映射","depth":3},{"value":"10.13.2 变量位置跟踪","url":"#10132-变量位置跟踪","depth":3},{"value":"10.13.3 优化决策记录","url":"#10133-优化决策记录","depth":3},{"value":"10.14 优化验证","url":"#1014-优化验证","depth":2},{"value":"10.14.1 形式化验证","url":"#10141-形式化验证","depth":3},{"value":"10.14.2 测试套件","url":"#10142-测试套件","depth":3},{"value":"10.14.3 对比测试","url":"#10143-对比测试","depth":3},{"value":"10.15 性能分析与反馈优化","url":"#1015-性能分析与反馈优化","depth":2},{"value":"10.15.1 性能剖析","url":"#10151-性能剖析","depth":3},{"value":"10.15.2 基于剖析的优化（PGO）","url":"#10152-基于剖析的优化pgo","depth":3},{"value":"10.16 领域特定优化","url":"#1016-领域特定优化","depth":2},{"value":"10.16.1 数据库查询优化","url":"#10161-数据库查询优化","depth":3},{"value":"10.16.2 图像处理优化","url":"#10162-图像处理优化","depth":3},{"value":"10.16.3 机器学习模型优化","url":"#10163-机器学习模型优化","depth":3},{"value":"10.17 跨语言优化","url":"#1017-跨语言优化","depth":2},{"value":"10.17.1 统一中间表示","url":"#10171-统一中间表示","depth":3},{"value":"10.17.2 跨语言内联","url":"#10172-跨语言内联","depth":3},{"value":"10.17.3 全局资源分配","url":"#10173-全局资源分配","depth":3},{"value":"10.18 可组合优化框架","url":"#1018-可组合优化框架","depth":2},{"value":"10.18.1 优化pass接口","url":"#10181-优化pass接口","depth":3},{"value":"10.18.2 依赖管理","url":"#10182-依赖管理","depth":3},{"value":"10.18.3 优化策略描述语言","url":"#10183-优化策略描述语言","depth":3},{"value":"10.19 编译时元编程","url":"#1019-编译时元编程","depth":2},{"value":"10.19.1 模板元编程","url":"#10191-模板元编程","depth":3},{"value":"10.19.2 宏展开优化","url":"#10192-宏展开优化","depth":3},{"value":"10.19.3 编译时反射","url":"#10193-编译时反射","depth":3},{"value":"10.20 未来趋势","url":"#1020-未来趋势","depth":2},{"value":"10.20.1 自适应优化系统","url":"#10201-自适应优化系统","depth":3},{"value":"10.20.2 量子计算优化","url":"#10202-量子计算优化","depth":3},{"value":"10.20.3 神经网络辅助优化","url":"#10203-神经网络辅助优化","depth":3},{"value":"10.20.4 跨平台统一优化","url":"#10204-跨平台统一优化","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"10、高级编译器优化技术","datePublished":"2024-06-28T04:00:42.000Z","dateModified":"2024-06-28T04:21:59.000Z","description":"keywords: 编译器优化, 循环优化, 数据流分析, 内联优化, 并行化---编译器优化是提高程序执行效率的关键因素。本章将深入探讨一系列高级编译器优化技术，这些技术能够显著提升程序的性能、减少资源消耗，并为现代硬件架构提供更好的适配。10.1 优化概述编译器优化是一个复杂的过程，涉及多...","url":"https://offernow.cn/docs/doc/📚 计算机基础/编译原理/tuwzgkad8g0tgm6g"}},{"title":"6、 代码优化","date":"2024-06-28T04:00:09.000Z","urlname":"gc74g8642uvv7epf","is_nav":false,"updated":"2024-06-28T04:03:16.000Z","not_show":false,"description":"keywords: 代码优化, 编译器优化, 局部优化, 全局优化, 数据流分析6.1 代码优化的概述代码优化是编译器设计中的一个核心环节，其目标是在保持程序语义不变的前提下，改进中间代码或目标代码，以生成更高效的等价程序。优化的重要性不言而喻：它能显著提升程序的执行效率，减少资源消耗，并充分...","tags":[],"keywords":"代码优化, 编译器优化, 局部优化, 全局优化, 数据流分析","authors":["whitedew"],"type":"Post","readingTime":{"words":5396,"minutes":18,"text":"18 分钟"},"slug":"doc/📚 计算机基础/编译原理/gc74g8642uvv7epf","path":"docs/doc/📚 计算机基础/编译原理/gc74g8642uvv7epf","filePath":"docs/doc/📚 计算机基础/编译原理/gc74g8642uvv7epf.md","toc":[{"value":"6.1 代码优化的概述","url":"#61-代码优化的概述","depth":2},{"value":"6.1.1 优化的目标和意义","url":"#611-优化的目标和意义","depth":3},{"value":"6.1.2 优化的层次","url":"#612-优化的层次","depth":3},{"value":"6.1.3 优化与正确性","url":"#613-优化与正确性","depth":3},{"value":"6.1.4 优化的度量","url":"#614-优化的度量","depth":3},{"value":"6.2 局部优化","url":"#62-局部优化","depth":2},{"value":"6.2.1 基本块的识别与分析","url":"#621-基本块的识别与分析","depth":3},{"value":"6.2.2 常量折叠和传播","url":"#622-常量折叠和传播","depth":3},{"value":"6.2.3 代数简化","url":"#623-代数简化","depth":3},{"value":"6.2.4 强度削弱","url":"#624-强度削弱","depth":3},{"value":"6.2.5 公共子表达式消除","url":"#625-公共子表达式消除","depth":3},{"value":"6.2.6 死代码消除","url":"#626-死代码消除","depth":3},{"value":"6.3 全局优化","url":"#63-全局优化","depth":2},{"value":"6.3.1 控制流图的构建与分析","url":"#631-控制流图的构建与分析","depth":3},{"value":"6.3.2 全局公共子表达式消除","url":"#632-全局公共子表达式消除","depth":3},{"value":"6.3.3 复制传播","url":"#633-复制传播","depth":3},{"value":"6.3.4 常量传播","url":"#634-常量传播","depth":3},{"value":"6.3.5 死变量消除","url":"#635-死变量消除","depth":3},{"value":"6.3.6 代码移动","url":"#636-代码移动","depth":3},{"value":"6.4 数据流分析","url":"#64-数据流分析","depth":2},{"value":"6.4.1 数据流分析的基本概念","url":"#641-数据流分析的基本概念","depth":3},{"value":"6.4.2 到达定值分析","url":"#642-到达定值分析","depth":3},{"value":"6.4.3 活跃变量分析","url":"#643-活跃变量分析","depth":3},{"value":"6.4.4 可用表达式分析","url":"#644-可用表达式分析","depth":3},{"value":"6.4.5 迭代算法与固定点","url":"#645-迭代算法与固定点","depth":3},{"value":"6.5 循环优化","url":"#65-循环优化","depth":2},{"value":"6.5.1 循环结构的识别","url":"#651-循环结构的识别","depth":3},{"value":"6.5.2 循环不变代码外提","url":"#652-循环不变代码外提","depth":3},{"value":"6.5.3 循环展开","url":"#653-循环展开","depth":3},{"value":"6.5.4 循环融合与分裂","url":"#654-循环融合与分裂","depth":3},{"value":"6.5.5 循环向量化","url":"#655-循环向量化","depth":3},{"value":"6.5.6 循环并行化","url":"#656-循环并行化","depth":3},{"value":"6.6 机器无关优化","url":"#66-机器无关优化","depth":2},{"value":"6.6.1 函数内联","url":"#661-函数内联","depth":3},{"value":"6.6.2 尾递归优化","url":"#662-尾递归优化","depth":3},{"value":"6.6.3 过程间分析与优化","url":"#663-过程间分析与优化","depth":3},{"value":"6.6.4 部分求值","url":"#664-部分求值","depth":3},{"value":"6.6.5 代码特化","url":"#665-代码特化","depth":3},{"value":"6.7 优化的实现与框架","url":"#67-优化的实现与框架","depth":2},{"value":"6.7.1 SSA形式及其在优化中的应用","url":"#671-ssa形式及其在优化中的应用","depth":3},{"value":"6.7.2 优化pass的设计与实现","url":"#672-优化pass的设计与实现","depth":3},{"value":"6.7.3 优化序列的调度","url":"#673-优化序列的调度","depth":3},{"value":"6.7.4 编译时间与优化效果的权衡","url":"#674-编译时间与优化效果的权衡","depth":3},{"value":"6.8 高级优化技术","url":"#68-高级优化技术","depth":2},{"value":"6.8.1 基于profile的优化","url":"#681-基于profile的优化","depth":3},{"value":"6.8.2 投机性优化","url":"#682-投机性优化","depth":3},{"value":"6.8.3 自动并行化","url":"#683-自动并行化","depth":3},{"value":"6.8.4 缓存优化","url":"#684-缓存优化","depth":3},{"value":"6.8.5 内存层次结构感知优化","url":"#685-内存层次结构感知优化","depth":3},{"value":"6.9 优化的局限性与挑战","url":"#69-优化的局限性与挑战","depth":2},{"value":"6.9.1 不可优化的情况","url":"#691-不可优化的情况","depth":3},{"value":"6.9.2 优化对调试的影响","url":"#692-优化对调试的影响","depth":3},{"value":"6.9.3 优化的正确性验证","url":"#693-优化的正确性验证","depth":3},{"value":"6.9.4 未来优化技术的发展方向","url":"#694-未来优化技术的发展方向","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6、 代码优化","datePublished":"2024-06-28T04:00:09.000Z","dateModified":"2024-06-28T04:03:16.000Z","description":"keywords: 代码优化, 编译器优化, 局部优化, 全局优化, 数据流分析6.1 代码优化的概述代码优化是编译器设计中的一个核心环节，其目标是在保持程序语义不变的前提下，改进中间代码或目标代码，以生成更高效的等价程序。优化的重要性不言而喻：它能显著提升程序的执行效率，减少资源消耗，并充分...","url":"https://offernow.cn/docs/doc/📚 计算机基础/编译原理/gc74g8642uvv7epf"}},{"title":"第 1 章 初识 R 语言","date":"2024-06-28T03:57:16.000Z","urlname":"zmi52td6uktfvs7n","is_nav":false,"updated":"2024-06-28T03:57:41.000Z","not_show":false,"description":"keywords: R 语言入门, R 语言安装, RStudio, 第一个 R 程序欢迎来到 R 语言的世界!在这一章,我们将一起迈出学习 R 语言的第一步。作为一名有多年 R 语言使用经验的数据分析师,我将与你分享我的学习心得,并引导你快速掌握 R 语言的基础知识。1.1 R 语言简介1....","tags":[],"keywords":"R 语言入门, R 语言安装, RStudio, 第一个 R 程序","authors":["whitedew"],"type":"Post","readingTime":{"words":3734,"minutes":12,"text":"12 分钟"},"slug":"doc/💻 编程语言/R语言/zmi52td6uktfvs7n","path":"docs/doc/💻 编程语言/R语言/zmi52td6uktfvs7n","filePath":"docs/doc/💻 编程语言/R语言/zmi52td6uktfvs7n.md","toc":[{"value":"1.1 R 语言简介","url":"#11-r-语言简介","depth":2},{"value":"1.1.1 R 语言的历史和发展","url":"#111-r-语言的历史和发展","depth":3},{"value":"1.1.2 R 语言的应用领域","url":"#112-r-语言的应用领域","depth":3},{"value":"1.1.3 R 语言的主要功能","url":"#113-r-语言的主要功能","depth":3},{"value":"1.2 R 语言的安装与环境配置","url":"#12-r-语言的安装与环境配置","depth":2},{"value":"1.2.1 下载与安装 R","url":"#121-下载与安装-r","depth":3},{"value":"1.2.2 配置 R 环境","url":"#122-配置-r-环境","depth":3},{"value":"1.2.3 安装必要的 R 包","url":"#123-安装必要的-r-包","depth":3},{"value":"1.3 RStudio 的使用","url":"#13-rstudio-的使用","depth":2},{"value":"1.3.1 RStudio 的安装与配置","url":"#131-rstudio-的安装与配置","depth":3},{"value":"1.3.2 RStudio 界面介绍","url":"#132-rstudio-界面介绍","depth":3},{"value":"1.3.3 使用 RStudio 进行编程","url":"#133-使用-rstudio-进行编程","depth":3},{"value":"1.4 第一个 R 程序","url":"#14-第一个-r-程序","depth":2},{"value":"1.4.1 创建脚本文件","url":"#141-创建脚本文件-1","depth":3},{"value":"1.4.1 创建脚本文件","url":"#141-创建脚本文件-2","depth":3},{"value":"1.4.2 编写简单的 R 代码","url":"#142-编写简单的-r-代码","depth":3},{"value":"1.4.3 运行 R 程序","url":"#143-运行-r-程序","depth":3},{"value":"1.4.4 保存和加载工作空间","url":"#144-保存和加载工作空间-1","depth":3},{"value":"小结","url":"#小结-6","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 1 章 初识 R 语言","datePublished":"2024-06-28T03:57:16.000Z","dateModified":"2024-06-28T03:57:41.000Z","description":"keywords: R 语言入门, R 语言安装, RStudio, 第一个 R 程序欢迎来到 R 语言的世界!在这一章,我们将一起迈出学习 R 语言的第一步。作为一名有多年 R 语言使用经验的数据分析师,我将与你分享我的学习心得,并引导你快速掌握 R 语言的基础知识。1.1 R 语言简介1....","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/zmi52td6uktfvs7n"}},{"title":"第 2 章 R 语言基本操作","date":"2024-06-28T03:56:56.000Z","urlname":"ngcm7lntltn1yfo2","is_nav":false,"updated":"2024-06-28T03:58:53.000Z","not_show":false,"description":"keywords: R 语言, 基本操作, 数据类型, 向量, 矩阵在前一章中，我们已经初步了解了 R 语言，并成功安装配置了 R 语言环境。接下来，让我们正式开启 R 语言编程之旅，首先从最基础的数据类型和操作开始学习。2.1 基本数据类型2.1.1 标量与向量在 R 语言中，最基本的数据类...","tags":[],"keywords":"R 语言, 基本操作, 数据类型, 向量, 矩阵","authors":["whitedew"],"type":"Post","readingTime":{"words":3274,"minutes":11,"text":"11 分钟"},"slug":"doc/💻 编程语言/R语言/ngcm7lntltn1yfo2","path":"docs/doc/💻 编程语言/R语言/ngcm7lntltn1yfo2","filePath":"docs/doc/💻 编程语言/R语言/ngcm7lntltn1yfo2.md","toc":[{"value":"2.1 基本数据类型","url":"#21-基本数据类型","depth":3},{"value":"2.1.1 标量与向量","url":"#211-标量与向量","depth":4},{"value":"2.1.2 矩阵与数组","url":"#212-矩阵与数组","depth":4},{"value":"2.1.3 数据框","url":"#213-数据框","depth":4},{"value":"2.1.4 列表与因子","url":"#214-列表与因子","depth":4},{"value":"2.2 向量和矩阵","url":"#22-向量和矩阵","depth":3},{"value":"2.2.1 向量的创建与操作","url":"#221-向量的创建与操作","depth":4},{"value":"2.2.2 矩阵的创建与操作","url":"#222-矩阵的创建与操作","depth":4},{"value":"2.2.3 矩阵运算","url":"#223-矩阵运算","depth":4},{"value":"2.2.4 矩阵分解","url":"#224-矩阵分解","depth":4},{"value":"2.3 数据框和列表","url":"#23-数据框和列表","depth":3},{"value":"2.3.1 数据框的创建与操作","url":"#231-数据框的创建与操作","depth":4},{"value":"2.3.2 列表的创建与操作","url":"#232-列表的创建与操作","depth":4},{"value":"2.3.3 数据框与列表的转换","url":"#233-数据框与列表的转换","depth":4},{"value":"2.4 常用函数和操作","url":"#24-常用函数和操作","depth":3},{"value":"2.4.1 常用数学函数","url":"#241-常用数学函数","depth":4},{"value":"2.4.2 统计函数","url":"#242-统计函数","depth":4},{"value":"2.4.3 应用函数","url":"#243-应用函数","depth":4},{"value":"2.4.4 自定义函数","url":"#244-自定义函数","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 2 章 R 语言基本操作","datePublished":"2024-06-28T03:56:56.000Z","dateModified":"2024-06-28T03:58:53.000Z","description":"keywords: R 语言, 基本操作, 数据类型, 向量, 矩阵在前一章中，我们已经初步了解了 R 语言，并成功安装配置了 R 语言环境。接下来，让我们正式开启 R 语言编程之旅，首先从最基础的数据类型和操作开始学习。2.1 基本数据类型2.1.1 标量与向量在 R 语言中，最基本的数据类...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/ngcm7lntltn1yfo2"}},{"title":"第 3 章 数据导入与导出","date":"2024-06-28T03:56:39.000Z","urlname":"zfippxfw1soqpl30","is_nav":false,"updated":"2024-07-16T14:13:07.000Z","not_show":false,"description":"keywords: R 语言数据导入,文本文件,Excel 文件,数据库,数据导出在数据分析过程中,我们经常需要从各种来源导入数据到 R 中进行处理和分析。本章将详细介绍如何使用 R 语言从文本文件、Excel 文件和数据库中导入数据,以及如何将处理后的数据导出为各种格式的文件。3.1 导入文...","tags":[],"keywords":"R 语言数据导入,文本文件,Excel 文件,数据库,数据导出","authors":["whitedew"],"type":"Post","readingTime":{"words":2382,"minutes":8,"text":"8 分钟"},"slug":"doc/💻 编程语言/R语言/zfippxfw1soqpl30","path":"docs/doc/💻 编程语言/R语言/zfippxfw1soqpl30","filePath":"docs/doc/💻 编程语言/R语言/zfippxfw1soqpl30.md","toc":[{"value":"3.1 导入文本文件","url":"#31-导入文本文件","depth":2},{"value":"3.1.1 读取 CSV 文件","url":"#311-读取-csv-文件","depth":3},{"value":"3.1.2 读取 TXT 文件","url":"#312-读取-txt-文件","depth":3},{"value":"3.2 导入 Excel 文件","url":"#32-导入-excel-文件","depth":2},{"value":"3.2.1 读取 Excel 文件","url":"#321-读取-excel-文件","depth":3},{"value":"3.2.2 处理 Excel 数据","url":"#322-处理-excel-数据","depth":3},{"value":"3.3 导入数据库","url":"#33-导入数据库","depth":2},{"value":"3.3.1 连接数据库","url":"#331-连接数据库","depth":3},{"value":"3.3.2 读取数据库数据","url":"#332-读取数据库数据","depth":3},{"value":"3.4 数据导出","url":"#34-数据导出","depth":2},{"value":"3.4.1 导出到 CSV 文件","url":"#341-导出到-csv-文件","depth":3},{"value":"3.4.2 导出到 Excel 文件","url":"#342-导出到-excel-文件","depth":3},{"value":"3.4.3 导出到数据库","url":"#343-导出到数据库","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 3 章 数据导入与导出","datePublished":"2024-06-28T03:56:39.000Z","dateModified":"2024-07-16T14:13:07.000Z","description":"keywords: R 语言数据导入,文本文件,Excel 文件,数据库,数据导出在数据分析过程中,我们经常需要从各种来源导入数据到 R 中进行处理和分析。本章将详细介绍如何使用 R 语言从文本文件、Excel 文件和数据库中导入数据,以及如何将处理后的数据导出为各种格式的文件。3.1 导入文...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/zfippxfw1soqpl30"}},{"title":"第 4 章 数据处理与清洗","date":"2024-06-28T03:55:36.000Z","urlname":"vtlzxmtlpwwggps0","is_nav":false,"updated":"2024-06-28T03:56:15.000Z","not_show":false,"description":"keywords: 数据清洗, 缺失值处理, 数据整合, 数据合并在数据分析和建模之前,往往需要对原始数据进行必要的清洗和预处理,以确保数据的质量和可用性。本章将介绍 R 语言中常用的数据处理与清洗技术,包括缺失值处理、异常值处理、数据整合与合并等。通过本章的学习,你将掌握如何使用 R 语言高...","tags":[],"keywords":"数据清洗, 缺失值处理, 数据整合, 数据合并","authors":["whitedew"],"type":"Post","readingTime":{"words":1425,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/R语言/vtlzxmtlpwwggps0","path":"docs/doc/💻 编程语言/R语言/vtlzxmtlpwwggps0","filePath":"docs/doc/💻 编程语言/R语言/vtlzxmtlpwwggps0.md","toc":[{"value":"4.3 缺失值处理","url":"#43-缺失值处理","depth":3},{"value":"4.3.1 检测缺失值","url":"#431-检测缺失值","depth":4},{"value":"4.3.2 删除缺失值","url":"#432-删除缺失值","depth":4},{"value":"4.3.3 填补缺失值","url":"#433-填补缺失值","depth":4},{"value":"4.3.4 插值法","url":"#434-插值法","depth":4},{"value":"4.4 数据整合与合并","url":"#44-数据整合与合并","depth":3},{"value":"4.4.1 数据合并","url":"#441-数据合并","depth":4},{"value":"4.4.2 数据连接","url":"#442-数据连接","depth":4},{"value":"4.4.3 管道操作","url":"#443-管道操作","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 4 章 数据处理与清洗","datePublished":"2024-06-28T03:55:36.000Z","dateModified":"2024-06-28T03:56:15.000Z","description":"keywords: 数据清洗, 缺失值处理, 数据整合, 数据合并在数据分析和建模之前,往往需要对原始数据进行必要的清洗和预处理,以确保数据的质量和可用性。本章将介绍 R 语言中常用的数据处理与清洗技术,包括缺失值处理、异常值处理、数据整合与合并等。通过本章的学习,你将掌握如何使用 R 语言高...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/vtlzxmtlpwwggps0"}},{"title":"第 5 章 数据可视化","date":"2024-06-28T03:55:07.000Z","urlname":"vxk6z46tg1020y1q","is_nav":false,"updated":"2024-07-05T03:57:16.000Z","not_show":false,"description":"keywords: 数据可视化, ggplot2, plotly, 交互式图表数据可视化是数据分析过程中至关重要的一环。通过生动形象的图表，我们可以直观地展示数据背后的规律和趋势，让枯燥的数字\"活\"起来。本章将重点介绍 R 语言强大的可视化功能，带你从基础的绘图函数入手，逐步掌握 ggplot...","tags":[],"keywords":"数据可视化, ggplot2, plotly, 交互式图表","authors":["whitedew"],"type":"Post","readingTime":{"words":3431,"minutes":11,"text":"11 分钟"},"slug":"doc/💻 编程语言/R语言/vxk6z46tg1020y1q","path":"docs/doc/💻 编程语言/R语言/vxk6z46tg1020y1q","filePath":"docs/doc/💻 编程语言/R语言/vxk6z46tg1020y1q.md","toc":[{"value":"5.1 基本绘图函数","url":"#51-基本绘图函数","depth":2},{"value":"5.1.1 plot 函数","url":"#511-plot-函数","depth":3},{"value":"5.1.2 barplot 函数","url":"#512-barplot-函数","depth":3},{"value":"5.1.3 hist 函数","url":"#513-hist-函数","depth":3},{"value":"5.1.4 boxplot 函数","url":"#514-boxplot-函数","depth":3},{"value":"5.2 ggplot2 包的使用","url":"#52-ggplot2-包的使用","depth":2},{"value":"5.2.1 ggplot2 的基本概念","url":"#521-ggplot2-的基本概念","depth":3},{"value":"5.2.2 ggplot2 的基本语法","url":"#522-ggplot2-的基本语法","depth":3},{"value":"5.2.3 常用图形的绘制","url":"#523-常用图形的绘制","depth":3},{"value":"折线图","url":"#折线图","depth":4},{"value":"柱状图","url":"#柱状图","depth":4},{"value":"堆叠柱状图","url":"#堆叠柱状图","depth":4},{"value":"直方图","url":"#直方图","depth":4},{"value":"箱线图","url":"#箱线图","depth":4},{"value":"5.2.4 图形的美化与自定义","url":"#524-图形的美化与自定义","depth":3},{"value":"添加标题和标签","url":"#添加标题和标签","depth":4},{"value":"修改图例","url":"#修改图例","depth":4},{"value":"调整坐标轴","url":"#调整坐标轴","depth":4},{"value":"应用主题","url":"#应用主题","depth":4},{"value":"5.3 高级图形和自定义","url":"#53-高级图形和自定义","depth":2},{"value":"5.3.1 多图层绘制","url":"#531-多图层绘制","depth":3},{"value":"5.3.2 自定义几何对象","url":"#532-自定义几何对象","depth":3},{"value":"5.3.3 主题与配色","url":"#533-主题与配色","depth":3},{"value":"5.3.4 动态图形","url":"#534-动态图形","depth":3},{"value":"5.4 动态可视化","url":"#54-动态可视化","depth":2},{"value":"5.4.1 使用 plotly 进行动态绘图","url":"#541-使用-plotly-进行动态绘图","depth":3},{"value":"5.4.2 动态交互图形","url":"#542-动态交互图形","depth":3},{"value":"5.4.3 实时数据可视化","url":"#543-实时数据可视化","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 5 章 数据可视化","datePublished":"2024-06-28T03:55:07.000Z","dateModified":"2024-07-05T03:57:16.000Z","description":"keywords: 数据可视化, ggplot2, plotly, 交互式图表数据可视化是数据分析过程中至关重要的一环。通过生动形象的图表，我们可以直观地展示数据背后的规律和趋势，让枯燥的数字\"活\"起来。本章将重点介绍 R 语言强大的可视化功能，带你从基础的绘图函数入手，逐步掌握 ggplot...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/vxk6z46tg1020y1q"}},{"title":"第 6 章 统计分析","date":"2024-06-28T03:53:16.000Z","urlname":"syx0xhctmne8tdep","is_nav":false,"updated":"2024-06-28T03:55:05.000Z","not_show":false,"description":"keywords: 描述性统计, 假设检验, 回归分析, 方差分析统计分析是数据科学领域的核心内容之一,它为我们提供了分析和解释数据的方法和工具。在本章中,我们将学习如何使用 R 语言进行各种统计分析,包括描述性统计、假设检验、回归分析和方差分析等。通过本章的学习,你将掌握统计分析的基本概念和...","tags":[],"keywords":"描述性统计, 假设检验, 回归分析, 方差分析","authors":["whitedew"],"type":"Post","readingTime":{"words":3753,"minutes":13,"text":"13 分钟"},"slug":"doc/💻 编程语言/R语言/syx0xhctmne8tdep","path":"docs/doc/💻 编程语言/R语言/syx0xhctmne8tdep","filePath":"docs/doc/💻 编程语言/R语言/syx0xhctmne8tdep.md","toc":[{"value":"6.1 描述性统计","url":"#61-描述性统计","depth":2},{"value":"6.1.1 数据的集中趋势","url":"#611-数据的集中趋势","depth":3},{"value":"6.1.2 数据的离散趋势","url":"#612-数据的离散趋势","depth":3},{"value":"6.1.3 数据的分布形态","url":"#613-数据的分布形态","depth":3},{"value":"6.2 假设检验","url":"#62-假设检验","depth":2},{"value":"6.2.1 t 检验","url":"#621-t-检验","depth":3},{"value":"6.2.2 卡方检验","url":"#622-卡方检验","depth":3},{"value":"6.2.3 方差分析","url":"#623-方差分析","depth":3},{"value":"6.3 回归分析","url":"#63-回归分析","depth":2},{"value":"6.3.1 简单线性回归","url":"#631-简单线性回归","depth":3},{"value":"6.3.2 多元线性回归","url":"#632-多元线性回归","depth":3},{"value":"6.3.3 非线性回归","url":"#633-非线性回归","depth":3},{"value":"6.4 方差分析","url":"#64-方差分析","depth":2},{"value":"6.4.1 单因素方差分析","url":"#641-单因素方差分析","depth":3},{"value":"6.4.2 双因素方差分析","url":"#642-双因素方差分析","depth":3},{"value":"6.4.3 重复测量方差分析","url":"#643-重复测量方差分析","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 6 章 统计分析","datePublished":"2024-06-28T03:53:16.000Z","dateModified":"2024-06-28T03:55:05.000Z","description":"keywords: 描述性统计, 假设检验, 回归分析, 方差分析统计分析是数据科学领域的核心内容之一,它为我们提供了分析和解释数据的方法和工具。在本章中,我们将学习如何使用 R 语言进行各种统计分析,包括描述性统计、假设检验、回归分析和方差分析等。通过本章的学习,你将掌握统计分析的基本概念和...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/syx0xhctmne8tdep"}},{"title":"第 7 章 复杂数据处理","date":"2024-06-28T03:52:54.000Z","urlname":"lgc4k6alfoid5cfc","is_nav":false,"updated":"2024-06-28T03:59:11.000Z","not_show":false,"description":"keywords: 字符串处理, 日期时间处理, 因子处理, 高效数据处理在数据分析过程中,我们经常会遇到一些复杂的数据类型,如字符串、日期时间、因子等。为了更好地分析和处理这些数据,本章将详细介绍如何在 R 语言中进行复杂数据处理。7.1 字符串处理字符串是由一系列字符组成的序列。在数据分析...","tags":[],"keywords":"字符串处理, 日期时间处理, 因子处理, 高效数据处理","authors":["whitedew"],"type":"Post","readingTime":{"words":1684,"minutes":6,"text":"6 分钟"},"slug":"doc/💻 编程语言/R语言/lgc4k6alfoid5cfc","path":"docs/doc/💻 编程语言/R语言/lgc4k6alfoid5cfc","filePath":"docs/doc/💻 编程语言/R语言/lgc4k6alfoid5cfc.md","toc":[{"value":"7.1 字符串处理","url":"#71-字符串处理","depth":3},{"value":"7.1.1 字符串的基本操作","url":"#711-字符串的基本操作","depth":4},{"value":"7.1.2 字符串的匹配与替换","url":"#712-字符串的匹配与替换","depth":4},{"value":"7.1.3 正则表达式","url":"#713-正则表达式","depth":4},{"value":"7.2 日期与时间处理","url":"#72-日期与时间处理","depth":3},{"value":"7.2.1 日期与时间的基本操作","url":"#721-日期与时间的基本操作","depth":4},{"value":"7.2.2 日期格式的转换","url":"#722-日期格式的转换","depth":4},{"value":"7.2.3 日期的计算与比较","url":"#723-日期的计算与比较","depth":4},{"value":"7.3 因子处理","url":"#73-因子处理","depth":3},{"value":"7.3.1 因子的基本概念","url":"#731-因子的基本概念","depth":4},{"value":"7.3.2 因子的创建与操作","url":"#732-因子的创建与操作","depth":4},{"value":"7.3.3 因子的重编码","url":"#733-因子的重编码","depth":4},{"value":"7.4 高效数据处理","url":"#74-高效数据处理","depth":3},{"value":"7.4.1 使用 data.table 包","url":"#741-使用-datatable-包","depth":4},{"value":"7.4.2 使用 dplyr 包","url":"#742-使用-dplyr-包","depth":4},{"value":"7.4.3 数据管道操作","url":"#743-数据管道操作","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 7 章 复杂数据处理","datePublished":"2024-06-28T03:52:54.000Z","dateModified":"2024-06-28T03:59:11.000Z","description":"keywords: 字符串处理, 日期时间处理, 因子处理, 高效数据处理在数据分析过程中,我们经常会遇到一些复杂的数据类型,如字符串、日期时间、因子等。为了更好地分析和处理这些数据,本章将详细介绍如何在 R 语言中进行复杂数据处理。7.1 字符串处理字符串是由一系列字符组成的序列。在数据分析...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/lgc4k6alfoid5cfc"}},{"title":"第 9 章 机器学习","date":"2024-06-28T03:51:30.000Z","urlname":"pgefb0xgnxa6wrv5","is_nav":false,"updated":"2024-06-28T03:52:14.000Z","not_show":false,"description":"keywords: 机器学习,监督学习,无监督学习,模型评估,实践案例机器学习是一门让计算机具备从数据中自主学习的能力,无需进行明确编程的科学。它是人工智能的核心,也是 R 语言数据分析不可或缺的一部分。本章将全面介绍如何使用 R 语言实现机器学习,包括监督学习、无监督学习、模型评估与选择,以...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/a984b0246682d6e8671f6f85c7d900d8.svg","tags":[],"keywords":"机器学习,监督学习,无监督学习,模型评估,实践案例","authors":["whitedew"],"type":"Post","readingTime":{"words":3323,"minutes":11,"text":"11 分钟"},"slug":"doc/💻 编程语言/R语言/pgefb0xgnxa6wrv5","path":"docs/doc/💻 编程语言/R语言/pgefb0xgnxa6wrv5","filePath":"docs/doc/💻 编程语言/R语言/pgefb0xgnxa6wrv5.md","toc":[{"value":"9.1 监督学习","url":"#91-监督学习","depth":2},{"value":"9.1.1 线性回归","url":"#911-线性回归","depth":3},{"value":"9.2 无监督学习","url":"#92-无监督学习","depth":2},{"value":"9.2.1 聚类分析","url":"#921-聚类分析","depth":3},{"value":"K-means 聚类","url":"#k-means-聚类","depth":4},{"value":"9.3.1 评估指标","url":"#931-评估指标","depth":3},{"value":"9.3.2 交叉验证","url":"#932-交叉验证","depth":3},{"value":"9.4 实践案例:分类与回归","url":"#94-实践案例分类与回归","depth":2},{"value":"9.4.1 数据准备","url":"#941-数据准备","depth":3},{"value":"9.4.2 模型训练","url":"#942-模型训练","depth":3},{"value":"9.4.3 模型评估","url":"#943-模型评估","depth":3},{"value":"9.4.4 应用与部署","url":"#944-应用与部署","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 9 章 机器学习","datePublished":"2024-06-28T03:51:30.000Z","dateModified":"2024-06-28T03:52:14.000Z","description":"keywords: 机器学习,监督学习,无监督学习,模型评估,实践案例机器学习是一门让计算机具备从数据中自主学习的能力,无需进行明确编程的科学。它是人工智能的核心,也是 R 语言数据分析不可或缺的一部分。本章将全面介绍如何使用 R 语言实现机器学习,包括监督学习、无监督学习、模型评估与选择,以...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/pgefb0xgnxa6wrv5"}},{"title":"第 8 章 R语言编程技巧","date":"2024-06-28T03:51:09.000Z","urlname":"buq5kc4vhyclglqc","is_nav":false,"updated":"2024-06-28T03:59:04.000Z","not_show":false,"description":"keywords: R 语言编程, 函数编程, 面向对象编程, 数据表操作, R 包开发在前面的章节中,我们已经学习了 R 语言的基础知识和数据处理技巧. 本章将深入探讨 R 语言的高级编程技巧,包括函数编程、面向对象编程、数据表操作以及 R 包的开发与发布. 通过本章的学习,你将掌握 R 语...","tags":[],"keywords":"R 语言编程, 函数编程, 面向对象编程, 数据表操作, R 包开发","authors":["whitedew"],"type":"Post","readingTime":{"words":2284,"minutes":8,"text":"8 分钟"},"slug":"doc/💻 编程语言/R语言/buq5kc4vhyclglqc","path":"docs/doc/💻 编程语言/R语言/buq5kc4vhyclglqc","filePath":"docs/doc/💻 编程语言/R语言/buq5kc4vhyclglqc.md","toc":[{"value":"8.1 函数编程","url":"#81-函数编程","depth":3},{"value":"8.1.1 函数的定义与调用","url":"#811-函数的定义与调用","depth":4},{"value":"8.1.2 函数参数与返回值","url":"#812-函数参数与返回值","depth":4},{"value":"8.1.3 函数的嵌套与递归","url":"#813-函数的嵌套与递归","depth":4},{"value":"8.2 面向对象编程","url":"#82-面向对象编程","depth":3},{"value":"8.2.1 面向对象编程的基本概念","url":"#821-面向对象编程的基本概念","depth":4},{"value":"8.2.2 S3 和 S4 对象","url":"#822-s3-和-s4-对象","depth":4},{"value":"8.2.3 引用类","url":"#823-引用类","depth":4},{"value":"8.3 数据表操作","url":"#83-数据表操作","depth":3},{"value":"8.3.1 数据表的创建","url":"#831-数据表的创建","depth":4},{"value":"8.3.2 数据表的操作","url":"#832-数据表的操作","depth":4},{"value":"8.3.3 数据表的合并与连接","url":"#833-数据表的合并与连接","depth":4},{"value":"8.4 R 包的开发与发布","url":"#84-r-包的开发与发布","depth":3},{"value":"8.4.1 R 包的结构与创建","url":"#841-r-包的结构与创建","depth":4},{"value":"8.4.2 编写文档与示例","url":"#842-编写文档与示例","depth":4},{"value":"8.4.3 R 包的发布与维护","url":"#843-r-包的发布与维护","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 8 章 R语言编程技巧","datePublished":"2024-06-28T03:51:09.000Z","dateModified":"2024-06-28T03:59:04.000Z","description":"keywords: R 语言编程, 函数编程, 面向对象编程, 数据表操作, R 包开发在前面的章节中,我们已经学习了 R 语言的基础知识和数据处理技巧. 本章将深入探讨 R 语言的高级编程技巧,包括函数编程、面向对象编程、数据表操作以及 R 包的开发与发布. 通过本章的学习,你将掌握 R 语...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/buq5kc4vhyclglqc"}},{"title":"第 10 章 文本挖掘","date":"2024-06-28T03:49:42.000Z","urlname":"zhdf45poz36gp34r","is_nav":false,"updated":"2024-06-28T03:50:50.000Z","not_show":false,"description":"keywords: 文本挖掘,文本分析,情感分析,R 语言,自然语言处理随着互联网的飞速发展,人们每天都会产生大量的文本数据,如新闻报道、博客文章、社交媒体评论等。这些非结构化的文本数据蕴含着丰富的信息,通过文本挖掘技术,我们可以从海量文本数据中发现有价值的知识和见解。本章将介绍如何使用 R ...","tags":[],"keywords":"文本挖掘,文本分析,情感分析,R 语言,自然语言处理","authors":["whitedew"],"type":"Post","readingTime":{"words":2976,"minutes":10,"text":"10 分钟"},"slug":"doc/💻 编程语言/R语言/zhdf45poz36gp34r","path":"docs/doc/💻 编程语言/R语言/zhdf45poz36gp34r","filePath":"docs/doc/💻 编程语言/R语言/zhdf45poz36gp34r.md","toc":[{"value":"10.1 文本数据的获取与处理","url":"#101-文本数据的获取与处理","depth":2},{"value":"10.1.1 获取文本数据","url":"#1011-获取文本数据","depth":3},{"value":"10.1.2 文本预处理","url":"#1012-文本预处理","depth":3},{"value":"10.1.3 词云图生成","url":"#1013-词云图生成","depth":3},{"value":"10.2 文本分析与可视化","url":"#102-文本分析与可视化","depth":2},{"value":"10.2.1 词频分析","url":"#1021-词频分析","depth":3},{"value":"10.2.2 共现分析","url":"#1022-共现分析","depth":3},{"value":"10.2.3 文本聚类","url":"#1023-文本聚类","depth":3},{"value":"10.3 文本分类与情感分析","url":"#103-文本分类与情感分析","depth":2},{"value":"10.3.1 文本分类","url":"#1031-文本分类","depth":3},{"value":"10.3.2 情感分析","url":"#1032-情感分析","depth":3},{"value":"10.4 实践案例:豆瓣电影评论情感分析","url":"#104-实践案例豆瓣电影评论情感分析","depth":2},{"value":"10.4.1 抓取豆瓣影评数据","url":"#1041-抓取豆瓣影评数据","depth":3},{"value":"10.4.2 文本预处理","url":"#1042-文本预处理","depth":3},{"value":"10.4.3 提取关键词,并绘制词云图","url":"#1043-提取关键词并绘制词云图","depth":3},{"value":"10.4.4 情感倾向分析","url":"#1044-情感倾向分析","depth":3},{"value":"本章小结","url":"#本章小结-5","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 10 章 文本挖掘","datePublished":"2024-06-28T03:49:42.000Z","dateModified":"2024-06-28T03:50:50.000Z","description":"keywords: 文本挖掘,文本分析,情感分析,R 语言,自然语言处理随着互联网的飞速发展,人们每天都会产生大量的文本数据,如新闻报道、博客文章、社交媒体评论等。这些非结构化的文本数据蕴含着丰富的信息,通过文本挖掘技术,我们可以从海量文本数据中发现有价值的知识和见解。本章将介绍如何使用 R ...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/zhdf45poz36gp34r"}},{"title":"第 11 章 时间序列分析","date":"2024-06-28T03:48:57.000Z","urlname":"gbfzefgtudph8bby","is_nav":false,"updated":"2024-06-28T03:59:17.000Z","not_show":false,"description":"keywords: 时间序列分析, 时间序列基本概念, 时间序列建模, 时间序列预测, 销售预测案例时间序列分析是数据分析领域中一个非常重要且广泛应用的分支。它主要用于分析和预测在时间上有序排列的数据。在金融、经济、气象等诸多领域都有时间序列数据的身影。本章将系统地介绍时间序列分析的基本概念、...","cover":"https://cdn.nlark.com/yuque/__latex/18509f65c42c76e1b28b9b4ec7b94fbf.svg","tags":[],"keywords":"时间序列分析, 时间序列基本概念, 时间序列建模, 时间序列预测, 销售预测案例","authors":["whitedew"],"type":"Post","readingTime":{"words":2273,"minutes":8,"text":"8 分钟"},"slug":"doc/💻 编程语言/R语言/gbfzefgtudph8bby","path":"docs/doc/💻 编程语言/R语言/gbfzefgtudph8bby","filePath":"docs/doc/💻 编程语言/R语言/gbfzefgtudph8bby.md","toc":[{"value":"11.1 时间序列的基本概念","url":"#111-时间序列的基本概念","depth":2},{"value":"11.1.1 时间序列的定义","url":"#1111-时间序列的定义","depth":3},{"value":"11.2 时间序列的建模","url":"#112-时间序列的建模","depth":2},{"value":"11.2.1 自回归模型（AR）","url":"#1121-自回归模型ar","depth":3},{"value":"11.2.2 移动平均模型（MA）","url":"#1122-移动平均模型ma","depth":3},{"value":"11.2.3 差分自回归移动平均模型（ARIMA）","url":"#1123-差分自回归移动平均模型arima","depth":3},{"value":"11.3 时间序列的预测","url":"#113-时间序列的预测","depth":2},{"value":"11.3.1 样本内预测","url":"#1131-样本内预测","depth":3},{"value":"11.3.2 样本外预测","url":"#1132-样本外预测","depth":3},{"value":"11.3.3 预测效果评估","url":"#1133-预测效果评估","depth":3},{"value":"11.4 实践案例：销售预测","url":"#114-实践案例销售预测","depth":2},{"value":"11.4.1 数据准备","url":"#1141-数据准备","depth":3},{"value":"11.4.2 模型训练","url":"#1142-模型训练","depth":3},{"value":"11.4.3 模型评估","url":"#1143-模型评估","depth":3},{"value":"11.4.4 应用与部署","url":"#1144-应用与部署","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 11 章 时间序列分析","datePublished":"2024-06-28T03:48:57.000Z","dateModified":"2024-06-28T03:59:17.000Z","description":"keywords: 时间序列分析, 时间序列基本概念, 时间序列建模, 时间序列预测, 销售预测案例时间序列分析是数据分析领域中一个非常重要且广泛应用的分支。它主要用于分析和预测在时间上有序排列的数据。在金融、经济、气象等诸多领域都有时间序列数据的身影。本章将系统地介绍时间序列分析的基本概念、...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/gbfzefgtudph8bby"}},{"title":"第 12 章 R语言 与大数据技术","date":"2024-06-28T03:48:27.000Z","urlname":"blqp8e1g3pw560mf","is_nav":false,"updated":"2024-07-03T11:54:04.000Z","not_show":false,"description":"keywords: R 语言大数据,Hadoop,Spark,高效数据处理,大数据分析大数据技术的出现为数据分析带来了新的契机。R 语言作为一种强大的数据分析工具，与大数据技术的结合可以实现高效的大数据处理和分析。本章将介绍如何将 R 语言与主流的大数据技术 Hadoop 和 Spark 进行...","tags":[],"keywords":"R 语言大数据,Hadoop,Spark,高效数据处理,大数据分析","authors":["whitedew"],"type":"Post","readingTime":{"words":1754,"minutes":6,"text":"6 分钟"},"slug":"doc/💻 编程语言/R语言/blqp8e1g3pw560mf","path":"docs/doc/💻 编程语言/R语言/blqp8e1g3pw560mf","filePath":"docs/doc/💻 编程语言/R语言/blqp8e1g3pw560mf.md","toc":[{"value":"12.1 R 与 Hadoop 的集成","url":"#121-r-与-hadoop-的集成","depth":2},{"value":"12.1.1 Hadoop 简介","url":"#1211-hadoop-简介","depth":3},{"value":"12.1.2 R 与 Hadoop 的连接","url":"#1212-r-与-hadoop-的连接","depth":3},{"value":"12.2 R 与 Spark 的集成","url":"#122-r-与-spark-的集成","depth":2},{"value":"12.2.1 Spark 简介","url":"#1221-spark-简介","depth":3},{"value":"12.2.2 R 与 Spark 的连接","url":"#1222-r-与-spark-的连接","depth":3},{"value":"12.3 高效数据处理","url":"#123-高效数据处理","depth":2},{"value":"12.3.1 数据分区与并行计算","url":"#1231-数据分区与并行计算","depth":3},{"value":"12.3.2 数据流处理","url":"#1232-数据流处理","depth":3},{"value":"12.4 实践案例：大数据分析","url":"#124-实践案例大数据分析","depth":2},{"value":"12.4.1 数据准备","url":"#1241-数据准备","depth":3},{"value":"12.4.2 数据分析","url":"#1242-数据分析","depth":3},{"value":"12.4.3 结果展示","url":"#1243-结果展示","depth":3},{"value":"12.4.4 应用与部署","url":"#1244-应用与部署","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 12 章 R语言 与大数据技术","datePublished":"2024-06-28T03:48:27.000Z","dateModified":"2024-07-03T11:54:04.000Z","description":"keywords: R 语言大数据,Hadoop,Spark,高效数据处理,大数据分析大数据技术的出现为数据分析带来了新的契机。R 语言作为一种强大的数据分析工具，与大数据技术的结合可以实现高效的大数据处理和分析。本章将介绍如何将 R 语言与主流的大数据技术 Hadoop 和 Spark 进行...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/blqp8e1g3pw560mf"}},{"title":"第 13 章 R语言实战项目一: 数据分析与可视化","date":"2024-06-28T03:47:58.000Z","urlname":"bpemebnfunhxkbg9","is_nav":false,"updated":"2024-06-28T03:59:36.000Z","not_show":false,"description":"keywords: R语言数据分析, 数据可视化, 统计分析, 项目实战本章我们将通过一个完整的项目案例,带领大家学习如何使用R语言进行数据分析和可视化。通过实战操作,你将掌握数据分析的基本流程,并能使用R强大的可视化功能,生动形象地展示分析结果。13.1 项目需求分析在开始一个数据分析项目之...","tags":[],"keywords":"R语言数据分析, 数据可视化, 统计分析, 项目实战","authors":["whitedew"],"type":"Post","readingTime":{"words":1771,"minutes":6,"text":"6 分钟"},"slug":"doc/💻 编程语言/R语言/bpemebnfunhxkbg9","path":"docs/doc/💻 编程语言/R语言/bpemebnfunhxkbg9","filePath":"docs/doc/💻 编程语言/R语言/bpemebnfunhxkbg9.md","toc":[{"value":"13.1 项目需求分析","url":"#131-项目需求分析-1","depth":2},{"value":"13.1.1 数据分析的背景","url":"#1311-数据分析的背景-1","depth":3},{"value":"13.1.2 项目目标","url":"#1312-项目目标","depth":3},{"value":"13.2 数据的获取和预处理","url":"#132-数据的获取和预处理-1","depth":2},{"value":"13.2.1 数据的导入","url":"#1321-数据的导入-1","depth":3},{"value":"13.2.2 数据的清洗与转换","url":"#1322-数据的清洗与转换-1","depth":3},{"value":"13.3 数据的分析和统计","url":"#133-数据的分析和统计-1","depth":2},{"value":"13.3.1 描述性统计分析","url":"#1331-描述性统计分析-1","depth":3},{"value":"13.3.2 相关性分析","url":"#1332-相关性分析","depth":3},{"value":"13.3.3 假设检验","url":"#1333-假设检验","depth":3},{"value":"13.4 数据的可视化展示","url":"#134-数据的可视化展示-1","depth":2},{"value":"13.4.1 绘制基本图形","url":"#1341-绘制基本图形-1","depth":3},{"value":"13.4.2 多维数据的可视化","url":"#1342-多维数据的可视化-1","depth":3},{"value":"13.4.3 动态可视化展示","url":"#1343-动态可视化展示-1","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 13 章 R语言实战项目一: 数据分析与可视化","datePublished":"2024-06-28T03:47:58.000Z","dateModified":"2024-06-28T03:59:36.000Z","description":"keywords: R语言数据分析, 数据可视化, 统计分析, 项目实战本章我们将通过一个完整的项目案例,带领大家学习如何使用R语言进行数据分析和可视化。通过实战操作,你将掌握数据分析的基本流程,并能使用R强大的可视化功能,生动形象地展示分析结果。13.1 项目需求分析在开始一个数据分析项目之...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/bpemebnfunhxkbg9"}},{"title":"第 14 章 R语言实战项目二:市场篮分析","date":"2024-06-28T03:46:42.000Z","urlname":"izzb2uhqshwmkctl","is_nav":false,"updated":"2024-06-28T03:59:41.000Z","not_show":false,"description":"keywords: 市场篮分析, 关联规则, apriori 算法, 数据挖掘, 销售策略在超市等零售行业,通过对顾客购物篮中商品组合的分析,可以发现商品之间有趣的关联关系,从而优化商品布局和制定销售策略。本章我们将运用 R 语言来实现市场篮分析,带你一步步掌握数据挖掘在业务中的应用。14.1...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/bae5fc0c9951f67789c6b8ce59b923af.svg","tags":[],"keywords":"市场篮分析, 关联规则, apriori 算法, 数据挖掘, 销售策略","authors":["whitedew"],"type":"Post","readingTime":{"words":2243,"minutes":7,"text":"7 分钟"},"slug":"doc/💻 编程语言/R语言/izzb2uhqshwmkctl","path":"docs/doc/💻 编程语言/R语言/izzb2uhqshwmkctl","filePath":"docs/doc/💻 编程语言/R语言/izzb2uhqshwmkctl.md","toc":[{"value":"14.1 项目需求分析","url":"#141-项目需求分析-1","depth":3},{"value":"14.1.1 市场篮分析的背景","url":"#1411-市场篮分析的背景","depth":4},{"value":"14.1.2 项目的目标","url":"#1412-项目的目标-1","depth":4},{"value":"14.2.1 导入交易数据","url":"#1421-导入交易数据","depth":4},{"value":"14.2.2 数据清洗和整理","url":"#1422-数据清洗和整理","depth":4},{"value":"14.2.3 将数据转换为交易列表","url":"#1423-将数据转换为交易列表","depth":4},{"value":"14.3 关联规则挖掘","url":"#143-关联规则挖掘","depth":3},{"value":"14.3.1 关联规则分析概念","url":"#1431-关联规则分析概念","depth":4},{"value":"14.3.2 使用 apriori 算法","url":"#1432-使用-apriori-算法","depth":4},{"value":"14.3.3 生成关联规则","url":"#1433-生成关联规则","depth":4},{"value":"14.3.4 规则的评估和筛选","url":"#1434-规则的评估和筛选","depth":4},{"value":"14.4 结果的可视化与应用","url":"#144-结果的可视化与应用","depth":3},{"value":"14.4.1 关联规则的可视化","url":"#1441-关联规则的可视化","depth":4},{"value":"14.4.2 规则的解释和应用","url":"#1442-规则的解释和应用","depth":4},{"value":"14.4.3 销售策略与商品布局优化","url":"#1443-销售策略与商品布局优化","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 14 章 R语言实战项目二:市场篮分析","datePublished":"2024-06-28T03:46:42.000Z","dateModified":"2024-06-28T03:59:41.000Z","description":"keywords: 市场篮分析, 关联规则, apriori 算法, 数据挖掘, 销售策略在超市等零售行业,通过对顾客购物篮中商品组合的分析,可以发现商品之间有趣的关联关系,从而优化商品布局和制定销售策略。本章我们将运用 R 语言来实现市场篮分析,带你一步步掌握数据挖掘在业务中的应用。14.1...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/izzb2uhqshwmkctl"}},{"title":"第 15 章 R语言实战项目三:客户细分","date":"2024-06-28T03:46:11.000Z","urlname":"io90ggnpu8sezfhz","is_nav":false,"updated":"2024-06-28T03:59:46.000Z","not_show":false,"description":"keywords: 客户细分,聚类分析,K-Means,层次聚类,个性化营销在当今竞争日益激烈的商业环境中,对客户进行细分是企业制定营销策略的重要基础。通过客户细分,企业可以更好地了解不同客户群体的特点和需求,从而制定针对性的营销方案,提高客户满意度和忠诚度。本章将通过一个完整的案例,带领大家...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/3f8dc0bcd89c89392c7e9a41516cae6e.svg","tags":[],"keywords":"客户细分,聚类分析,K-Means,层次聚类,个性化营销","authors":["whitedew"],"type":"Post","readingTime":{"words":2072,"minutes":7,"text":"7 分钟"},"slug":"doc/💻 编程语言/R语言/io90ggnpu8sezfhz","path":"docs/doc/💻 编程语言/R语言/io90ggnpu8sezfhz","filePath":"docs/doc/💻 编程语言/R语言/io90ggnpu8sezfhz.md","toc":[{"value":"15.1 项目需求分析","url":"#151-项目需求分析-1","depth":2},{"value":"15.1.1 客户细分的背景","url":"#1511-客户细分的背景","depth":3},{"value":"15.1.2 项目的目标","url":"#1512-项目的目标-1","depth":3},{"value":"15.2 数据的准备","url":"#152-数据的准备","depth":2},{"value":"15.2.1 导入客户数据","url":"#1521-导入客户数据","depth":3},{"value":"15.2.2 数据探索与清洗","url":"#1522-数据探索与清洗","depth":3},{"value":"15.2.3 特征工程","url":"#1523-特征工程-1","depth":3},{"value":"15.3 聚类分析","url":"#153-聚类分析","depth":2},{"value":"15.3.1 聚类分析概念","url":"#1531-聚类分析概念","depth":3},{"value":"15.3.2 使用 K-Means 聚类","url":"#1532-使用-k-means-聚类","depth":3},{"value":"15.3.3 层次聚类分析","url":"#1533-层次聚类分析","depth":3},{"value":"15.3.4 聚类结果评估","url":"#1534-聚类结果评估","depth":3},{"value":"15.4 细分结果的应用","url":"#154-细分结果的应用","depth":2},{"value":"15.4.1 可视化客户群体","url":"#1541-可视化客户群体","depth":3},{"value":"15.4.2 细分客户特征分析","url":"#1542-细分客户特征分析","depth":3},{"value":"15.4.3 个性化营销策略","url":"#1543-个性化营销策略","depth":3},{"value":"课后练习","url":"#课后练习","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 15 章 R语言实战项目三:客户细分","datePublished":"2024-06-28T03:46:11.000Z","dateModified":"2024-06-28T03:59:46.000Z","description":"keywords: 客户细分,聚类分析,K-Means,层次聚类,个性化营销在当今竞争日益激烈的商业环境中,对客户进行细分是企业制定营销策略的重要基础。通过客户细分,企业可以更好地了解不同客户群体的特点和需求,从而制定针对性的营销方案,提高客户满意度和忠诚度。本章将通过一个完整的案例,带领大家...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/io90ggnpu8sezfhz"}},{"title":"第 16 章 R语言实战项目四：预测房价走势","date":"2024-06-28T03:45:14.000Z","urlname":"igbobf3pxzigso5p","is_nav":false,"updated":"2024-07-05T04:02:19.000Z","not_show":false,"description":"keywords: 房价预测, 时间序列, ARIMA 模型, 特征工程, 可视化在本章中,我们将通过一个实战项目,运用前面学到的 R 语言知识,来预测未来的房价走势。房地产市场是国民经济的重要组成部分,房价的走势不仅影响着普通百姓的生活,也关系到宏观经济的稳定。因此,准确预测房价走势,对于个...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/b212b77d9f7f375621c4547227fdf388.svg","tags":[],"keywords":"房价预测, 时间序列, ARIMA 模型, 特征工程, 可视化","authors":["whitedew"],"type":"Post","readingTime":{"words":2243,"minutes":7,"text":"7 分钟"},"slug":"doc/💻 编程语言/R语言/igbobf3pxzigso5p","path":"docs/doc/💻 编程语言/R语言/igbobf3pxzigso5p","filePath":"docs/doc/💻 编程语言/R语言/igbobf3pxzigso5p.md","toc":[{"value":"16.1 项目概述","url":"#161-项目概述","depth":2},{"value":"16.1.1 背景介绍","url":"#1611-背景介绍","depth":3},{"value":"16.1.2 项目目标","url":"#1612-项目目标","depth":3},{"value":"16.1.3 数据集介绍","url":"#1613-数据集介绍","depth":3},{"value":"16.2 数据读取与预处理","url":"#162-数据读取与预处理","depth":2},{"value":"16.2.1 数据导入","url":"#1621-数据导入","depth":3},{"value":"16.2.2 数据清洗","url":"#1622-数据清洗","depth":3},{"value":"16.2.3 数据重构","url":"#1623-数据重构","depth":3},{"value":"16.3 特征工程","url":"#163-特征工程","depth":2},{"value":"16.3.1 特征提取","url":"#1631-特征提取","depth":3},{"value":"16.3.2 特征筛选","url":"#1632-特征筛选","depth":3},{"value":"16.4 时间序列建模","url":"#164-时间序列建模","depth":2},{"value":"16.4.1 平稳性检验","url":"#1641-平稳性检验","depth":3},{"value":"16.4.2 ARIMA 模型","url":"#1642-arima-模型","depth":3},{"value":"16.4.3 模型预测","url":"#1643-模型预测","depth":3},{"value":"16.5 模型评估与调优","url":"#165-模型评估与调优","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 16 章 R语言实战项目四：预测房价走势","datePublished":"2024-06-28T03:45:14.000Z","dateModified":"2024-07-05T04:02:19.000Z","description":"keywords: 房价预测, 时间序列, ARIMA 模型, 特征工程, 可视化在本章中,我们将通过一个实战项目,运用前面学到的 R 语言知识,来预测未来的房价走势。房地产市场是国民经济的重要组成部分,房价的走势不仅影响着普通百姓的生活,也关系到宏观经济的稳定。因此,准确预测房价走势,对于个...","url":"https://offernow.cn/docs/doc/💻 编程语言/R语言/igbobf3pxzigso5p"}},{"title":"R语言","date":"2024-06-28T03:44:43.000Z","urlname":"isich0bo4556w91c","is_nav":false,"nav_path":"r","updated":"2024-06-28T03:45:12.000Z","not_show":false,"description":"---is_nav: falsenav_path: r---","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":0,"minutes":0,"text":"小于一分钟"},"slug":"doc/💻 编程语言/isich0bo4556w91c","path":"docs/doc/💻 编程语言/isich0bo4556w91c","filePath":"docs/doc/💻 编程语言/isich0bo4556w91c.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"R语言","datePublished":"2024-06-28T03:44:43.000Z","dateModified":"2024-06-28T03:45:12.000Z","description":"---is_nav: falsenav_path: r---","url":"https://offernow.cn/docs/doc/💻 编程语言/isich0bo4556w91c"}},{"title":"Coze怎么搭建一个产品机器人？","date":"2024-06-27T13:31:49.000Z","urlname":"esc4emi9zi3qc9qq","is_nav":false,"updated":"2024-06-27T13:32:09.000Z","not_show":false,"description":"Coze简介Coze（扣子）是由字节跳动推出的一站式 AI开发平台。无论你是编程新手还是资深开发者，都能在Coze平台上轻松搭建个性化的 AI Bot，处理从简单问答到复杂对话的各类场景。更妙的是，你可以将你的Bot发布到各类社交平台和通讯软件上，使你的Bot与更广大的用户群体进行互动。Coz...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1707663880238-b62be63d-e6d5-4d4b-8a4c-88324546d663.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3057,"minutes":10,"text":"10 分钟"},"slug":"doc/🔥 程序员自我修养/🤖人工智能/esc4emi9zi3qc9qq","path":"docs/doc/🔥 程序员自我修养/🤖人工智能/esc4emi9zi3qc9qq","filePath":"docs/doc/🔥 程序员自我修养/🤖人工智能/esc4emi9zi3qc9qq.md","toc":[{"value":"Coze简介","url":"#coze简介","depth":1},{"value":"Coze模块","url":"#coze模块","depth":1},{"value":"1、插件","url":"#1插件","depth":2},{"value":"必应搜索","url":"#必应搜索","depth":3},{"value":"ByteArtist","url":"#byteartist","depth":3},{"value":"图片理解","url":"#图片理解","depth":3},{"value":"代码执行器","url":"#代码执行器","depth":3},{"value":"2、知识库","url":"#2知识库","depth":2},{"value":"3、工作流","url":"#3工作流","depth":2},{"value":"实战演练——产品问答机器人","url":"#实战演练产品问答机器人","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Coze怎么搭建一个产品机器人？","datePublished":"2024-06-27T13:31:49.000Z","dateModified":"2024-06-27T13:32:09.000Z","description":"Coze简介Coze（扣子）是由字节跳动推出的一站式 AI开发平台。无论你是编程新手还是资深开发者，都能在Coze平台上轻松搭建个性化的 AI Bot，处理从简单问答到复杂对话的各类场景。更妙的是，你可以将你的Bot发布到各类社交平台和通讯软件上，使你的Bot与更广大的用户群体进行互动。Coz...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/🤖人工智能/esc4emi9zi3qc9qq"}},{"title":"公众号如何实现用户抽奖功能？","date":"2024-06-27T13:23:49.000Z","urlname":"girytbel2gdup8q4","is_nav":false,"updated":"2024-06-27T13:24:05.000Z","not_show":false,"description":"实现背景朋友搞一个了公众号，找我帮忙开发一个功能。他最近为了提高公众号的用户粘性，需要增加一个功能，那就是用户可以点击公众【每日礼包】的按钮，实现抽奖，获得各种奖励等等。实现起来其实挺简单的，时序图如下：实现由于之前已经配置好了后台服务器的事件监听，其实这次主要做的工作就是实现抽奖功能。简单分...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1709885517843-80a6a2ca-81ee-40b7-acab-6a92559b9a79.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":984,"minutes":3,"text":"3 分钟"},"slug":"doc/🔥 程序员自我修养/个人建站 🤖/girytbel2gdup8q4","path":"docs/doc/🔥 程序员自我修养/个人建站 🤖/girytbel2gdup8q4","filePath":"docs/doc/🔥 程序员自我修养/个人建站 🤖/girytbel2gdup8q4.md","toc":[{"value":"实现背景","url":"#实现背景","depth":1},{"value":"效果图","url":"#效果图","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"公众号如何实现用户抽奖功能？","datePublished":"2024-06-27T13:23:49.000Z","dateModified":"2024-06-27T13:24:05.000Z","description":"实现背景朋友搞一个了公众号，找我帮忙开发一个功能。他最近为了提高公众号的用户粘性，需要增加一个功能，那就是用户可以点击公众【每日礼包】的按钮，实现抽奖，获得各种奖励等等。实现起来其实挺简单的，时序图如下：实现由于之前已经配置好了后台服务器的事件监听，其实这次主要做的工作就是实现抽奖功能。简单分...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/个人建站 🤖/girytbel2gdup8q4"}},{"title":"怎么在Redis中实现一个高效的排行榜列表？","date":"2024-06-27T13:23:02.000Z","urlname":"mckaizb5xg98db8b","is_nav":false,"updated":"2024-06-27T13:23:34.000Z","not_show":false,"description":"为了在Redis中实现一个高效的排行榜列表缓存方案，可以使用有序集合（sorted set，即上文提到的zset）来存储产品的排行，同时使用散列（hash）来存储每个产品的相关信息。可以快速获取排名前20的产品ID，同样地，也可以迅速获取这些产品的详细信息。1. 使用有序集合(zset)存储产...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":613,"minutes":2,"text":"2 分钟"},"slug":"doc/📚 计算机基础/Redis/mckaizb5xg98db8b","path":"docs/doc/📚 计算机基础/Redis/mckaizb5xg98db8b","filePath":"docs/doc/📚 计算机基础/Redis/mckaizb5xg98db8b.md","toc":[{"value":"1. 使用有序集合(zset)存储产品排名","url":"#1-使用有序集合zset存储产品排名","depth":3},{"value":"2. 使用散列(hash)存储产品的详细信息","url":"#2-使用散列hash存储产品的详细信息","depth":3},{"value":"3. 获取排名前20的产品信息","url":"#3-获取排名前20的产品信息","depth":3},{"value":"4. 获取产品的详细信息","url":"#4-获取产品的详细信息","depth":3},{"value":"5. 缓存设计考虑","url":"#5-缓存设计考虑","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"怎么在Redis中实现一个高效的排行榜列表？","datePublished":"2024-06-27T13:23:02.000Z","dateModified":"2024-06-27T13:23:34.000Z","description":"为了在Redis中实现一个高效的排行榜列表缓存方案，可以使用有序集合（sorted set，即上文提到的zset）来存储产品的排行，同时使用散列（hash）来存储每个产品的相关信息。可以快速获取排名前20的产品ID，同样地，也可以迅速获取这些产品的详细信息。1. 使用有序集合(zset)存储产...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Redis/mckaizb5xg98db8b"}},{"title":"6.25 重磅消息！2025届校招提前批火热进行中！","date":"2024-06-27T13:21:55.000Z","urlname":"pnqbru7fl4glmybg","is_nav":false,"updated":"2024-06-27T13:22:11.000Z","not_show":false,"description":"大家好，我是白露呀！一个在互联网、IT行业摸爬滚打了十年的观察员！暑期实习还没结束，上一届的春招还有少部分公司仍然在招聘，而新一届的提前批就这样悄无声息的开始了！招聘这节奏，怎么比衣服换季还快！从5月起，很多企业都开始了提前批招聘工作！对于我们求职者来说，提前批也是一个绝佳的机会，能够让你提前...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22389147/1719323876299-1fe058b6-0e61-4f67-9462-5c9c8aea5f40.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1522,"minutes":5,"text":"5 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/pnqbru7fl4glmybg","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/pnqbru7fl4glmybg","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/pnqbru7fl4glmybg.md","toc":[{"value":"开始面试","url":"#开始面试-13","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.25 重磅消息！2025届校招提前批火热进行中！","datePublished":"2024-06-27T13:21:55.000Z","dateModified":"2024-06-27T13:22:11.000Z","description":"大家好，我是白露呀！一个在互联网、IT行业摸爬滚打了十年的观察员！暑期实习还没结束，上一届的春招还有少部分公司仍然在招聘，而新一届的提前批就这样悄无声息的开始了！招聘这节奏，怎么比衣服换季还快！从5月起，很多企业都开始了提前批招聘工作！对于我们求职者来说，提前批也是一个绝佳的机会，能够让你提前...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/pnqbru7fl4glmybg"}},{"title":"6.26 来腾讯三周，已经对大厂祛魅了","date":"2024-06-27T13:21:30.000Z","urlname":"hbgc4el12cgbb4d7","is_nav":false,"updated":"2024-06-27T13:21:50.000Z","not_show":false,"description":"大家好，我是白露。 一个网友跟我分享说，来腾讯三周，已经对大厂祛魅了。三周时间做的事情说多不多说少不少，由于mentor的职级已经是t10了，目前更多的是运维部署工作。这位同学就跟着师兄完成了一些部署任务，修改了6个小缺陷，还做了一个小需求（数据迁移，主要是新建一个表和编写一些基础的增删改查操...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1719412540958-035dc1b8-cfea-4b9d-9096-d2673039ab16.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1835,"minutes":6,"text":"6 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/hbgc4el12cgbb4d7","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/hbgc4el12cgbb4d7","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/hbgc4el12cgbb4d7.md","toc":[{"value":"场景题目-Map","url":"#场景题目-map","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.26 来腾讯三周，已经对大厂祛魅了","datePublished":"2024-06-27T13:21:30.000Z","dateModified":"2024-06-27T13:21:50.000Z","description":"大家好，我是白露。 一个网友跟我分享说，来腾讯三周，已经对大厂祛魅了。三周时间做的事情说多不多说少不少，由于mentor的职级已经是t10了，目前更多的是运维部署工作。这位同学就跟着师兄完成了一些部署任务，修改了6个小缺陷，还做了一个小需求（数据迁移，主要是新建一个表和编写一些基础的增删改查操...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/hbgc4el12cgbb4d7"}},{"title":"svg图片不显示在网站上","date":"2024-06-26T15:15:42.000Z","urlname":"ybyfy5goc6dp2d87","is_nav":false,"updated":"2024-06-26T15:19:18.000Z","not_show":false,"description":"为什么使用外部 URL 的 SVG 不显示？我在建设本站的时候发现一个问题，那就是png、jpg等图片都可以正常的渲染。但是只要是svg图片就无法展示。可能的原因1. 跨域问题如果 SVG 资源和当前页面不在同一个域名下,浏览器的同源策略可能会阻止加载。需要在服务端设置允许跨域访问的响应头。 ...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":353,"minutes":1,"text":"1 分钟"},"slug":"doc/🔥 程序员自我修养/个人建站 🤖/ybyfy5goc6dp2d87","path":"docs/doc/🔥 程序员自我修养/个人建站 🤖/ybyfy5goc6dp2d87","filePath":"docs/doc/🔥 程序员自我修养/个人建站 🤖/ybyfy5goc6dp2d87.md","toc":[{"value":"为什么使用外部 URL 的 SVG 不显示？","url":"#为什么使用外部-url-的-svg-不显示","depth":1},{"value":"可能的原因","url":"#可能的原因","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"svg图片不显示在网站上","datePublished":"2024-06-26T15:15:42.000Z","dateModified":"2024-06-26T15:19:18.000Z","description":"为什么使用外部 URL 的 SVG 不显示？我在建设本站的时候发现一个问题，那就是png、jpg等图片都可以正常的渲染。但是只要是svg图片就无法展示。可能的原因1. 跨域问题如果 SVG 资源和当前页面不在同一个域名下,浏览器的同源策略可能会阻止加载。需要在服务端设置允许跨域访问的响应头。 ...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/个人建站 🤖/ybyfy5goc6dp2d87"}},{"title":"MIME 类型是什么？","date":"2024-06-26T15:10:55.000Z","urlname":"ui42mgng3t1nsxhh","is_nav":false,"updated":"2024-06-26T15:11:47.000Z","not_show":false,"description":"什么是 MIME 类型？MIME 类型（Multipurpose Internet Mail Extensions）是一种标准，用于表示文档的性质和格式。最初设计用于电子邮件，但现在广泛应用于 HTTP 协议、浏览器 和 API 等多种场景中。MIME 类型帮助客户端（如浏览器）了解如何处理和...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":634,"minutes":2,"text":"2 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/ui42mgng3t1nsxhh","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/ui42mgng3t1nsxhh","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/ui42mgng3t1nsxhh.md","toc":[{"value":"什么是 MIME 类型？","url":"#什么是-mime-类型","depth":2},{"value":"MIME 类型的结构","url":"#mime-类型的结构","depth":2},{"value":"MIME 类型的作用","url":"#mime-类型的作用","depth":2},{"value":"1. 文件传输","url":"#1-文件传输","depth":3},{"value":"2. 安全性","url":"#2-安全性","depth":3},{"value":"3. 数据处理","url":"#3-数据处理","depth":3},{"value":"常见的 MIME 类型","url":"#常见的-mime-类型","depth":2},{"value":"文本类型","url":"#文本类型","depth":3},{"value":"图片类型","url":"#图片类型","depth":3},{"value":"应用类型","url":"#应用类型","depth":3},{"value":"音视频类型","url":"#音视频类型","depth":3},{"value":"示例","url":"#示例-9","depth":2},{"value":"HTML 响应","url":"#html-响应","depth":3},{"value":"JSON 响应","url":"#json-响应","depth":3},{"value":"图片响应","url":"#图片响应","depth":3},{"value":"如何设置 MIME 类型","url":"#如何设置-mime-类型","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"MIME 类型是什么？","datePublished":"2024-06-26T15:10:55.000Z","dateModified":"2024-06-26T15:11:47.000Z","description":"什么是 MIME 类型？MIME 类型（Multipurpose Internet Mail Extensions）是一种标准，用于表示文档的性质和格式。最初设计用于电子邮件，但现在广泛应用于 HTTP 协议、浏览器 和 API 等多种场景中。MIME 类型帮助客户端（如浏览器）了解如何处理和...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/ui42mgng3t1nsxhh"}},{"title":"讲清楚PO、DTO、VO、BO与使用场景","date":"2024-06-26T07:13:01.000Z","urlname":"wikik8qxahagkyph","is_nav":false,"updated":"2024-06-26T07:14:04.000Z","not_show":false,"description":"在软件开发中,特别是在分层架构和面向对象设计中,经常会遇到PO、DTO、VO、BO等概念。这些概念虽然都是用来封装数据的,但它们有不同的使用场景和目的。下面我们来详细说明每一个概念:PO (Persistent Object) - 持久化对象 PO是与数据库表结构一一对应的Java类,通常在d...","cover":"https://cdn.nlark.com/yuque/__puml/b5410069921dabd8a3e23f15b6eb4222.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":785,"minutes":3,"text":"3 分钟"},"slug":"doc/🔥 程序员自我修养/十万个为什么💡/wikik8qxahagkyph","path":"docs/doc/🔥 程序员自我修养/十万个为什么💡/wikik8qxahagkyph","filePath":"docs/doc/🔥 程序员自我修养/十万个为什么💡/wikik8qxahagkyph.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"讲清楚PO、DTO、VO、BO与使用场景","datePublished":"2024-06-26T07:13:01.000Z","dateModified":"2024-06-26T07:14:04.000Z","description":"在软件开发中,特别是在分层架构和面向对象设计中,经常会遇到PO、DTO、VO、BO等概念。这些概念虽然都是用来封装数据的,但它们有不同的使用场景和目的。下面我们来详细说明每一个概念:PO (Persistent Object) - 持久化对象 PO是与数据库表结构一一对应的Java类,通常在d...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/十万个为什么💡/wikik8qxahagkyph"}},{"title":"第 1 章 初识 MATLAB","date":"2024-06-25T14:32:32.000Z","urlname":"ts6ahxi2tgy0v6an","is_nav":false,"updated":"2024-06-25T14:33:35.000Z","not_show":false,"description":"keywords: MATLAB, 安装, 界面, 入门, 第一个程序欢迎来到 MATLAB 的世界！作为一名工程师和 MATLAB 编程的爱好者,我非常高兴能与大家分享我的知识和经验。无论你是编程新手还是有经验的开发者,MATLAB 都能为你打开一扇通往高效科学计算和工程设计的大门。在这一章...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/9ba70e23e6911c9b9daad4aabdaa02c8.svg","tags":[],"keywords":"MATLAB, 安装, 界面, 入门, 第一个程序","authors":["whitedew"],"type":"Post","readingTime":{"words":2894,"minutes":10,"text":"10 分钟"},"slug":"doc/💻 编程语言/Matlab/ts6ahxi2tgy0v6an","path":"docs/doc/💻 编程语言/Matlab/ts6ahxi2tgy0v6an","filePath":"docs/doc/💻 编程语言/Matlab/ts6ahxi2tgy0v6an.md","toc":[{"value":"1.1 MATLAB 简介","url":"#11-matlab-简介","depth":2},{"value":"1.1.1 MATLAB 的历史和发展","url":"#111-matlab-的历史和发展","depth":3},{"value":"1.1.3 MATLAB 的主要功能","url":"#113-matlab-的主要功能","depth":3},{"value":"1.2 MATLAB 的安装与环境配置","url":"#12-matlab-的安装与环境配置","depth":2},{"value":"1.2.1 下载与安装 MATLAB","url":"#121-下载与安装-matlab","depth":3},{"value":"1.2.2 MATLAB 的启动和退出","url":"#122-matlab-的启动和退出","depth":3},{"value":"1.2.3 工作环境的配置","url":"#123-工作环境的配置","depth":3},{"value":"1.3 MATLAB 界面介绍","url":"#13-matlab-界面介绍","depth":2},{"value":"1.3.1 MATLAB 桌面组件","url":"#131-matlab-桌面组件","depth":3},{"value":"1.3.2 命令窗口","url":"#132-命令窗口","depth":3},{"value":"1.3.3 工作区","url":"#133-工作区","depth":3},{"value":"1.3.4 文件浏览器","url":"#134-文件浏览器","depth":3},{"value":"1.3.5 编辑器","url":"#135-编辑器","depth":3},{"value":"1.4 第一个 MATLAB 程序","url":"#14-第一个-matlab-程序","depth":2},{"value":"1.4.1 创建脚本文件","url":"#141-创建脚本文件","depth":3},{"value":"1.4.2 编写简单的 MATLAB 代码","url":"#142-编写简单的-matlab-代码","depth":3},{"value":"1.4.3 运行 MATLAB 程序","url":"#143-运行-matlab-程序","depth":3},{"value":"1.4.4 保存和加载工作空间","url":"#144-保存和加载工作空间","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 1 章 初识 MATLAB","datePublished":"2024-06-25T14:32:32.000Z","dateModified":"2024-06-25T14:33:35.000Z","description":"keywords: MATLAB, 安装, 界面, 入门, 第一个程序欢迎来到 MATLAB 的世界！作为一名工程师和 MATLAB 编程的爱好者,我非常高兴能与大家分享我的知识和经验。无论你是编程新手还是有经验的开发者,MATLAB 都能为你打开一扇通往高效科学计算和工程设计的大门。在这一章...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/ts6ahxi2tgy0v6an"}},{"title":"第 2 章 MATLAB 基本操作","date":"2024-06-25T14:32:12.000Z","urlname":"hfx8oy3ki3eck0b6","is_nav":false,"updated":"2024-06-25T14:32:28.000Z","not_show":false,"description":"keywords: MATLAB 命令窗口, 向量和矩阵操作, 基本数学运算, 文件和路径管理MATLAB 作为一款强大的科学计算软件,掌握其基本操作是高效使用 MATLAB 的前提。本章我们将详细探讨 MATLAB 的几个基础方面：命令窗口的使用、向量和矩阵的创建与运算、基本数学运算,以及文...","tags":[],"keywords":"MATLAB 命令窗口, 向量和矩阵操作, 基本数学运算, 文件和路径管理","authors":["whitedew"],"type":"Post","readingTime":{"words":2233,"minutes":7,"text":"7 分钟"},"slug":"doc/💻 编程语言/Matlab/hfx8oy3ki3eck0b6","path":"docs/doc/💻 编程语言/Matlab/hfx8oy3ki3eck0b6","filePath":"docs/doc/💻 编程语言/Matlab/hfx8oy3ki3eck0b6.md","toc":[{"value":"2.1 MATLAB 的命令窗口","url":"#21-matlab-的命令窗口","depth":2},{"value":"2.1.1 基本操作命令","url":"#211-基本操作命令","depth":3},{"value":"2.1.2 常用快捷键","url":"#212-常用快捷键","depth":3},{"value":"2.1.3 命令历史记录","url":"#213-命令历史记录","depth":3},{"value":"2.2 向量和矩阵操作","url":"#22-向量和矩阵操作","depth":2},{"value":"2.2.1 创建向量和矩阵","url":"#221-创建向量和矩阵","depth":3},{"value":"2.2.2 访问向量和矩阵元素","url":"#222-访问向量和矩阵元素","depth":3},{"value":"2.2.3 向量和矩阵的基本运算","url":"#223-向量和矩阵的基本运算","depth":3},{"value":"2.2.4 矩阵分解与求解","url":"#224-矩阵分解与求解","depth":3},{"value":"2.3 基本数学运算","url":"#23-基本数学运算","depth":2},{"value":"2.3.1 标量运算","url":"#231-标量运算","depth":3},{"value":"2.3.2 向量和矩阵运算","url":"#232-向量和矩阵运算","depth":3},{"value":"2.3.3 数学函数的使用","url":"#233-数学函数的使用","depth":3},{"value":"2.4 文件和路径管理","url":"#24-文件和路径管理","depth":2},{"value":"2.4.1 文件的读取和写入","url":"#241-文件的读取和写入","depth":3},{"value":"2.4.2 路径的设置和管理","url":"#242-路径的设置和管理","depth":3},{"value":"2.4.3 文件格式的转换","url":"#243-文件格式的转换","depth":3},{"value":"本章小结","url":"#本章小结-2","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 2 章 MATLAB 基本操作","datePublished":"2024-06-25T14:32:12.000Z","dateModified":"2024-06-25T14:32:28.000Z","description":"keywords: MATLAB 命令窗口, 向量和矩阵操作, 基本数学运算, 文件和路径管理MATLAB 作为一款强大的科学计算软件,掌握其基本操作是高效使用 MATLAB 的前提。本章我们将详细探讨 MATLAB 的几个基础方面：命令窗口的使用、向量和矩阵的创建与运算、基本数学运算,以及文...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/hfx8oy3ki3eck0b6"}},{"title":"第 3 章 数据可视化","date":"2024-06-25T14:31:26.000Z","urlname":"qd7f60bt60htrwnn","is_nav":false,"updated":"2024-06-25T14:32:07.000Z","not_show":false,"description":"keywords: MATLAB 可视化, 绘图函数, 图形修饰, 动态可视化数据可视化是将数据转化为图形或图像的过程,使得复杂的数据更易于理解和分析。MATLAB 提供了丰富的可视化工具,可以轻松创建出专业、美观的图形。本章将介绍如何使用 MATLAB 进行各种类型的数据可视化。3.1 绘制...","tags":[],"keywords":"MATLAB 可视化, 绘图函数, 图形修饰, 动态可视化","authors":["whitedew"],"type":"Post","readingTime":{"words":1788,"minutes":6,"text":"6 分钟"},"slug":"doc/💻 编程语言/Matlab/qd7f60bt60htrwnn","path":"docs/doc/💻 编程语言/Matlab/qd7f60bt60htrwnn","filePath":"docs/doc/💻 编程语言/Matlab/qd7f60bt60htrwnn.md","toc":[{"value":"3.1 绘制基本图形","url":"#31-绘制基本图形","depth":2},{"value":"3.1.1 绘制二维图形","url":"#311-绘制二维图形","depth":3},{"value":"3.1.2 绘制三维图形","url":"#312-绘制三维图形","depth":3},{"value":"3.1.3 多图形绘制","url":"#313-多图形绘制","depth":3},{"value":"3.2 图形的修饰与标注","url":"#32-图形的修饰与标注","depth":2},{"value":"3.2.1 添加标题和标签","url":"#321-添加标题和标签","depth":3},{"value":"3.2.2 修改图形属性","url":"#322-修改图形属性","depth":3},{"value":"3.2.3 添加图例","url":"#323-添加图例","depth":3},{"value":"3.3 三维图形","url":"#33-三维图形","depth":2},{"value":"3.3.1 绘制三维曲线","url":"#331-绘制三维曲线","depth":3},{"value":"3.3.2 三维表面图","url":"#332-三维表面图","depth":3},{"value":"3.3.3 三维散点图","url":"#333-三维散点图","depth":3},{"value":"3.4 动态可视化","url":"#34-动态可视化","depth":2},{"value":"3.4.1 动画的创建","url":"#341-动画的创建","depth":3},{"value":"3.4.2 动态数据展示","url":"#342-动态数据展示","depth":3},{"value":"3.4.3 实时数据可视化","url":"#343-实时数据可视化","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 3 章 数据可视化","datePublished":"2024-06-25T14:31:26.000Z","dateModified":"2024-06-25T14:32:07.000Z","description":"keywords: MATLAB 可视化, 绘图函数, 图形修饰, 动态可视化数据可视化是将数据转化为图形或图像的过程,使得复杂的数据更易于理解和分析。MATLAB 提供了丰富的可视化工具,可以轻松创建出专业、美观的图形。本章将介绍如何使用 MATLAB 进行各种类型的数据可视化。3.1 绘制...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/qd7f60bt60htrwnn"}},{"title":"第 4 章 编程基础","date":"2024-06-25T14:30:45.000Z","urlname":"fcm55n6byq5dmc9b","is_nav":false,"updated":"2024-06-25T14:31:11.000Z","not_show":false,"description":"keywords: MATLAB 编程基础, 变量, 数据类型, 流程控制, 函数, 脚本文件在前面的章节中,我们已经初步了解了 MATLAB 的基本操作和数据可视化功能。现在,让我们进一步探索 MATLAB 作为一种编程语言的强大功能。本章将介绍 MATLAB 编程的基础知识,包括变量与数据...","cover":"https://cdn.nlark.com/yuque/__latex/e8e0afb3433edcb56d8fa1badf3c07a8.svg","tags":[],"keywords":"MATLAB 编程基础, 变量, 数据类型, 流程控制, 函数, 脚本文件","authors":["whitedew"],"type":"Post","readingTime":{"words":3231,"minutes":11,"text":"11 分钟"},"slug":"doc/💻 编程语言/Matlab/fcm55n6byq5dmc9b","path":"docs/doc/💻 编程语言/Matlab/fcm55n6byq5dmc9b","filePath":"docs/doc/💻 编程语言/Matlab/fcm55n6byq5dmc9b.md","toc":[{"value":"4.1 变量与数据类型","url":"#41-变量与数据类型","depth":2},{"value":"4.1.1 变量的定义和使用","url":"#411-变量的定义和使用","depth":3},{"value":"4.1.2 常见数据类型","url":"#412-常见数据类型","depth":3},{"value":"4.1.3 数据类型的转换","url":"#413-数据类型的转换","depth":3},{"value":"4.2 流程控制","url":"#42-流程控制","depth":2},{"value":"4.2.1 条件语句","url":"#421-条件语句","depth":3},{"value":"4.2.2 循环语句","url":"#422-循环语句","depth":3},{"value":"4.2.3 跳出循环","url":"#423-跳出循环","depth":3},{"value":"4.3 函数","url":"#43-函数","depth":2},{"value":"4.3.1 函数的定义和调用","url":"#431-函数的定义和调用","depth":3},{"value":"4.3.2 函数参数和返回值","url":"#432-函数参数和返回值","depth":3},{"value":"4.3.3 局部变量和全局变量","url":"#433-局部变量和全局变量","depth":3},{"value":"4.3.4 匿名函数和嵌套函数","url":"#434-匿名函数和嵌套函数","depth":3},{"value":"4.4 脚本与函数文件","url":"#44-脚本与函数文件","depth":2},{"value":"4.4.1 脚本文件的创建和运行","url":"#441-脚本文件的创建和运行","depth":3},{"value":"4.4.2 函数文件的创建和调用","url":"#442-函数文件的创建和调用","depth":3},{"value":"4.4.3 脚本与函数的区别和应用","url":"#443-脚本与函数的区别和应用","depth":3},{"value":"小结","url":"#小结-3","depth":2},{"value":"练习题","url":"#练习题-2","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 4 章 编程基础","datePublished":"2024-06-25T14:30:45.000Z","dateModified":"2024-06-25T14:31:11.000Z","description":"keywords: MATLAB 编程基础, 变量, 数据类型, 流程控制, 函数, 脚本文件在前面的章节中,我们已经初步了解了 MATLAB 的基本操作和数据可视化功能。现在,让我们进一步探索 MATLAB 作为一种编程语言的强大功能。本章将介绍 MATLAB 编程的基础知识,包括变量与数据...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/fcm55n6byq5dmc9b"}},{"title":"第 5 章 高级数据处理","date":"2024-06-25T14:30:19.000Z","urlname":"cfbzu9qfdg8mbazb","is_nav":false,"updated":"2024-06-25T14:30:40.000Z","not_show":false,"description":"keywords: 数据导入, 数据预处理, 数据分析, 统计, 时间序列分析在前面的章节中,我们已经学习了 MATLAB 的基本操作和编程技巧。掌握了这些内容后,我们就可以开始处理一些更加复杂的数据了。本章将介绍 MATLAB 中的高级数据处理技术,包括数据导入与导出、数据预处理、数据分析与...","tags":[],"keywords":"数据导入, 数据预处理, 数据分析, 统计, 时间序列分析","authors":["whitedew"],"type":"Post","readingTime":{"words":2452,"minutes":8,"text":"8 分钟"},"slug":"doc/💻 编程语言/Matlab/cfbzu9qfdg8mbazb","path":"docs/doc/💻 编程语言/Matlab/cfbzu9qfdg8mbazb","filePath":"docs/doc/💻 编程语言/Matlab/cfbzu9qfdg8mbazb.md","toc":[{"value":"5.1 数据导入与导出","url":"#51-数据导入与导出","depth":2},{"value":"5.1.1 导入文本数据","url":"#511-导入文本数据","depth":3},{"value":"5.1.2 导入 Excel 数据","url":"#512-导入-excel-数据","depth":3},{"value":"5.1.3 导入 CSV 数据","url":"#513-导入-csv-数据","depth":3},{"value":"5.1.4 数据导出","url":"#514-数据导出","depth":3},{"value":"5.2 数据预处理","url":"#52-数据预处理","depth":2},{"value":"5.2.1 数据清洗","url":"#521-数据清洗","depth":3},{"value":"5.2.2 数据标准化","url":"#522-数据标准化","depth":3},{"value":"5.2.3 数据转换","url":"#523-数据转换","depth":3},{"value":"5.3 数据分析与统计","url":"#53-数据分析与统计","depth":2},{"value":"5.3.1 描述性统计","url":"#531-描述性统计","depth":3},{"value":"5.3.2 回归分析","url":"#532-回归分析","depth":3},{"value":"5.3.3 方差分析","url":"#533-方差分析","depth":3},{"value":"5.4 时间序列分析","url":"#54-时间序列分析","depth":2},{"value":"5.4.1 时间序列的基本概念","url":"#541-时间序列的基本概念","depth":3},{"value":"5.4.2 时间序列的建模","url":"#542-时间序列的建模","depth":3},{"value":"5.4.3 时间序列的预测","url":"#543-时间序列的预测","depth":3},{"value":"本章小结","url":"#本章小结","depth":2},{"value":"练习题","url":"#练习题-1","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 5 章 高级数据处理","datePublished":"2024-06-25T14:30:19.000Z","dateModified":"2024-06-25T14:30:40.000Z","description":"keywords: 数据导入, 数据预处理, 数据分析, 统计, 时间序列分析在前面的章节中,我们已经学习了 MATLAB 的基本操作和编程技巧。掌握了这些内容后,我们就可以开始处理一些更加复杂的数据了。本章将介绍 MATLAB 中的高级数据处理技术,包括数据导入与导出、数据预处理、数据分析与...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/cfbzu9qfdg8mbazb"}},{"title":"第 6 章：信号处理","date":"2024-06-25T14:29:50.000Z","urlname":"mi105zc23f9zxcza","is_nav":false,"updated":"2024-06-25T14:30:18.000Z","not_show":false,"description":"keywords: 信号处理, 滤波器设计, 傅里叶变换, 小波变换信号处理是 MATLAB 的一个重要应用领域。在本章中，我们将深入探讨如何使用 MATLAB 进行信号的表示、操作、滤波、变换等处理。通过学习本章内容，你将掌握信号处理的基本概念和方法，并能够运用 MATLAB 解决实际的信号...","tags":[],"keywords":"信号处理, 滤波器设计, 傅里叶变换, 小波变换","authors":["whitedew"],"type":"Post","readingTime":{"words":2863,"minutes":10,"text":"10 分钟"},"slug":"doc/💻 编程语言/Matlab/mi105zc23f9zxcza","path":"docs/doc/💻 编程语言/Matlab/mi105zc23f9zxcza","filePath":"docs/doc/💻 编程语言/Matlab/mi105zc23f9zxcza.md","toc":[{"value":"6.1 信号的表示与操作","url":"#61-信号的表示与操作","depth":2},{"value":"6.1.1 信号的基本概念","url":"#611-信号的基本概念","depth":3},{"value":"6.1.2 信号的采样与重建","url":"#612-信号的采样与重建","depth":3},{"value":"6.1.3 信号的基本操作","url":"#613-信号的基本操作","depth":3},{"value":"6.2 滤波器设计","url":"#62-滤波器设计","depth":2},{"value":"6.2.1 滤波器的基本类型","url":"#621-滤波器的基本类型","depth":3},{"value":"6.2.2 FIR 滤波器设计","url":"#622-fir-滤波器设计","depth":3},{"value":"6.2.3 IIR 滤波器设计","url":"#623-iir-滤波器设计","depth":3},{"value":"6.3 傅里叶变换","url":"#63-傅里叶变换","depth":2},{"value":"6.3.1 傅里叶变换的基本原理","url":"#631-傅里叶变换的基本原理","depth":3},{"value":"6.3.2 离散傅里叶变换（DFT）","url":"#632-离散傅里叶变换dft","depth":3},{"value":"6.3.3 快速傅里叶变换（FFT）","url":"#633-快速傅里叶变换fft","depth":3},{"value":"6.4 小波变换","url":"#64-小波变换","depth":2},{"value":"6.4.1 小波变换的基本原理","url":"#641-小波变换的基本原理","depth":3},{"value":"6.4.2 连续小波变换（CWT）","url":"#642-连续小波变换cwt","depth":3},{"value":"6.4.3 离散小波变换（DWT）","url":"#643-离散小波变换dwt","depth":3},{"value":"本章小结","url":"#本章小结-3","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 6 章：信号处理","datePublished":"2024-06-25T14:29:50.000Z","dateModified":"2024-06-25T14:30:18.000Z","description":"keywords: 信号处理, 滤波器设计, 傅里叶变换, 小波变换信号处理是 MATLAB 的一个重要应用领域。在本章中，我们将深入探讨如何使用 MATLAB 进行信号的表示、操作、滤波、变换等处理。通过学习本章内容，你将掌握信号处理的基本概念和方法，并能够运用 MATLAB 解决实际的信号...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/mi105zc23f9zxcza"}},{"title":"第 7 章：图像处理","date":"2024-06-25T14:29:30.000Z","urlname":"sktxvuv1zqi0rx58","is_nav":false,"updated":"2024-06-25T14:29:46.000Z","not_show":false,"description":"keywords: 图像处理,图像读取,图像显示,图像增强,图像分割,图像特征提取图像处理是 MATLAB 的一大应用领域。得益于 MATLAB 丰富的图像处理函数库,我们可以非常方便地使用 MATLAB 对图像进行各种操作,如读取、显示、变换、滤波、分割、特征提取等。本章我们将全面学习 MA...","tags":[],"keywords":"图像处理,图像读取,图像显示,图像增强,图像分割,图像特征提取","authors":["whitedew"],"type":"Post","readingTime":{"words":2755,"minutes":9,"text":"9 分钟"},"slug":"doc/💻 编程语言/Matlab/sktxvuv1zqi0rx58","path":"docs/doc/💻 编程语言/Matlab/sktxvuv1zqi0rx58","filePath":"docs/doc/💻 编程语言/Matlab/sktxvuv1zqi0rx58.md","toc":[{"value":"7.1 图像的读取与显示","url":"#71-图像的读取与显示","depth":2},{"value":"7.1.1 读取图像文件","url":"#711-读取图像文件","depth":3},{"value":"7.1.2 显示图像","url":"#712-显示图像","depth":3},{"value":"7.1.3 图像的基本属性","url":"#713-图像的基本属性","depth":3},{"value":"7.2 图像的基本操作","url":"#72-图像的基本操作","depth":2},{"value":"7.2.1 图像的裁剪与缩放","url":"#721-图像的裁剪与缩放","depth":3},{"value":"7.2.2 图像的旋转与翻转","url":"#722-图像的旋转与翻转","depth":3},{"value":"7.2.3 图像的颜色空间转换","url":"#723-图像的颜色空间转换","depth":3},{"value":"7.3 图像的增强与修复","url":"#73-图像的增强与修复","depth":2},{"value":"7.3.1 图像的平滑与锐化","url":"#731-图像的平滑与锐化","depth":3},{"value":"7.3.2 图像的对比度调整","url":"#732-图像的对比度调整","depth":3},{"value":"7.3.3 图像的修复与去噪","url":"#733-图像的修复与去噪","depth":3},{"value":"7.4 图像的分割与特征提取","url":"#74-图像的分割与特征提取","depth":2},{"value":"7.4.1 图像分割的基本方法","url":"#741-图像分割的基本方法","depth":3},{"value":"7.4.2 边缘检测","url":"#742-边缘检测","depth":3},{"value":"7.4.3 特征点提取与匹配","url":"#743-特征点提取与匹配","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 7 章：图像处理","datePublished":"2024-06-25T14:29:30.000Z","dateModified":"2024-06-25T14:29:46.000Z","description":"keywords: 图像处理,图像读取,图像显示,图像增强,图像分割,图像特征提取图像处理是 MATLAB 的一大应用领域。得益于 MATLAB 丰富的图像处理函数库,我们可以非常方便地使用 MATLAB 对图像进行各种操作,如读取、显示、变换、滤波、分割、特征提取等。本章我们将全面学习 MA...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/sktxvuv1zqi0rx58"}},{"title":"第 11 章 仿真与建模","date":"2024-06-25T14:28:54.000Z","urlname":"ffo21vig2vd3vg1n","is_nav":false,"updated":"2024-06-25T14:29:10.000Z","not_show":false,"description":"keywords: simulink, 仿真, 建模, 自动控制系统在 MATLAB 中,Simulink 是一个功能强大的可视化仿真与建模工具。通过 Simulink,我们可以方便地搭建复杂系统的模型,并进行仿真分析。本章将详细介绍 Simulink 的使用方法,并通过一个自动控制系统的实例...","tags":[],"keywords":"simulink, 仿真, 建模, 自动控制系统","authors":["whitedew"],"type":"Post","readingTime":{"words":2052,"minutes":7,"text":"7 分钟"},"slug":"doc/💻 编程语言/Matlab/ffo21vig2vd3vg1n","path":"docs/doc/💻 编程语言/Matlab/ffo21vig2vd3vg1n","filePath":"docs/doc/💻 编程语言/Matlab/ffo21vig2vd3vg1n.md","toc":[{"value":"11.1 Simulink 简介","url":"#111-simulink-简介","depth":2},{"value":"11.1.1 Simulink 的基本概念","url":"#1111-simulink-的基本概念","depth":3},{"value":"11.1.2 Simulink 的界面介绍","url":"#1112-simulink-的界面介绍","depth":3},{"value":"11.2 使用 Simulink 进行建模","url":"#112-使用-simulink-进行建模","depth":2},{"value":"11.2.1 创建 Simulink 模型","url":"#1121-创建-simulink-模型","depth":3},{"value":"11.2.2 模型的组成与连接","url":"#1122-模型的组成与连接","depth":3},{"value":"11.2.3 使用 Simulink 库","url":"#1123-使用-simulink-库","depth":3},{"value":"11.3 仿真结果的分析","url":"#113-仿真结果的分析","depth":2},{"value":"11.3.1 运行 Simulink 仿真","url":"#1131-运行-simulink-仿真","depth":3},{"value":"11.3.2 仿真结果的查看与分析","url":"#1132-仿真结果的查看与分析","depth":3},{"value":"11.3.3 仿真数据的导出","url":"#1133-仿真数据的导出","depth":3},{"value":"11.4 实例:自动控制系统","url":"#114-实例自动控制系统","depth":2},{"value":"11.4.1 自动控制系统的建模","url":"#1141-自动控制系统的建模","depth":3},{"value":"11.4.2 自动控制系统的仿真","url":"#1142-自动控制系统的仿真","depth":3},{"value":"11.4.3 仿真结果的分析与优化","url":"#1143-仿真结果的分析与优化","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 11 章 仿真与建模","datePublished":"2024-06-25T14:28:54.000Z","dateModified":"2024-06-25T14:29:10.000Z","description":"keywords: simulink, 仿真, 建模, 自动控制系统在 MATLAB 中,Simulink 是一个功能强大的可视化仿真与建模工具。通过 Simulink,我们可以方便地搭建复杂系统的模型,并进行仿真分析。本章将详细介绍 Simulink 的使用方法,并通过一个自动控制系统的实例...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/ffo21vig2vd3vg1n"}},{"title":"第 12 章：并行计算与 GPU 编程","date":"2024-06-25T14:28:34.000Z","urlname":"gqd9kwroc75edr3u","is_nav":false,"updated":"2024-06-25T14:28:52.000Z","not_show":false,"description":"keywords: 并行计算, GPU 编程, 并行工具箱, GPU 数组, GPU 加速在现代科学计算和工程应用中，面对海量数据和复杂计算，单核 CPU 已经无法满足高性能计算的需求。并行计算和 GPU 加速技术的出现，为解决这一问题提供了新的思路。MATLAB 作为一种高效的科学计算语言，...","tags":[],"keywords":"并行计算, GPU 编程, 并行工具箱, GPU 数组, GPU 加速","authors":["whitedew"],"type":"Post","readingTime":{"words":2392,"minutes":8,"text":"8 分钟"},"slug":"doc/💻 编程语言/Matlab/gqd9kwroc75edr3u","path":"docs/doc/💻 编程语言/Matlab/gqd9kwroc75edr3u","filePath":"docs/doc/💻 编程语言/Matlab/gqd9kwroc75edr3u.md","toc":[{"value":"12.1 并行计算的基本概念","url":"#121-并行计算的基本概念","depth":2},{"value":"12.1.1 并行计算的定义与意义","url":"#1211-并行计算的定义与意义","depth":3},{"value":"12.1.2 并行计算的基本方法","url":"#1212-并行计算的基本方法","depth":3},{"value":"12.2 使用并行工具箱","url":"#122-使用并行工具箱","depth":2},{"value":"12.2.1 并行工具箱的安装与配置","url":"#1221-并行工具箱的安装与配置","depth":3},{"value":"12.2.2 并行 for 循环","url":"#1222-并行-for-循环","depth":3},{"value":"12.2.3 分布式数组","url":"#1223-分布式数组","depth":3},{"value":"12.3 GPU 编程概述","url":"#123-gpu-编程概述","depth":2},{"value":"12.3.1 GPU 编程的基本概念","url":"#1231-gpu-编程的基本概念","depth":3},{"value":"12.3.2 MATLAB 对 GPU 的支持","url":"#1232-matlab-对-gpu-的支持","depth":3},{"value":"12.4 使用 MATLAB 进行 GPU 编程","url":"#124-使用-matlab-进行-gpu-编程","depth":2},{"value":"12.4.1 GPU 数组","url":"#1241-gpu-数组","depth":3},{"value":"12.4.2 GPU 上的矩阵运算","url":"#1242-gpu-上的矩阵运算","depth":3},{"value":"12.4.3 GPU 加速示例","url":"#1243-gpu-加速示例","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 12 章：并行计算与 GPU 编程","datePublished":"2024-06-25T14:28:34.000Z","dateModified":"2024-06-25T14:28:52.000Z","description":"keywords: 并行计算, GPU 编程, 并行工具箱, GPU 数组, GPU 加速在现代科学计算和工程应用中，面对海量数据和复杂计算，单核 CPU 已经无法满足高性能计算的需求。并行计算和 GPU 加速技术的出现，为解决这一问题提供了新的思路。MATLAB 作为一种高效的科学计算语言，...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/gqd9kwroc75edr3u"}},{"title":"第 13 章 项目一：数据分析与可视化","date":"2024-06-25T14:26:08.000Z","urlname":"edqe2985pgw4ay41","is_nav":false,"updated":"2024-06-25T14:26:25.000Z","not_show":false,"description":"keywords: 数据分析,可视化,MATLAB,描述性统计,回归分析,差异分析数据分析与可视化是利用 MATLAB 进行科学研究和工程应用的重要内容。通过对数据的分析和图形化展示,我们可以更好地理解数据背后的规律和趋势,从而为决策提供有力支撑。本章将带领大家完成一个完整的数据分析与可视化项...","tags":[],"keywords":"数据分析,可视化,MATLAB,描述性统计,回归分析,差异分析","authors":["whitedew"],"type":"Post","readingTime":{"words":1953,"minutes":7,"text":"7 分钟"},"slug":"doc/💻 编程语言/Matlab/edqe2985pgw4ay41","path":"docs/doc/💻 编程语言/Matlab/edqe2985pgw4ay41","filePath":"docs/doc/💻 编程语言/Matlab/edqe2985pgw4ay41.md","toc":[{"value":"13.1 项目需求分析","url":"#131-项目需求分析","depth":2},{"value":"13.1.1 数据分析的背景","url":"#1311-数据分析的背景","depth":3},{"value":"13.1.2 项目的目标","url":"#1312-项目的目标","depth":3},{"value":"13.2 数据的获取和预处理","url":"#132-数据的获取和预处理","depth":2},{"value":"13.2.1 数据的导入","url":"#1321-数据的导入","depth":3},{"value":"13.2.2 数据的清洗与转换","url":"#1322-数据的清洗与转换","depth":3},{"value":"13.3 数据的分析和统计","url":"#133-数据的分析和统计","depth":2},{"value":"13.3.1 描述性统计分析","url":"#1331-描述性统计分析","depth":3},{"value":"13.3.2 回归分析","url":"#1332-回归分析","depth":3},{"value":"13.3.3 差异分析","url":"#1333-差异分析","depth":3},{"value":"13.4 数据的可视化展示","url":"#134-数据的可视化展示","depth":2},{"value":"13.4.1 绘制基本图形","url":"#1341-绘制基本图形","depth":3},{"value":"13.4.2 多维数据的可视化","url":"#1342-多维数据的可视化","depth":3},{"value":"13.4.3 动态可视化展示","url":"#1343-动态可视化展示","depth":3},{"value":"本章小结","url":"#本章小结-1","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 13 章 项目一：数据分析与可视化","datePublished":"2024-06-25T14:26:08.000Z","dateModified":"2024-06-25T14:26:25.000Z","description":"keywords: 数据分析,可视化,MATLAB,描述性统计,回归分析,差异分析数据分析与可视化是利用 MATLAB 进行科学研究和工程应用的重要内容。通过对数据的分析和图形化展示,我们可以更好地理解数据背后的规律和趋势,从而为决策提供有力支撑。本章将带领大家完成一个完整的数据分析与可视化项...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/edqe2985pgw4ay41"}},{"title":"第 14 章：项目二：图像处理与识别","date":"2024-06-25T14:25:40.000Z","urlname":"bmh806ghn2ig7qgn","is_nav":false,"updated":"2024-06-25T14:29:30.000Z","not_show":false,"description":"keywords: 图像处理, 图像识别, 图像预处理, 特征提取, 机器学习前言在本章中，我们将深入探讨图像处理与识别的实际应用项目。无论你是初学者还是有一定经验的工程师，通过这一项目，你将学会如何从图像中提取有用信息，并使用机器学习算法进行分类与识别。本文将从项目需求分析开始，逐步介绍图像...","tags":[],"keywords":"图像处理, 图像识别, 图像预处理, 特征提取, 机器学习","authors":["whitedew"],"type":"Post","readingTime":{"words":1408,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/Matlab/bmh806ghn2ig7qgn","path":"docs/doc/💻 编程语言/Matlab/bmh806ghn2ig7qgn","filePath":"docs/doc/💻 编程语言/Matlab/bmh806ghn2ig7qgn.md","toc":[{"value":"前言","url":"#前言-2","depth":2},{"value":"14.1 项目需求分析","url":"#141-项目需求分析","depth":2},{"value":"14.1.1 图像处理的背景","url":"#1411-图像处理的背景","depth":3},{"value":"14.1.2 项目的目标","url":"#1412-项目的目标","depth":3},{"value":"14.2 图像的预处理","url":"#142-图像的预处理","depth":2},{"value":"14.2.1 图像的读取与显示","url":"#1421-图像的读取与显示","depth":3},{"value":"14.2.2 图像的灰度化与二值化","url":"#1422-图像的灰度化与二值化","depth":3},{"value":"14.2.3 图像的去噪与增强","url":"#1423-图像的去噪与增强","depth":3},{"value":"14.3 图像的特征提取","url":"#143-图像的特征提取","depth":2},{"value":"14.3.1 边缘检测","url":"#1431-边缘检测","depth":3},{"value":"14.3.2 形态学处理","url":"#1432-形态学处理","depth":3},{"value":"14.3.3 特征点提取","url":"#1433-特征点提取","depth":3},{"value":"14.4 图像的分类与识别","url":"#144-图像的分类与识别","depth":2},{"value":"14.4.1 机器学习在图像分类中的应用","url":"#1441-机器学习在图像分类中的应用","depth":3},{"value":"14.4.2 模型的训练与评估","url":"#1442-模型的训练与评估","depth":3},{"value":"14.4.3 实时图像识别","url":"#1443-实时图像识别","depth":3},{"value":"总结","url":"#总结-7","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 14 章：项目二：图像处理与识别","datePublished":"2024-06-25T14:25:40.000Z","dateModified":"2024-06-25T14:29:30.000Z","description":"keywords: 图像处理, 图像识别, 图像预处理, 特征提取, 机器学习前言在本章中，我们将深入探讨图像处理与识别的实际应用项目。无论你是初学者还是有一定经验的工程师，通过这一项目，你将学会如何从图像中提取有用信息，并使用机器学习算法进行分类与识别。本文将从项目需求分析开始，逐步介绍图像...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/bmh806ghn2ig7qgn"}},{"title":"第 15 章节: 项目三：机器学习应用","date":"2024-06-25T14:25:23.000Z","urlname":"ggq9egl3cezc9tv4","is_nav":false,"updated":"2024-06-25T14:28:34.000Z","not_show":false,"description":"keywords: 机器学习, 数据集, 模型训练, 模型评估, 模型部署15.1 项目需求分析15.1.1 机器学习应用的背景在当今的科技领域，机器学习已经渗透到各个行业。无论是金融、医疗、零售还是制造业，机器学习都在帮助企业提高效率、降低成本和创新产品。因此，掌握机器学习技术对于现代工程师...","tags":[],"keywords":"机器学习, 数据集, 模型训练, 模型评估, 模型部署","authors":["whitedew"],"type":"Post","readingTime":{"words":1451,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/Matlab/ggq9egl3cezc9tv4","path":"docs/doc/💻 编程语言/Matlab/ggq9egl3cezc9tv4","filePath":"docs/doc/💻 编程语言/Matlab/ggq9egl3cezc9tv4.md","toc":[{"value":"15.1 项目需求分析","url":"#151-项目需求分析","depth":2},{"value":"15.1.1 机器学习应用的背景","url":"#1511-机器学习应用的背景","depth":3},{"value":"15.1.2 项目的目标","url":"#1512-项目的目标","depth":3},{"value":"15.2 数据集的准备","url":"#152-数据集的准备","depth":2},{"value":"15.2.1 数据集的获取","url":"#1521-数据集的获取","depth":3},{"value":"15.2.2 数据的预处理","url":"#1522-数据的预处理","depth":3},{"value":"15.2.3 特征工程","url":"#1523-特征工程","depth":3},{"value":"15.3 模型的训练与评估","url":"#153-模型的训练与评估","depth":2},{"value":"15.3.1 选择合适的模型","url":"#1531-选择合适的模型","depth":3},{"value":"15.3.2 模型的训练与调优","url":"#1532-模型的训练与调优","depth":3},{"value":"15.3.3 模型的评估与验证","url":"#1533-模型的评估与验证","depth":3},{"value":"15.4 模型的应用与部署","url":"#154-模型的应用与部署","depth":2},{"value":"15.4.1 模型的保存与加载","url":"#1541-模型的保存与加载","depth":3},{"value":"15.4.2 模型的集成与应用","url":"#1542-模型的集成与应用","depth":3},{"value":"15.4.3 模型的部署与管理","url":"#1543-模型的部署与管理","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 15 章节: 项目三：机器学习应用","datePublished":"2024-06-25T14:25:23.000Z","dateModified":"2024-06-25T14:28:34.000Z","description":"keywords: 机器学习, 数据集, 模型训练, 模型评估, 模型部署15.1 项目需求分析15.1.1 机器学习应用的背景在当今的科技领域，机器学习已经渗透到各个行业。无论是金融、医疗、零售还是制造业，机器学习都在帮助企业提高效率、降低成本和创新产品。因此，掌握机器学习技术对于现代工程师...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/ggq9egl3cezc9tv4"}},{"title":"第 16 章：项目四：高级图像处理与分析","date":"2024-06-25T14:24:38.000Z","urlname":"awncgkarkubv2fgw","is_nav":false,"updated":"2024-06-25T14:25:05.000Z","not_show":false,"description":"keywords: 图像处理, 高级图像分析, MATLAB, 图像增强, 图像分割前言高级图像处理在现代科学和工程中占有重要地位。本章将带领大家深入探索高级图像处理技术，涵盖图像增强、图像分割、特征提取以及实际应用案例。通过本章的学习，你将掌握如何在 MATLAB 中实现复杂的图像处理任务。...","tags":[],"keywords":"图像处理, 高级图像分析, MATLAB, 图像增强, 图像分割","authors":["whitedew"],"type":"Post","readingTime":{"words":1592,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/Matlab/awncgkarkubv2fgw","path":"docs/doc/💻 编程语言/Matlab/awncgkarkubv2fgw","filePath":"docs/doc/💻 编程语言/Matlab/awncgkarkubv2fgw.md","toc":[{"value":"前言","url":"#前言-1","depth":2},{"value":"16.1 项目需求分析","url":"#161-项目需求分析","depth":2},{"value":"16.1.1 项目的背景","url":"#1611-项目的背景","depth":3},{"value":"16.1.2 项目的目标","url":"#1612-项目的目标","depth":3},{"value":"16.2 图像增强","url":"#162-图像增强","depth":2},{"value":"16.2.1 直方图均衡化","url":"#1621-直方图均衡化","depth":3},{"value":"16.2.2 滤波技术","url":"#1622-滤波技术","depth":3},{"value":"均值滤波","url":"#均值滤波","depth":4},{"value":"中值滤波","url":"#中值滤波","depth":4},{"value":"16.2.3 边缘检测","url":"#1623-边缘检测","depth":3},{"value":"16.3 图像分割","url":"#163-图像分割","depth":2},{"value":"16.3.1 阈值分割","url":"#1631-阈值分割","depth":3},{"value":"16.3.2 区域生长","url":"#1632-区域生长","depth":3},{"value":"16.3.3 K-means 聚类","url":"#1633-k-means-聚类","depth":3},{"value":"16.4 特征提取","url":"#164-特征提取","depth":2},{"value":"16.4.1 边缘特征","url":"#1641-边缘特征","depth":3},{"value":"16.4.2 纹理特征","url":"#1642-纹理特征","depth":3},{"value":"16.4.3 形状特征","url":"#1643-形状特征","depth":3},{"value":"16.5 实际应用案例：医学图像处理","url":"#165-实际应用案例医学图像处理","depth":2},{"value":"16.5.1 背景介绍","url":"#1651-背景介绍","depth":3},{"value":"16.5.2 MRI 图像增强","url":"#1652-mri-图像增强","depth":3},{"value":"16.5.3 肿瘤区域分割","url":"#1653-肿瘤区域分割","depth":3},{"value":"总结","url":"#总结-6","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 16 章：项目四：高级图像处理与分析","datePublished":"2024-06-25T14:24:38.000Z","dateModified":"2024-06-25T14:25:05.000Z","description":"keywords: 图像处理, 高级图像分析, MATLAB, 图像增强, 图像分割前言高级图像处理在现代科学和工程中占有重要地位。本章将带领大家深入探索高级图像处理技术，涵盖图像增强、图像分割、特征提取以及实际应用案例。通过本章的学习，你将掌握如何在 MATLAB 中实现复杂的图像处理任务。...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/awncgkarkubv2fgw"}},{"title":"6.22 起底阿里巴巴职级薪资|2024最新版","date":"2024-06-25T13:37:39.000Z","urlname":"lzsc0ceheeez6zmp","is_nav":false,"updated":"2024-06-25T13:37:56.000Z","not_show":false,"description":"阿里巴巴职级薪资起底哈喽，大家好，我是白露！最近粉丝群里，有很多小伙伴都在问我阿里巴巴的职级和薪资体系。很多人都会好奇：在这家以996工作制闻名的公司工作，究竟能拿到多少薪水？校招能拿多高的工资？年终奖，真的会像传说中那样丰厚，足以让你在上海买套小房子吗？今天，白露就来深入探讨阿里巴巴的职级与...","cover":"https://cdn.nlark.com/yuque/0/2024/jpeg/22389147/1719237413414-3e148c89-2475-44a7-ab34-5cddbe5f197e.jpeg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1881,"minutes":6,"text":"6 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/lzsc0ceheeez6zmp","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/lzsc0ceheeez6zmp","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/lzsc0ceheeez6zmp.md","toc":[{"value":"阿里巴巴职级薪资起底","url":"#阿里巴巴职级薪资起底","depth":1},{"value":"职级和薪酬总览","url":"#职级和薪酬总览","depth":1},{"value":"P5，梦开始的地方","url":"#p5梦开始的地方","depth":1},{"value":"难熬的P6","url":"#难熬的p6","depth":1},{"value":"进阶的P7","url":"#进阶的p7","depth":2},{"value":"威震八方的P8、登峰造极的P9","url":"#威震八方的p8登峰造极的p9","depth":1},{"value":"面试开始","url":"#面试开始-2","depth":1},{"value":"一面 40min 视频 面试","url":"#一面-40min-视频-面试","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.22 起底阿里巴巴职级薪资|2024最新版","datePublished":"2024-06-25T13:37:39.000Z","dateModified":"2024-06-25T13:37:56.000Z","description":"阿里巴巴职级薪资起底哈喽，大家好，我是白露！最近粉丝群里，有很多小伙伴都在问我阿里巴巴的职级和薪资体系。很多人都会好奇：在这家以996工作制闻名的公司工作，究竟能拿到多少薪水？校招能拿多高的工资？年终奖，真的会像传说中那样丰厚，足以让你在上海买套小房子吗？今天，白露就来深入探讨阿里巴巴的职级与...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/lzsc0ceheeez6zmp"}},{"title":"6.21 985硕，求职不易，顶住压力。。。","date":"2024-06-25T13:37:02.000Z","urlname":"alyq562vc3rin439","is_nav":false,"updated":"2024-06-25T13:37:39.000Z","not_show":false,"description":"大家好，我是白露。现在的就业形势严峻到什么地步了？就连985硕的毕业生找了一年才找到工作。。。我分享一位网友的经历，希望他研三一年应聘的感受能够给大家启发和动力。结束了，研三一年应聘感受，终于走到了尽头。今天答辩刚过，前几周也拿到offer，签了三方，整个人真的累到不行。以下是我个人，一名98...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1719322640534-60a31a8a-04ab-4473-b3f9-9102a26f56b0.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3768,"minutes":13,"text":"13 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/alyq562vc3rin439","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/alyq562vc3rin439","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/alyq562vc3rin439.md","toc":[{"value":"美团二面面经","url":"#美团二面面经","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.21 985硕，求职不易，顶住压力。。。","datePublished":"2024-06-25T13:37:02.000Z","dateModified":"2024-06-25T13:37:39.000Z","description":"大家好，我是白露。现在的就业形势严峻到什么地步了？就连985硕的毕业生找了一年才找到工作。。。我分享一位网友的经历，希望他研三一年应聘的感受能够给大家启发和动力。结束了，研三一年应聘感受，终于走到了尽头。今天答辩刚过，前几周也拿到offer，签了三方，整个人真的累到不行。以下是我个人，一名98...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/alyq562vc3rin439"}},{"title":"第 10 章 控制系统设计","date":"2024-06-24T12:56:47.000Z","urlname":"nbd6tl0z4z70x16t","is_nav":false,"updated":"2024-06-24T12:57:22.000Z","not_show":false,"description":"keywords: 控制系统,传递函数,状态空间模型,PID 控制器,状态反馈控制器10.1 控制系统基础在开始学习控制系统设计之前,我们需要先了解一些基本概念。控制系统是一种能够根据预定的规则,对被控对象的行为进行控制和调节的系统。它广泛应用于工业生产、航空航天、机器人等领域。10.1.1 ...","cover":"https://cdn.nlark.com/yuque/__latex/02303157dbe397ead520d9ca3f4dd90a.svg","tags":[],"keywords":"控制系统,传递函数,状态空间模型,PID 控制器,状态反馈控制器","authors":["whitedew"],"type":"Post","readingTime":{"words":2701,"minutes":9,"text":"9 分钟"},"slug":"doc/💻 编程语言/Matlab/nbd6tl0z4z70x16t","path":"docs/doc/💻 编程语言/Matlab/nbd6tl0z4z70x16t","filePath":"docs/doc/💻 编程语言/Matlab/nbd6tl0z4z70x16t.md","toc":[{"value":"10.1 控制系统基础","url":"#101-控制系统基础","depth":2},{"value":"10.1.1 控制系统的基本概念","url":"#1011-控制系统的基本概念","depth":3},{"value":"10.1.2 控制系统的分类","url":"#1012-控制系统的分类","depth":3},{"value":"10.2 传递函数与状态空间模型","url":"#102-传递函数与状态空间模型","depth":2},{"value":"10.2.1 传递函数的定义","url":"#1021-传递函数的定义","depth":3},{"value":"10.2.2 状态空间模型的定义","url":"#1022-状态空间模型的定义","depth":3},{"value":"10.2.3 传递函数与状态空间模型的转换","url":"#1023-传递函数与状态空间模型的转换","depth":3},{"value":"状态空间模型转传递函数","url":"#状态空间模型转传递函数","depth":4},{"value":"传递函数转状态空间模型","url":"#传递函数转状态空间模型","depth":4},{"value":"10.3 系统的时域与频域分析","url":"#103-系统的时域与频域分析","depth":2},{"value":"10.3.1 时域分析","url":"#1031-时域分析","depth":3},{"value":"10.3.2 频域分析","url":"#1032-频域分析","depth":3},{"value":"10.3.3 稳定性与瞬态响应","url":"#1033-稳定性与瞬态响应","depth":3},{"value":"10.4 控制器设计","url":"#104-控制器设计","depth":2},{"value":"10.4.1 PID 控制器","url":"#1041-pid-控制器","depth":3},{"value":"10.4.2 状态反馈控制器","url":"#1042-状态反馈控制器","depth":3},{"value":"10.4.3 最优控制器","url":"#1043-最优控制器","depth":3},{"value":"本章小结","url":"#本章小结-4","depth":2},{"value":"思考题","url":"#思考题","depth":2},{"value":"参考文献","url":"#参考文献","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 10 章 控制系统设计","datePublished":"2024-06-24T12:56:47.000Z","dateModified":"2024-06-24T12:57:22.000Z","description":"keywords: 控制系统,传递函数,状态空间模型,PID 控制器,状态反馈控制器10.1 控制系统基础在开始学习控制系统设计之前,我们需要先了解一些基本概念。控制系统是一种能够根据预定的规则,对被控对象的行为进行控制和调节的系统。它广泛应用于工业生产、航空航天、机器人等领域。10.1.1 ...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/nbd6tl0z4z70x16t"}},{"title":"第 8 章 优化与非线性方程","date":"2024-06-24T12:52:33.000Z","urlname":"ig7w7srg3tg0aova","is_nav":false,"updated":"2024-06-26T05:25:42.000Z","not_show":false,"description":"keywords: 优化问题,线性规划,非线性规划,非线性方程组,MATLAB 优化工具箱优化问题在工程实践中十分常见,如何利用数学模型和计算机算法高效求解优化问题,是每一个科研工作者和工程师必须掌握的重要技能。MATLAB 作为一款强大的数值计算软件,内置了丰富的优化算法和工具箱,使得求解优...","cover":"https://cdn.nlark.com/yuque/__latex/5e7420d2c965a396b1796f00ea5a6863.svg","tags":[],"keywords":"优化问题,线性规划,非线性规划,非线性方程组,MATLAB 优化工具箱","authors":["whitedew"],"type":"Post","readingTime":{"words":3802,"minutes":13,"text":"13 分钟"},"slug":"doc/💻 编程语言/Matlab/ig7w7srg3tg0aova","path":"docs/doc/💻 编程语言/Matlab/ig7w7srg3tg0aova","filePath":"docs/doc/💻 编程语言/Matlab/ig7w7srg3tg0aova.md","toc":[{"value":"8.1 优化问题概述","url":"#81-优化问题概述","depth":2},{"value":"8.1.1 优化问题的基本概念","url":"#811-优化问题的基本概念","depth":3},{"value":"8.1.2 优化问题的分类","url":"#812-优化问题的分类","depth":3},{"value":"8.2 线性规划","url":"#82-线性规划","depth":2},{"value":"8.2.1 线性规划的基本模型","url":"#821-线性规划的基本模型","depth":3},{"value":"8.2.2 线性规划的求解方法","url":"#822-线性规划的求解方法","depth":3},{"value":"8.2.3 MATLAB 中的线性规划函数","url":"#823-matlab-中的线性规划函数","depth":3},{"value":"8.3 非线性规划","url":"#83-非线性规划","depth":2},{"value":"8.3.1 非线性规划的基本模型","url":"#831-非线性规划的基本模型","depth":3},{"value":"8.3.2 非线性规划的求解方法","url":"#832-非线性规划的求解方法","depth":3},{"value":"8.3.3 MATLAB 非线性规划实例","url":"#833-matlab-非线性规划实例","depth":3},{"value":"8.4 非线性方程组","url":"#84-非线性方程组","depth":2},{"value":"8.4.1 非线性方程组的基本概念","url":"#841-非线性方程组的基本概念","depth":3},{"value":"8.4.2 求解非线性方程组的方法","url":"#842-求解非线性方程组的方法","depth":3},{"value":"8.4.3 MATLAB 非线性方程组求解","url":"#843-matlab-非线性方程组求解","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 8 章 优化与非线性方程","datePublished":"2024-06-24T12:52:33.000Z","dateModified":"2024-06-26T05:25:42.000Z","description":"keywords: 优化问题,线性规划,非线性规划,非线性方程组,MATLAB 优化工具箱优化问题在工程实践中十分常见,如何利用数学模型和计算机算法高效求解优化问题,是每一个科研工作者和工程师必须掌握的重要技能。MATLAB 作为一款强大的数值计算软件,内置了丰富的优化算法和工具箱,使得求解优...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/ig7w7srg3tg0aova"}},{"title":"第 9 章 机器学习与数据挖掘","date":"2024-06-24T12:52:07.000Z","urlname":"hi1mz9uu39x6n9hy","is_nav":false,"updated":"2024-06-24T12:52:34.000Z","not_show":false,"description":"keywords: 机器学习, 数据挖掘, MATLAB, 监督学习, 无监督学习机器学习和数据挖掘是当前计算机科学和数据分析领域最热门的话题之一。随着数据量的爆炸式增长,如何从海量数据中挖掘出有价值的信息和知识,已经成为各行各业亟待解决的问题。MATLAB 作为一款功能强大的科学计算软件,集...","cover":"https://cdn.nlark.com/yuque/__latex/e1626dac7cd71d56c440a6a91800a45f.svg","tags":[],"keywords":"机器学习, 数据挖掘, MATLAB, 监督学习, 无监督学习","authors":["whitedew"],"type":"Post","readingTime":{"words":3532,"minutes":12,"text":"12 分钟"},"slug":"doc/💻 编程语言/Matlab/hi1mz9uu39x6n9hy","path":"docs/doc/💻 编程语言/Matlab/hi1mz9uu39x6n9hy","filePath":"docs/doc/💻 编程语言/Matlab/hi1mz9uu39x6n9hy.md","toc":[{"value":"9.1 机器学习基础","url":"#91-机器学习基础","depth":2},{"value":"9.1.1 机器学习的定义与分类","url":"#911-机器学习的定义与分类","depth":3},{"value":"9.1.2 MATLAB 的机器学习工具箱","url":"#912-matlab-的机器学习工具箱","depth":3},{"value":"9.1.3 机器学习的基本流程","url":"#913-机器学习的基本流程","depth":3},{"value":"9.2 监督学习","url":"#92-监督学习","depth":2},{"value":"9.2.1 线性回归","url":"#921-线性回归","depth":3},{"value":"9.2.2 分类方法","url":"#922-分类方法","depth":3},{"value":"9.2.3 模型评估与选择","url":"#923-模型评估与选择","depth":3},{"value":"9.3 无监督学习","url":"#93-无监督学习","depth":2},{"value":"9.3.1 聚类分析","url":"#931-聚类分析","depth":3},{"value":"9.3.2 降维方法","url":"#932-降维方法","depth":3},{"value":"9.3.3 异常检测","url":"#933-异常检测","depth":3},{"value":"9.4 模型评估与选择","url":"#94-模型评估与选择","depth":2},{"value":"9.4.1 评估指标","url":"#941-评估指标","depth":3},{"value":"9.4.2 交叉验证","url":"#942-交叉验证","depth":3},{"value":"9.4.3 模型选择","url":"#943-模型选择","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 9 章 机器学习与数据挖掘","datePublished":"2024-06-24T12:52:07.000Z","dateModified":"2024-06-24T12:52:34.000Z","description":"keywords: 机器学习, 数据挖掘, MATLAB, 监督学习, 无监督学习机器学习和数据挖掘是当前计算机科学和数据分析领域最热门的话题之一。随着数据量的爆炸式增长,如何从海量数据中挖掘出有价值的信息和知识,已经成为各行各业亟待解决的问题。MATLAB 作为一款功能强大的科学计算软件,集...","url":"https://offernow.cn/docs/doc/💻 编程语言/Matlab/hi1mz9uu39x6n9hy"}},{"title":"Matlab","date":"2024-06-24T12:51:27.000Z","urlname":"zpa1orwyl0ly0pmg","is_nav":false,"nav_path":"matlab","updated":"2024-06-25T14:33:39.000Z","not_show":false,"description":"---nav_path: matlabkeywords: matlab入门, matlab基础, matlab编程, matlab开发环境---","tags":[],"keywords":"matlab入门, matlab基础, matlab编程, matlab开发环境","authors":["whitedew"],"type":"Post","readingTime":{"words":0,"minutes":0,"text":"小于一分钟"},"slug":"doc/💻 编程语言/zpa1orwyl0ly0pmg","path":"docs/doc/💻 编程语言/zpa1orwyl0ly0pmg","filePath":"docs/doc/💻 编程语言/zpa1orwyl0ly0pmg.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Matlab","datePublished":"2024-06-24T12:51:27.000Z","dateModified":"2024-06-25T14:33:39.000Z","description":"---nav_path: matlabkeywords: matlab入门, matlab基础, matlab编程, matlab开发环境---","url":"https://offernow.cn/docs/doc/💻 编程语言/zpa1orwyl0ly0pmg"}},{"title":"怎样在Python中引入另一个文件中的函数？","date":"2024-06-21T07:41:23.000Z","urlname":"gnr3l68n0h351iw5","is_nav":false,"updated":"2024-06-23T12:37:03.000Z","not_show":false,"description":"本文介绍了在Python中引入自定义函数或模块的多种方法，包括在同一文件中定义和调用函数、从另一个Python文件导入函数、从同一目录的多个模块导入以及使用包导入。并提供了示例代码展示如何实现这些方法。","tags":[],"keywords":"Python 自定义函数，导入模块，使用包，示例","authors":["whitedew"],"type":"Post","readingTime":{"words":787,"minutes":3,"text":"3 分钟"},"slug":"doc/🔥 程序员自我修养/十万个为什么💡/gnr3l68n0h351iw5","path":"docs/doc/🔥 程序员自我修养/十万个为什么💡/gnr3l68n0h351iw5","filePath":"docs/doc/🔥 程序员自我修养/十万个为什么💡/gnr3l68n0h351iw5.md","toc":[{"value":"1. 在同一文件中定义和调用函数","url":"#1-在同一文件中定义和调用函数","depth":3},{"value":"2. 从另一个Python文件导入函数","url":"#2-从另一个python文件导入函数","depth":3},{"value":"3. 从同一目录的多个模块导入","url":"#3-从同一目录的多个模块导入","depth":3},{"value":"4. 使用包导入","url":"#4-使用包导入","depth":3},{"value":"示例","url":"#示例-8","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"怎样在Python中引入另一个文件中的函数？","datePublished":"2024-06-21T07:41:23.000Z","dateModified":"2024-06-23T12:37:03.000Z","description":"本文介绍了在Python中引入自定义函数或模块的多种方法，包括在同一文件中定义和调用函数、从另一个Python文件导入函数、从同一目录的多个模块导入以及使用包导入。并提供了示例代码展示如何实现这些方法。","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/十万个为什么💡/gnr3l68n0h351iw5"}},{"title":"无标题文档","date":"2024-06-21T02:43:56.000Z","urlname":"yrlfhko367ak7dyx","is_nav":false,"updated":"2024-06-21T02:45:09.000Z","not_show":false,"description":"章节简述：Hello World!在本书开篇，刘遄老师将向各位读者讲述自己十多年来的Linux系统学习经历以及教学感悟，介绍《Linux就该这么学（第2版）》图书的主要优势及特点，旨在让您更快地下定学习决心。Linux系统的兴盛受益于开源社区的强健根基，我们将与读者一起学习了解开源软件的优势，...","cover":"https://cdn.nlark.com/yuque/0/2024/jpeg/22382235/1718937839380-d7b07d20-aabd-45f2-abb7-2c49bbdbb139.jpeg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":19512,"minutes":65,"text":"65 分钟"},"slug":"doc/📚 计算机基础/Linux解密/yrlfhko367ak7dyx","path":"docs/doc/📚 计算机基础/Linux解密/yrlfhko367ak7dyx","filePath":"docs/doc/📚 计算机基础/Linux解密/yrlfhko367ak7dyx.md","toc":[{"value":"0.1 本书作者简介","url":"#01-本书作者简介","depth":5},{"value":"0.2 学习是件苦差","url":"#02-学习是件苦差","depth":5},{"value":"0.3 开源共享精神","url":"#03-开源共享精神","depth":5},{"value":"Tips","url":"#tips","depth":3},{"value":"Tips","url":"#tips-1","depth":3},{"value":"0.4 为什么学习Linux系统？","url":"#04-为什么学习linux系统","depth":5},{"value":"0.5 常见的Linux系统版本","url":"#05-常见的linux系统版本","depth":5},{"value":"Tips","url":"#tips-2","depth":3},{"value":"0.6 优秀的RHEL 8系统","url":"#06-优秀的rhel-8系统","depth":5},{"value":"Tips","url":"#tips-3","depth":3},{"value":"0.7 了解红帽认证","url":"#07-了解红帽认证","depth":5},{"value":"Tips","url":"#tips-4","depth":3},{"value":"Tips","url":"#tips-5","depth":3},{"value":"Tips","url":"#tips-6","depth":3},{"value":"0.8 感谢你们相信并选择我","url":"#08-感谢你们相信并选择我","depth":5},{"value":"0.9 读者服务","url":"#09-读者服务","depth":5},{"value":"为您推荐一些与本文相关的文章：","url":"#为您推荐一些与本文相关的文章","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"无标题文档","datePublished":"2024-06-21T02:43:56.000Z","dateModified":"2024-06-21T02:45:09.000Z","description":"章节简述：Hello World!在本书开篇，刘遄老师将向各位读者讲述自己十多年来的Linux系统学习经历以及教学感悟，介绍《Linux就该这么学（第2版）》图书的主要优势及特点，旨在让您更快地下定学习决心。Linux系统的兴盛受益于开源社区的强健根基，我们将与读者一起学习了解开源软件的优势，...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Linux解密/yrlfhko367ak7dyx"}},{"title":"第 15 章：Rust 社区和学习资源","date":"2024-06-20T11:54:29.000Z","urlname":"nicvmb8rysuguw8d","is_nav":false,"updated":"2024-06-23T13:01:35.000Z","not_show":false,"description":"keywords: Rust 社区, Rust 学习资源, Rust 论坛, Rust 活动, Rust 继续学习在学习 Rust 编程语言的过程中，掌握好社区资源和学习途径至关重要。本章将介绍 Rust 官方网站和文档、Rust 论坛和聊天室、Rust 博客和播客、Rust 会议和活动，并提...","tags":[],"keywords":"Rust 社区, Rust 学习资源, Rust 论坛, Rust 活动, Rust 继续学习","authors":["whitedew"],"type":"Post","readingTime":{"words":1274,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Rust/nicvmb8rysuguw8d","path":"docs/doc/💻 编程语言/Rust/nicvmb8rysuguw8d","filePath":"docs/doc/💻 编程语言/Rust/nicvmb8rysuguw8d.md","toc":[{"value":"Rust 官方网站和文档","url":"#rust-官方网站和文档","depth":2},{"value":"Rust 官方网站","url":"#rust-官方网站","depth":3},{"value":"Rust 文档","url":"#rust-文档","depth":3},{"value":"Rust 论坛和聊天室","url":"#rust-论坛和聊天室","depth":2},{"value":"Rust 用户论坛","url":"#rust-用户论坛","depth":3},{"value":"Rust 聊天室","url":"#rust-聊天室","depth":3},{"value":"Rust 博客和播客","url":"#rust-博客和播客","depth":2},{"value":"Rust 博客","url":"#rust-博客","depth":3},{"value":"Rust 播客","url":"#rust-播客","depth":3},{"value":"Rust 会议和活动","url":"#rust-会议和活动","depth":2},{"value":"Rust 会议","url":"#rust-会议","depth":3},{"value":"Rust 活动","url":"#rust-活动","depth":3},{"value":"继续你的 Rust 学习之旅","url":"#继续你的-rust-学习之旅","depth":2},{"value":"学习资源推荐","url":"#学习资源推荐","depth":3},{"value":"参与开源项目","url":"#参与开源项目","depth":3},{"value":"与社区互动","url":"#与社区互动","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 15 章：Rust 社区和学习资源","datePublished":"2024-06-20T11:54:29.000Z","dateModified":"2024-06-23T13:01:35.000Z","description":"keywords: Rust 社区, Rust 学习资源, Rust 论坛, Rust 活动, Rust 继续学习在学习 Rust 编程语言的过程中，掌握好社区资源和学习途径至关重要。本章将介绍 Rust 官方网站和文档、Rust 论坛和聊天室、Rust 博客和播客、Rust 会议和活动，并提...","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/nicvmb8rysuguw8d"}},{"title":"第 14 章：Rust 和其他语言的交互","date":"2024-06-20T11:54:07.000Z","urlname":"gmxq1nek2xn8eefx","is_nav":false,"updated":"2024-06-23T13:01:27.000Z","not_show":false,"description":"keywords: Rust, 交互, C 语言, Python, Node.js, WebAssembly在现代软件开发中，语言间的互操作性变得越来越重要。Rust 以其安全性、高性能和并发性著称，但在某些情况下，我们仍需要与其他编程语言进行交互。本章将详细探讨 Rust 如何与 C 语言、...","tags":[],"keywords":"Rust, 交互, C 语言, Python, Node.js, WebAssembly","authors":["whitedew"],"type":"Post","readingTime":{"words":1391,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/Rust/gmxq1nek2xn8eefx","path":"docs/doc/💻 编程语言/Rust/gmxq1nek2xn8eefx","filePath":"docs/doc/💻 编程语言/Rust/gmxq1nek2xn8eefx.md","toc":[{"value":"与 C 语言交互","url":"#与-c-语言交互","depth":2},{"value":"调用 C 函数","url":"#调用-c-函数","depth":3},{"value":"调用 Rust 函数","url":"#调用-rust-函数","depth":3},{"value":"与 Python 交互","url":"#与-python-交互","depth":2},{"value":"使用 PyO3 创建 Python 模块","url":"#使用-pyo3-创建-python-模块","depth":3},{"value":"与 Node.js 交互","url":"#与-nodejs-交互","depth":2},{"value":"使用 neon 创建 Node.js 模块","url":"#使用-neon-创建-nodejs-模块","depth":3},{"value":"与 Java 交互","url":"#与-java-交互","depth":2},{"value":"使用 JNI 创建 Java 本地库","url":"#使用-jni-创建-java-本地库","depth":3},{"value":"Rust 和 WebAssembly","url":"#rust-和-webassembly","depth":2},{"value":"编写和编译 WebAssembly","url":"#编写和编译-webassembly","depth":3},{"value":"在浏览器中使用 WebAssembly","url":"#在浏览器中使用-webassembly","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 14 章：Rust 和其他语言的交互","datePublished":"2024-06-20T11:54:07.000Z","dateModified":"2024-06-23T13:01:27.000Z","description":"keywords: Rust, 交互, C 语言, Python, Node.js, WebAssembly在现代软件开发中，语言间的互操作性变得越来越重要。Rust 以其安全性、高性能和并发性著称，但在某些情况下，我们仍需要与其他编程语言进行交互。本章将详细探讨 Rust 如何与 C 语言、...","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/gmxq1nek2xn8eefx"}},{"title":"第 13 章：系统编程和嵌入式开发","date":"2024-06-20T11:53:21.000Z","urlname":"zd6i0smgxmx9hc4r","is_nav":false,"updated":"2024-06-23T13:01:17.000Z","not_show":false,"description":"keywords: 系统编程, 嵌入式开发, Rust 文件操作, 网络编程, 信号处理在本章中，我们将探讨 Rust 语言在系统编程和嵌入式开发中的应用。Rust 的内存安全性和高性能特性使其成为系统级编程和嵌入式开发的理想选择。我们将涵盖以下内容：文件和目录操作进程和信号处理网络编程嵌入式...","tags":[],"keywords":"系统编程, 嵌入式开发, Rust 文件操作, 网络编程, 信号处理","authors":["whitedew"],"type":"Post","readingTime":{"words":1040,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Rust/zd6i0smgxmx9hc4r","path":"docs/doc/💻 编程语言/Rust/zd6i0smgxmx9hc4r","filePath":"docs/doc/💻 编程语言/Rust/zd6i0smgxmx9hc4r.md","toc":[{"value":"文件和目录操作","url":"#文件和目录操作","depth":2},{"value":"文件读写","url":"#文件读写-1","depth":3},{"value":"目录操作","url":"#目录操作","depth":3},{"value":"进程和信号处理","url":"#进程和信号处理","depth":2},{"value":"创建子进程","url":"#创建子进程","depth":3},{"value":"信号处理","url":"#信号处理","depth":3},{"value":"网络编程","url":"#网络编程-1","depth":2},{"value":"TCP 服务器","url":"#tcp-服务器","depth":3},{"value":"HTTP 服务器","url":"#http-服务器","depth":3},{"value":"嵌入式系统开发","url":"#嵌入式系统开发","depth":2},{"value":"设置开发环境","url":"#设置开发环境","depth":3},{"value":"创建嵌入式项目","url":"#创建嵌入式项目","depth":3},{"value":"编写嵌入式程序","url":"#编写嵌入式程序","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 13 章：系统编程和嵌入式开发","datePublished":"2024-06-20T11:53:21.000Z","dateModified":"2024-06-23T13:01:17.000Z","description":"keywords: 系统编程, 嵌入式开发, Rust 文件操作, 网络编程, 信号处理在本章中，我们将探讨 Rust 语言在系统编程和嵌入式开发中的应用。Rust 的内存安全性和高性能特性使其成为系统级编程和嵌入式开发的理想选择。我们将涵盖以下内容：文件和目录操作进程和信号处理网络编程嵌入式...","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/zd6i0smgxmx9hc4r"}},{"title":"第 12 章：构建 Web 应用","date":"2024-06-20T11:48:23.000Z","urlname":"upsy7mxpgl7y6uqf","is_nav":false,"updated":"2024-06-23T13:01:05.000Z","not_show":false,"description":"keywords: Rust Web 应用, Rust HTTP 请求, Rust 数据库操作, Rust Web 部署, Rust Web 框架在现代软件开发中，Web 应用已经成为不可或缺的一部分。本章将带你深入了解如何使用 Rust 构建一个高效、可靠的 Web 应用。我们将涵盖 Web...","tags":[],"keywords":"Rust Web 应用, Rust HTTP 请求, Rust 数据库操作, Rust Web 部署, Rust Web 框架","authors":["whitedew"],"type":"Post","readingTime":{"words":2054,"minutes":7,"text":"7 分钟"},"slug":"doc/💻 编程语言/Rust/upsy7mxpgl7y6uqf","path":"docs/doc/💻 编程语言/Rust/upsy7mxpgl7y6uqf","filePath":"docs/doc/💻 编程语言/Rust/upsy7mxpgl7y6uqf.md","toc":[{"value":"12.1 Web 框架介绍","url":"#121-web-框架介绍","depth":2},{"value":"12.1.1 Rocket","url":"#1211-rocket","depth":3},{"value":"12.1.2 Actix-web","url":"#1212-actix-web","depth":3},{"value":"12.1.3 Warp","url":"#1213-warp","depth":3},{"value":"12.2 处理 HTTP 请求","url":"#122-处理-http-请求","depth":2},{"value":"12.2.1 GET 请求","url":"#1221-get-请求","depth":3},{"value":"12.2.2 POST 请求","url":"#1222-post-请求","depth":3},{"value":"12.2.3 PUT 请求","url":"#1223-put-请求","depth":3},{"value":"12.2.4 DELETE 请求","url":"#1224-delete-请求","depth":3},{"value":"12.3 数据库操作","url":"#123-数据库操作","depth":2},{"value":"12.3.1 安装 Diesel","url":"#1231-安装-diesel","depth":3},{"value":"12.3.2 配置数据库","url":"#1232-配置数据库","depth":3},{"value":"12.3.3 定义模型和 schema","url":"#1233-定义模型和-schema","depth":3},{"value":"12.3.4 数据库操作示例","url":"#1234-数据库操作示例","depth":3},{"value":"12.4 部署 Web 应用","url":"#124-部署-web-应用","depth":2},{"value":"12.4.1 使用 Docker 部署","url":"#1241-使用-docker-部署","depth":3},{"value":"创建 Dockerfile","url":"#创建-dockerfile-1","depth":4},{"value":"构建和运行 Docker 镜像","url":"#构建和运行-docker-镜像","depth":4},{"value":"12.4.2 部署到 Heroku","url":"#1242-部署到-heroku","depth":3},{"value":"创建 Heroku 应用","url":"#创建-heroku-应用","depth":4},{"value":"部署代码","url":"#部署代码","depth":4},{"value":"12.5 安全性","url":"#125-安全性","depth":2},{"value":"12.5.1 防止 SQL 注入","url":"#1251-防止-sql-注入","depth":3},{"value":"12.5.2 防止跨站脚本攻击 (XSS)","url":"#1252-防止跨站脚本攻击-xss","depth":3},{"value":"12.5.3 防止跨站请求伪造 (CSRF)","url":"#1253-防止跨站请求伪造-csrf","depth":3},{"value":"12.5.4 安全的密码存储","url":"#1254-安全的密码存储","depth":3},{"value":"12.6 日志和监控","url":"#126-日志和监控","depth":2},{"value":"12.6.1 日志记录","url":"#1261-日志记录","depth":3},{"value":"12.6.2 应用监控","url":"#1262-应用监控","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 12 章：构建 Web 应用","datePublished":"2024-06-20T11:48:23.000Z","dateModified":"2024-06-23T13:01:05.000Z","description":"keywords: Rust Web 应用, Rust HTTP 请求, Rust 数据库操作, Rust Web 部署, Rust Web 框架在现代软件开发中，Web 应用已经成为不可或缺的一部分。本章将带你深入了解如何使用 Rust 构建一个高效、可靠的 Web 应用。我们将涵盖 Web...","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/upsy7mxpgl7y6uqf"}},{"title":"第 11 章：构建命令行应用","date":"2024-06-20T11:48:00.000Z","urlname":"or8pk2gow7s4qgzw","is_nav":false,"updated":"2024-06-20T11:48:22.000Z","not_show":false,"description":"本章将详细介绍如何在 Rust 中构建命令行应用，包括解析命令行参数、读写文件、错误处理以及使用第三方库等内容。","tags":[],"keywords":"Rust 命令行应用, Rust 文件读写, Rust 错误处理, Rust 第三方库, Rust 实战教程","authors":["whitedew"],"type":"Post","readingTime":{"words":1170,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Rust/or8pk2gow7s4qgzw","path":"docs/doc/💻 编程语言/Rust/or8pk2gow7s4qgzw","filePath":"docs/doc/💻 编程语言/Rust/or8pk2gow7s4qgzw.md","toc":[{"value":"11.1 解析命令行参数","url":"#111-解析命令行参数","depth":2},{"value":"安装 clap","url":"#安装-clap","depth":3},{"value":"使用 clap 解析参数","url":"#使用-clap-解析参数","depth":3},{"value":"运行命令","url":"#运行命令","depth":3},{"value":"11.2 读写文件","url":"#112-读写文件","depth":2},{"value":"读取文件内容","url":"#读取文件内容-1","depth":3},{"value":"写入文件","url":"#写入文件","depth":3},{"value":"11.3 错误处理","url":"#113-错误处理","depth":2},{"value":"使用 Result 进行错误处理","url":"#使用-result-进行错误处理","depth":3},{"value":"使用 ? 运算符简化错误处理","url":"#使用--运算符简化错误处理","depth":3},{"value":"11.4 使用第三方库","url":"#114-使用第三方库","depth":2},{"value":"使用 serde 进行序列化和反序列化","url":"#使用-serde-进行序列化和反序列化","depth":3},{"value":"使用 reqwest 进行 HTTP 请求","url":"#使用-reqwest-进行-http-请求","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 11 章：构建命令行应用","datePublished":"2024-06-20T11:48:00.000Z","dateModified":"2024-06-20T11:48:22.000Z","description":"本章将详细介绍如何在 Rust 中构建命令行应用，包括解析命令行参数、读写文件、错误处理以及使用第三方库等内容。","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/or8pk2gow7s4qgzw"}},{"title":"第 10 章：并发编程","date":"2024-06-20T11:47:30.000Z","urlname":"ttuo4tdv5c5p7iz4","is_nav":false,"updated":"2024-06-23T12:36:18.000Z","not_show":false,"description":"本章节将深入探讨 Rust 中的并发编程，涵盖线程和消息传递、共享状态与 Sync trait、Send trait 和线程安全、并发模式和最佳实践。","tags":[],"keywords":"并发编程, Rust 线程, Rust 消息传递, Rust Sync, Rust Send","authors":["whitedew"],"type":"Post","readingTime":{"words":1192,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Rust/ttuo4tdv5c5p7iz4","path":"docs/doc/💻 编程语言/Rust/ttuo4tdv5c5p7iz4","filePath":"docs/doc/💻 编程语言/Rust/ttuo4tdv5c5p7iz4.md","toc":[{"value":"前言","url":"#前言-3","depth":2},{"value":"线程和消息传递","url":"#线程和消息传递","depth":2},{"value":"消息传递","url":"#消息传递","depth":3},{"value":"共享状态和 Sync trait","url":"#共享状态和-sync-trait","depth":2},{"value":"Arc 和 Mutex","url":"#arc-和-mutex","depth":3},{"value":"Send trait 和线程安全","url":"#send-trait-和线程安全","depth":2},{"value":"并发模式和最佳实践","url":"#并发模式和最佳实践","depth":2},{"value":"实践示例","url":"#实践示例","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 10 章：并发编程","datePublished":"2024-06-20T11:47:30.000Z","dateModified":"2024-06-23T12:36:18.000Z","description":"本章节将深入探讨 Rust 中的并发编程，涵盖线程和消息传递、共享状态与 Sync trait、Send trait 和线程安全、并发模式和最佳实践。","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/ttuo4tdv5c5p7iz4"}},{"title":"第 9 章：智能指针和内存管理","date":"2024-06-20T11:46:51.000Z","urlname":"gwt9xrl6hu4ooihr","is_nav":false,"updated":"2024-06-23T12:26:20.000Z","not_show":false,"description":"深入探讨 Rust 中的智能指针和内存管理，包括 Box、Rc和 Arc、RefCell以及内部可变性，Mutex和同步原语等内容，掌握 Rust 的内存管理技巧。","tags":[],"keywords":"Rust 智能指针, Rust 内存管理, Box, Rc, Arc, RefCell","authors":["whitedew"],"type":"Post","readingTime":{"words":928,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Rust/gwt9xrl6hu4ooihr","path":"docs/doc/💻 编程语言/Rust/gwt9xrl6hu4ooihr","filePath":"docs/doc/💻 编程语言/Rust/gwt9xrl6hu4ooihr.md","toc":[{"value":"什么是智能指针","url":"#什么是智能指针","depth":2},{"value":"Box<T>","url":"#boxt","depth":3},{"value":"示例代码：","url":"#示例代码-15","depth":4},{"value":"Rc<T> 和 Arc<T>","url":"#rct-和-arct","depth":2},{"value":"Rc<T>","url":"#rct","depth":3},{"value":"示例代码：","url":"#示例代码-16","depth":4},{"value":"Arc<T>","url":"#arct","depth":3},{"value":"示例代码：","url":"#示例代码-17","depth":4},{"value":"RefCell<T> 和内部可变性","url":"#refcellt-和内部可变性","depth":2},{"value":"示例代码：","url":"#示例代码-18","depth":3},{"value":"Mutex<T> 和同步原语","url":"#mutext-和同步原语","depth":2},{"value":"示例代码：","url":"#示例代码-19","depth":3},{"value":"内存管理总结","url":"#内存管理总结","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 9 章：智能指针和内存管理","datePublished":"2024-06-20T11:46:51.000Z","dateModified":"2024-06-23T12:26:20.000Z","description":"深入探讨 Rust 中的智能指针和内存管理，包括 Box、Rc和 Arc、RefCell以及内部可变性，Mutex和同步原语等内容，掌握 Rust 的内存管理技巧。","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/gwt9xrl6hu4ooihr"}},{"title":"第 8 章：函数式编程和迭代器","date":"2024-06-20T11:45:47.000Z","urlname":"hkkhccgfge0niqgq","is_nav":false,"updated":"2024-06-20T11:46:50.000Z","not_show":false,"description":"本章深入探讨 Rust 中的函数式编程，包括闭包、迭代器和高阶函数。通过详细的代码示例和解释，帮助读者掌握这些强大的编程工具。","tags":[],"keywords":"Rust, 函数式编程, 闭包, 迭代器, 高阶函数","authors":["whitedew"],"type":"Post","readingTime":{"words":851,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Rust/hkkhccgfge0niqgq","path":"docs/doc/💻 编程语言/Rust/hkkhccgfge0niqgq","filePath":"docs/doc/💻 编程语言/Rust/hkkhccgfge0niqgq.md","toc":[{"value":"闭包","url":"#闭包-1","depth":2},{"value":"闭包的定义和使用","url":"#闭包的定义和使用","depth":3},{"value":"闭包捕获环境","url":"#闭包捕获环境","depth":3},{"value":"迭代器","url":"#迭代器","depth":2},{"value":"迭代器的创建和使用","url":"#迭代器的创建和使用","depth":3},{"value":"迭代器适配器","url":"#迭代器适配器","depth":3},{"value":"高阶函数","url":"#高阶函数","depth":2},{"value":"高阶函数示例","url":"#高阶函数示例","depth":3},{"value":"函数式编程实践","url":"#函数式编程实践","depth":2},{"value":"实际案例：计算列表中的偶数平方和","url":"#实际案例计算列表中的偶数平方和","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 8 章：函数式编程和迭代器","datePublished":"2024-06-20T11:45:47.000Z","dateModified":"2024-06-20T11:46:50.000Z","description":"本章深入探讨 Rust 中的函数式编程，包括闭包、迭代器和高阶函数。通过详细的代码示例和解释，帮助读者掌握这些强大的编程工具。","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/hkkhccgfge0niqgq"}},{"title":"第 7 章：包管理和模块系统","date":"2024-06-20T11:35:37.000Z","urlname":"za80ev1n6tkrvbdx","is_nav":false,"updated":"2024-06-20T11:45:44.000Z","not_show":false,"description":"本章详细探讨了 Rust 中的包管理和模块系统，包含如何定义和使用模块，使用 `use` 关键字，还介绍了 Cargo 工具和 Crates.io 仓库的使用方法。","tags":[],"keywords":"Rust, 包管理, 模块系统, Cargo, Crates.io","authors":["whitedew"],"type":"Post","readingTime":{"words":852,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Rust/za80ev1n6tkrvbdx","path":"docs/doc/💻 编程语言/Rust/za80ev1n6tkrvbdx","filePath":"docs/doc/💻 编程语言/Rust/za80ev1n6tkrvbdx.md","toc":[{"value":"什么是包和模块","url":"#什么是包和模块","depth":2},{"value":"创建和使用模块","url":"#创建和使用模块","depth":3},{"value":"使用 use 关键字","url":"#使用-use-关键字","depth":2},{"value":"Cargo 的使用","url":"#cargo-的使用","depth":2},{"value":"创建新项目","url":"#创建新项目","depth":3},{"value":"添加依赖","url":"#添加依赖","depth":3},{"value":"Crates.io","url":"#cratesio","depth":2},{"value":"搜索库","url":"#搜索库","depth":3},{"value":"添加库","url":"#添加库","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 7 章：包管理和模块系统","datePublished":"2024-06-20T11:35:37.000Z","dateModified":"2024-06-20T11:45:44.000Z","description":"本章详细探讨了 Rust 中的包管理和模块系统，包含如何定义和使用模块，使用 `use` 关键字，还介绍了 Cargo 工具和 Crates.io 仓库的使用方法。","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/za80ev1n6tkrvbdx"}},{"title":"第 6 章：泛型、trait 和生命周期","date":"2024-06-20T11:24:08.000Z","urlname":"gutt9mgif32resy3","is_nav":false,"updated":"2024-06-20T11:39:45.000Z","not_show":false,"description":"本章深入探讨 Rust 编程中的泛型、trait 和生命周期。通过详细的示例代码，读者将学习如何定义和使用泛型函数和结构体，理解 trait 的实现，以及掌握生命周期注解，提升对 Rust 编程的理解和应用能力。","tags":[],"keywords":"Rust 泛型, Rust trait, Rust 生命周期, Rust 高级编程, Rust 教程","authors":["whitedew"],"type":"Post","readingTime":{"words":788,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Rust/gutt9mgif32resy3","path":"docs/doc/💻 编程语言/Rust/gutt9mgif32resy3","filePath":"docs/doc/💻 编程语言/Rust/gutt9mgif32resy3.md","toc":[{"value":"泛型","url":"#泛型","depth":2},{"value":"泛型函数和结构体","url":"#泛型函数和结构体","depth":3},{"value":"泛型结构体","url":"#泛型结构体","depth":3},{"value":"Trait","url":"#trait","depth":2},{"value":"Trait 定义和实现","url":"#trait-定义和实现","depth":3},{"value":"生命周期","url":"#生命周期","depth":2},{"value":"生命周期注解","url":"#生命周期注解","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 6 章：泛型、trait 和生命周期","datePublished":"2024-06-20T11:24:08.000Z","dateModified":"2024-06-20T11:39:45.000Z","description":"本章深入探讨 Rust 编程中的泛型、trait 和生命周期。通过详细的示例代码，读者将学习如何定义和使用泛型函数和结构体，理解 trait 的实现，以及掌握生命周期注解，提升对 Rust 编程的理解和应用能力。","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/gutt9mgif32resy3"}},{"title":"第 5 章：错误处理","date":"2024-06-20T11:22:34.000Z","urlname":"wlo5n5g0z7ogdas6","is_nav":false,"updated":"2024-06-20T11:24:04.000Z","not_show":false,"description":"本章节将详细介绍 Rust 中的错误处理机制，包括 panic! 和 unwrap, Option 和 Result, 错误传播和自定义错误类型，帮助你在编程中更有效地处理错误。","tags":[],"keywords":"错误处理, Rust 错误处理, Rust 编程, Option 和 Result, 自定义错误类型","authors":["whitedew"],"type":"Post","readingTime":{"words":890,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Rust/wlo5n5g0z7ogdas6","path":"docs/doc/💻 编程语言/Rust/wlo5n5g0z7ogdas6","filePath":"docs/doc/💻 编程语言/Rust/wlo5n5g0z7ogdas6.md","toc":[{"value":"panic! 和 unwrap","url":"#panic-和-unwrap","depth":2},{"value":"panic! 宏","url":"#panic-宏","depth":3},{"value":"unwrap 方法","url":"#unwrap-方法","depth":3},{"value":"Option 和 Result","url":"#option-和-result","depth":2},{"value":"Option 枚举","url":"#option-枚举","depth":3},{"value":"Result 枚举","url":"#result-枚举","depth":3},{"value":"错误传播","url":"#错误传播","depth":2},{"value":"自定义错误类型","url":"#自定义错误类型","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 5 章：错误处理","datePublished":"2024-06-20T11:22:34.000Z","dateModified":"2024-06-20T11:24:04.000Z","description":"本章节将详细介绍 Rust 中的错误处理机制，包括 panic! 和 unwrap, Option 和 Result, 错误传播和自定义错误类型，帮助你在编程中更有效地处理错误。","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/wlo5n5g0z7ogdas6"}},{"title":"第 4 章：结构体、枚举和集合类型","date":"2024-06-20T11:21:39.000Z","urlname":"fccyi1rbvv9znu3d","is_nav":false,"updated":"2024-06-20T11:23:23.000Z","not_show":false,"description":"本章节将深入探讨 Rust 中的结构体、枚举和集合类型的定义和使用方法，包括动态数组 Vec 和哈希表 HashMap 的操作，帮助读者掌握这些高级特性。","tags":[],"keywords":"Rust 结构体, Rust 枚举, Rust 集合类型, Rust 动态数组, Rust 哈希表","authors":["whitedew"],"type":"Post","readingTime":{"words":1061,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Rust/fccyi1rbvv9znu3d","path":"docs/doc/💻 编程语言/Rust/fccyi1rbvv9znu3d","filePath":"docs/doc/💻 编程语言/Rust/fccyi1rbvv9znu3d.md","toc":[{"value":"4.1 定义和使用结构体","url":"#41-定义和使用结构体","depth":2},{"value":"4.1.1 基本定义","url":"#411-基本定义","depth":3},{"value":"4.1.2 实例化和访问","url":"#412-实例化和访问","depth":3},{"value":"4.1.3 结构体方法","url":"#413-结构体方法","depth":3},{"value":"4.1.4 使用结构体的场景","url":"#414-使用结构体的场景","depth":3},{"value":"4.2 定义和使用枚举","url":"#42-定义和使用枚举","depth":2},{"value":"4.2.1 枚举定义","url":"#421-枚举定义","depth":3},{"value":"4.2.2 使用枚举","url":"#422-使用枚举","depth":3},{"value":"4.2.3 使用枚举的场景","url":"#423-使用枚举的场景","depth":3},{"value":"4.3 动态数组 Vec 和哈希表 HashMap","url":"#43-动态数组-vec-和哈希表-hashmap","depth":2},{"value":"4.3.1 动态数组 Vec","url":"#431-动态数组-vec","depth":3},{"value":"4.3.2 哈希表 HashMap","url":"#432-哈希表-hashmap","depth":3},{"value":"4.3.3 使用集合类型的场景","url":"#433-使用集合类型的场景","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 4 章：结构体、枚举和集合类型","datePublished":"2024-06-20T11:21:39.000Z","dateModified":"2024-06-20T11:23:23.000Z","description":"本章节将深入探讨 Rust 中的结构体、枚举和集合类型的定义和使用方法，包括动态数组 Vec 和哈希表 HashMap 的操作，帮助读者掌握这些高级特性。","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/fccyi1rbvv9znu3d"}},{"title":"第 3 章：所有权和借用","date":"2024-06-20T11:20:48.000Z","urlname":"oayz5mpf7vk3as5g","is_nav":false,"updated":"2024-06-20T11:21:29.000Z","not_show":false,"description":"本章深入探讨 Rust 中的所有权、借用和生命周期概念，帮助读者理解这些关键特性，写出更安全和高效的代码。","tags":[],"keywords":"Rust, 所有权, 借用, 生命周期, 编程概念","authors":["whitedew"],"type":"Post","readingTime":{"words":910,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Rust/oayz5mpf7vk3as5g","path":"docs/doc/💻 编程语言/Rust/oayz5mpf7vk3as5g","filePath":"docs/doc/💻 编程语言/Rust/oayz5mpf7vk3as5g.md","toc":[{"value":"什么是所有权","url":"#什么是所有权","depth":2},{"value":"所有权规则","url":"#所有权规则","depth":3},{"value":"代码示例","url":"#代码示例","depth":3},{"value":"借用和引用","url":"#借用和引用","depth":2},{"value":"不可变引用","url":"#不可变引用","depth":3},{"value":"可变引用","url":"#可变引用","depth":3},{"value":"生命周期","url":"#生命周期-1","depth":2},{"value":"生命周期注解","url":"#生命周期注解-1","depth":3},{"value":"图解生命周期","url":"#图解生命周期","depth":3},{"value":"小结","url":"#小结-5","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 3 章：所有权和借用","datePublished":"2024-06-20T11:20:48.000Z","dateModified":"2024-06-20T11:21:29.000Z","description":"本章深入探讨 Rust 中的所有权、借用和生命周期概念，帮助读者理解这些关键特性，写出更安全和高效的代码。","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/oayz5mpf7vk3as5g"}},{"title":"第 2 章：Rust 的基本语法","date":"2024-06-20T11:19:32.000Z","urlname":"xhw47xg1eez738z7","is_nav":false,"updated":"2024-06-20T11:20:44.000Z","not_show":false,"description":"本章讲解 Rust 的基本语法，包括变量和数据类型、运算符、条件表达式和循环，帮助读者理解和掌握 Rust 编程的基础知识。","tags":[],"keywords":"变量, 数据类型, 运算符, 条件表达式, 循环","authors":["whitedew"],"type":"Post","readingTime":{"words":886,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Rust/xhw47xg1eez738z7","path":"docs/doc/💻 编程语言/Rust/xhw47xg1eez738z7","filePath":"docs/doc/💻 编程语言/Rust/xhw47xg1eez738z7.md","toc":[{"value":"变量和数据类型","url":"#变量和数据类型","depth":2},{"value":"运算符","url":"#运算符","depth":2},{"value":"条件表达式和循环","url":"#条件表达式和循环","depth":2},{"value":"条件表达式","url":"#条件表达式","depth":3},{"value":"循环","url":"#循环-1","depth":3},{"value":"模式匹配","url":"#模式匹配","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 2 章：Rust 的基本语法","datePublished":"2024-06-20T11:19:32.000Z","dateModified":"2024-06-20T11:20:44.000Z","description":"本章讲解 Rust 的基本语法，包括变量和数据类型、运算符、条件表达式和循环，帮助读者理解和掌握 Rust 编程的基础知识。","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/xhw47xg1eez738z7"}},{"title":"第 1 章：初识 Rust","date":"2024-06-20T11:17:42.000Z","urlname":"rort768t73lz7op0","is_nav":false,"updated":"2024-06-20T11:19:26.000Z","not_show":false,"description":"本章介绍了Rust的基本概念及其应用领域，解释了为什么选择Rust，指导用户搭建第一个Rust开发环境，并编写第一个Rust程序“Hello, World!”。","tags":[],"keywords":"Rust入门, Rust基础, Rust编程, Rust开发环境, Rust Hello World","authors":["whitedew"],"type":"Post","readingTime":{"words":893,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Rust/rort768t73lz7op0","path":"docs/doc/💻 编程语言/Rust/rort768t73lz7op0","filePath":"docs/doc/💻 编程语言/Rust/rort768t73lz7op0.md","toc":[{"value":"什么是 Rust 以及它的应用领域","url":"#什么是-rust-以及它的应用领域","depth":2},{"value":"Rust 的应用领域","url":"#rust-的应用领域","depth":3},{"value":"为什么选择学习 Rust","url":"#为什么选择学习-rust","depth":2},{"value":"搭建你的第一个 Rust 开发环境","url":"#搭建你的第一个-rust-开发环境","depth":2},{"value":"安装 Rust","url":"#安装-rust","depth":3},{"value":"配置环境变量","url":"#配置环境变量-1","depth":3},{"value":"验证安装","url":"#验证安装-1","depth":3},{"value":"你的第一个 Rust 程序：\"Hello, World!\"","url":"#你的第一个-rust-程序hello-world","depth":2},{"value":"创建项目目录","url":"#创建项目目录","depth":3},{"value":"编写代码","url":"#编写代码","depth":3},{"value":"编译和运行","url":"#编译和运行","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第 1 章：初识 Rust","datePublished":"2024-06-20T11:17:42.000Z","dateModified":"2024-06-20T11:19:26.000Z","description":"本章介绍了Rust的基本概念及其应用领域，解释了为什么选择Rust，指导用户搭建第一个Rust开发环境，并编写第一个Rust程序“Hello, World!”。","url":"https://offernow.cn/docs/doc/💻 编程语言/Rust/rort768t73lz7op0"}},{"title":"如何实现，用户在网页拷贝时，添加版权后缀？","date":"2024-06-20T08:01:17.000Z","urlname":"yngxyvkbqaf61ywf","is_nav":false,"updated":"2024-06-20T08:02:08.000Z","not_show":false,"description":"要在用户从网页复制文本时添加一段自定义的后缀，可以监听copy事件，并在该事件的处理函数中修改剪贴板中的内容。这里给出一个使用TypeScript实现的示例：首先，需要一个HTML页面作为起点。以下是一个简单的示例：<!DOCTYPE html> <html lang=\"en\"> <head>...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":421,"minutes":1,"text":"1 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/yngxyvkbqaf61ywf","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/yngxyvkbqaf61ywf","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/yngxyvkbqaf61ywf.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"如何实现，用户在网页拷贝时，添加版权后缀？","datePublished":"2024-06-20T08:01:17.000Z","dateModified":"2024-06-20T08:02:08.000Z","description":"要在用户从网页复制文本时添加一段自定义的后缀，可以监听copy事件，并在该事件的处理函数中修改剪贴板中的内容。这里给出一个使用TypeScript实现的示例：首先，需要一个HTML页面作为起点。以下是一个简单的示例：<!DOCTYPE html> <html lang=\"en\"> <head>...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/yngxyvkbqaf61ywf"}},{"title":"C#","date":"2024-06-20T02:00:38.000Z","urlname":"tg0zoam348xl02fz","is_nav":false,"nav_path":"c_sharp","updated":"2024-07-17T12:21:47.000Z","not_show":false,"description":"---nav_path: c_sharp---C#是微软公司开发的一门面向对象的编程语言,它源自C和C++,同时吸收了Java等语言的优点。自2000年首次发布以来,C#已经成为了.NET生态系统的核心语言,广泛应用于桌面应用、Web开发、游戏开发、移动应用等领域。那么,为什么要学习C#呢?多...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":778,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/tg0zoam348xl02fz","path":"docs/doc/💻 编程语言/tg0zoam348xl02fz","filePath":"docs/doc/💻 编程语言/tg0zoam348xl02fz.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"C#","datePublished":"2024-06-20T02:00:38.000Z","dateModified":"2024-07-17T12:21:47.000Z","description":"---nav_path: c_sharp---C#是微软公司开发的一门面向对象的编程语言,它源自C和C++,同时吸收了Java等语言的优点。自2000年首次发布以来,C#已经成为了.NET生态系统的核心语言,广泛应用于桌面应用、Web开发、游戏开发、移动应用等领域。那么,为什么要学习C#呢?多...","url":"https://offernow.cn/docs/doc/💻 编程语言/tg0zoam348xl02fz"}},{"title":"Rust","date":"2024-06-20T02:00:25.000Z","urlname":"lg82iagvpxi4fpn0","is_nav":true,"nav_path":"rust","updated":"2024-09-28T04:05:33.000Z","not_show":false,"description":"本课程介绍了Rust的基本概念及其应用领域，解释了为什么选择Rust。","tags":[],"keywords":"Rust入门, Rust基础, Rust编程, Rust开发环境, Rust","authors":["whitedew"],"type":"Post","readingTime":{"words":747,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/lg82iagvpxi4fpn0","path":"docs/doc/💻 编程语言/lg82iagvpxi4fpn0","filePath":"docs/doc/💻 编程语言/lg82iagvpxi4fpn0.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Rust","datePublished":"2024-06-20T02:00:25.000Z","dateModified":"2024-09-28T04:05:33.000Z","description":"本课程介绍了Rust的基本概念及其应用领域，解释了为什么选择Rust。","url":"https://offernow.cn/docs/doc/💻 编程语言/lg82iagvpxi4fpn0"}},{"title":"并发：Goroutines和Channels的详细指南","date":"2024-06-19T15:18:29.000Z","urlname":"acksp7eld7k9p7ag","is_nav":false,"updated":"2024-08-06T11:33:17.000Z","not_show":false,"description":"0. 并发和并行的区别并发与并行在许多情况下被用作相互替代的术语，但在计算中，它们之间有着明显的区别。并发是指同时管理很多事情，这是软件设计的一种方式；而并行执行则指同时做很多事情，是根据硬件的计算能力来进行的。例如，假设我们在一个餐厅里做若干件事情：点菜、吃饭、结账。在并发的世界里，我们将这...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1403,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/Go/🎁 最佳实践/acksp7eld7k9p7ag","path":"docs/doc/💻 编程语言/Go/🎁 最佳实践/acksp7eld7k9p7ag","filePath":"docs/doc/💻 编程语言/Go/🎁 最佳实践/acksp7eld7k9p7ag.md","toc":[{"value":"0. 并发和并行的区别","url":"#0-并发和并行的区别","depth":4},{"value":"1. Goroutines介绍和创建","url":"#1-goroutines介绍和创建","depth":4},{"value":"2. Channels的原理和使用","url":"#2-channels的原理和使用","depth":4},{"value":"3. Go中的Goroutine如何调度","url":"#3-go中的goroutine如何调度","depth":4},{"value":"4. 和其他编程语言的比较","url":"#4-和其他编程语言的比较","depth":4},{"value":"5. 案例和应用场景","url":"#5-案例和应用场景","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"并发：Goroutines和Channels的详细指南","datePublished":"2024-06-19T15:18:29.000Z","dateModified":"2024-08-06T11:33:17.000Z","description":"0. 并发和并行的区别并发与并行在许多情况下被用作相互替代的术语，但在计算中，它们之间有着明显的区别。并发是指同时管理很多事情，这是软件设计的一种方式；而并行执行则指同时做很多事情，是根据硬件的计算能力来进行的。例如，假设我们在一个餐厅里做若干件事情：点菜、吃饭、结账。在并发的世界里，我们将这...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🎁 最佳实践/acksp7eld7k9p7ag"}},{"title":"7天玩转 Golang 标准库之 http/net","date":"2024-06-19T15:17:42.000Z","urlname":"gcpnwwcv60ep0ley","is_nav":false,"updated":"2024-08-06T11:30:45.000Z","not_show":false,"description":"在构建web应用时，我们经常需要处理HTTP请求、做网页抓取或者搭建web服务器等任务，而Go语言在这方面为我们提供了强大的内置工具：net/http标准库，它为我们操作和处理HTTP协议提供了便利。基础用法一：处理HTTP请求首先，我们来看看如何使用net/http标准库发送一个HTTP请求...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1325,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Go/Go标准库/gcpnwwcv60ep0ley","path":"docs/doc/💻 编程语言/Go/Go标准库/gcpnwwcv60ep0ley","filePath":"docs/doc/💻 编程语言/Go/Go标准库/gcpnwwcv60ep0ley.md","toc":[{"value":"基础用法","url":"#基础用法","depth":1},{"value":"一：处理HTTP请求","url":"#一处理http请求","depth":2},{"value":"二：创建和启动HTTP服务器","url":"#二创建和启动http服务器","depth":2},{"value":"三：使用http.Client自定义请求行为","url":"#三使用httpclient自定义请求行为","depth":2},{"value":"进阶用法","url":"#进阶用法","depth":1},{"value":"反向代理","url":"#反向代理","depth":2},{"value":"升级websocket","url":"#升级websocket","depth":2},{"value":"自定义HTTP请求过程","url":"#自定义http请求过程","depth":2},{"value":"处理Cookie","url":"#处理cookie","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"7天玩转 Golang 标准库之 http/net","datePublished":"2024-06-19T15:17:42.000Z","dateModified":"2024-08-06T11:30:45.000Z","description":"在构建web应用时，我们经常需要处理HTTP请求、做网页抓取或者搭建web服务器等任务，而Go语言在这方面为我们提供了强大的内置工具：net/http标准库，它为我们操作和处理HTTP协议提供了便利。基础用法一：处理HTTP请求首先，我们来看看如何使用net/http标准库发送一个HTTP请求...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/Go标准库/gcpnwwcv60ep0ley"}},{"title":"7天玩转 Golang 标准库之 os","date":"2024-06-19T15:17:34.000Z","urlname":"ka141a7685toxaw8","is_nav":false,"updated":"2024-08-06T11:31:15.000Z","not_show":false,"description":"在 Golang 的日常开发中，往往要面对各种和操作系统相关的操作，例如文件的读写、环境变量的处理、程序参数的获取等等。Golang 的 os 标准库为我们提供了与操作系统打交道的各类工具，能让这些操作变得更加简洁和简单。基础应用文件的读写操作在进行文件操作时，“读” 和 “写” 是最常见且重...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1111,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Go/Go标准库/ka141a7685toxaw8","path":"docs/doc/💻 编程语言/Go/Go标准库/ka141a7685toxaw8","filePath":"docs/doc/💻 编程语言/Go/Go标准库/ka141a7685toxaw8.md","toc":[{"value":"基础应用","url":"#基础应用","depth":1},{"value":"文件的读写操作","url":"#文件的读写操作","depth":2},{"value":"环境变量的操作","url":"#环境变量的操作","depth":2},{"value":"命令行参数的获取","url":"#命令行参数的获取","depth":2},{"value":"进阶应用","url":"#进阶应用-1","depth":1},{"value":"进程管理","url":"#进程管理","depth":2},{"value":"Signal处理","url":"#signal处理","depth":2},{"value":"文件锁","url":"#文件锁","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"7天玩转 Golang 标准库之 os","datePublished":"2024-06-19T15:17:34.000Z","dateModified":"2024-08-06T11:31:15.000Z","description":"在 Golang 的日常开发中，往往要面对各种和操作系统相关的操作，例如文件的读写、环境变量的处理、程序参数的获取等等。Golang 的 os 标准库为我们提供了与操作系统打交道的各类工具，能让这些操作变得更加简洁和简单。基础应用文件的读写操作在进行文件操作时，“读” 和 “写” 是最常见且重...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/Go标准库/ka141a7685toxaw8"}},{"title":"7天玩转 Golang 标准库之 io","date":"2024-06-19T15:17:19.000Z","urlname":"ehoqyhe7wl3ytbqk","is_nav":false,"updated":"2024-08-06T11:32:01.000Z","not_show":false,"description":"在任何语言的开发中，输入/输出 (I/O) 操作都是非常关键的一部分。Golang 提供了 io 和 io/ioutil 标准库，帮助我们进行方便、高效的I/O操作。通过这篇文章，你将了解io库如何提供了对IO原语的基本接口，而io/ioutil库则提供了一些更高级的函数。初级应用读写的基础类...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1159,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Go/Go标准库/ehoqyhe7wl3ytbqk","path":"docs/doc/💻 编程语言/Go/Go标准库/ehoqyhe7wl3ytbqk","filePath":"docs/doc/💻 编程语言/Go/Go标准库/ehoqyhe7wl3ytbqk.md","toc":[{"value":"初级应用","url":"#初级应用","depth":1},{"value":"读写的基础类型","url":"#读写的基础类型","depth":2},{"value":"高效的文件读写","url":"#高效的文件读写","depth":2},{"value":"io库和ioutil库的更多功能","url":"#io库和ioutil库的更多功能","depth":2},{"value":"进阶应用","url":"#进阶应用","depth":1},{"value":"流数据处理","url":"#流数据处理","depth":2},{"value":"更多文件和目录操作","url":"#更多文件和目录操作","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"7天玩转 Golang 标准库之 io","datePublished":"2024-06-19T15:17:19.000Z","dateModified":"2024-08-06T11:32:01.000Z","description":"在任何语言的开发中，输入/输出 (I/O) 操作都是非常关键的一部分。Golang 提供了 io 和 io/ioutil 标准库，帮助我们进行方便、高效的I/O操作。通过这篇文章，你将了解io库如何提供了对IO原语的基本接口，而io/ioutil库则提供了一些更高级的函数。初级应用读写的基础类...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/Go标准库/ehoqyhe7wl3ytbqk"}},{"title":"7天玩转 Golang 标准库之 text/template","date":"2024-06-19T15:17:06.000Z","urlname":"ly3q2gpooe353xn2","is_nav":false,"updated":"2024-08-06T11:32:20.000Z","not_show":false,"description":"在许多编程场景中，我们经常需要把数据按照某种格式进行输出，比如生成HTML页面，或者生成配置文件。这时，我们就需要模板引擎的帮助。幸运的是，Go语言在标准库中就提供了两个强大的模板引擎：text/template和html/template。初级应用text/template库的使用text/...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":909,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Go/Go标准库/ly3q2gpooe353xn2","path":"docs/doc/💻 编程语言/Go/Go标准库/ly3q2gpooe353xn2","filePath":"docs/doc/💻 编程语言/Go/Go标准库/ly3q2gpooe353xn2.md","toc":[{"value":"初级应用","url":"#初级应用-1","depth":1},{"value":"text/template库的使用","url":"#texttemplate库的使用","depth":3},{"value":"html/template库的使用","url":"#htmltemplate库的使用","depth":3},{"value":"进阶应用","url":"#进阶应用-2","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"7天玩转 Golang 标准库之 text/template","datePublished":"2024-06-19T15:17:06.000Z","dateModified":"2024-08-06T11:32:20.000Z","description":"在许多编程场景中，我们经常需要把数据按照某种格式进行输出，比如生成HTML页面，或者生成配置文件。这时，我们就需要模板引擎的帮助。幸运的是，Go语言在标准库中就提供了两个强大的模板引擎：text/template和html/template。初级应用text/template库的使用text/...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/Go标准库/ly3q2gpooe353xn2"}},{"title":"7天玩转 Golang 标准库之 sync","date":"2024-06-19T15:16:50.000Z","urlname":"nvgy48uvwxy19xo7","is_nav":false,"updated":"2024-08-06T11:33:03.000Z","not_show":false,"description":"Go语言作为现代编程语言，其并发编程的优势是有目共睹的。在实际编程中，我们常常需要保证多个goroutine之间的同步，这就需要使用到Go语言的sync标准库。sync库提供了基本的同步原语，例如互斥锁（Mutex）和等待组（WaitGroup），这些都是协调和控制并发执行的重要工具。基础应用...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":892,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Go/Go标准库/nvgy48uvwxy19xo7","path":"docs/doc/💻 编程语言/Go/Go标准库/nvgy48uvwxy19xo7","filePath":"docs/doc/💻 编程语言/Go/Go标准库/nvgy48uvwxy19xo7.md","toc":[{"value":"基础应用","url":"#基础应用-1","depth":1},{"value":"1. 使用Mutex实现互斥","url":"#1-使用mutex实现互斥","depth":3},{"value":"2. 使用WaitGroup等待并发操作结束","url":"#2-使用waitgroup等待并发操作结束","depth":3},{"value":"进阶应用","url":"#进阶应用-3","depth":1},{"value":"全局单例","url":"#全局单例","depth":2},{"value":"条件变量","url":"#条件变量-1","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"7天玩转 Golang 标准库之 sync","datePublished":"2024-06-19T15:16:50.000Z","dateModified":"2024-08-06T11:33:03.000Z","description":"Go语言作为现代编程语言，其并发编程的优势是有目共睹的。在实际编程中，我们常常需要保证多个goroutine之间的同步，这就需要使用到Go语言的sync标准库。sync库提供了基本的同步原语，例如互斥锁（Mutex）和等待组（WaitGroup），这些都是协调和控制并发执行的重要工具。基础应用...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/Go标准库/nvgy48uvwxy19xo7"}},{"title":"Go标准库","date":"2024-06-19T15:16:28.000Z","urlname":"gr6uit1owqpgmuls","is_nav":false,"nav_path":"stl","updated":"2024-06-19T15:16:49.000Z","not_show":false,"description":"---nav_path: stl---","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":0,"minutes":0,"text":"小于一分钟"},"slug":"doc/💻 编程语言/Go/gr6uit1owqpgmuls","path":"docs/doc/💻 编程语言/Go/gr6uit1owqpgmuls","filePath":"docs/doc/💻 编程语言/Go/gr6uit1owqpgmuls.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Go标准库","datePublished":"2024-06-19T15:16:28.000Z","dateModified":"2024-06-19T15:16:49.000Z","description":"---nav_path: stl---","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/gr6uit1owqpgmuls"}},{"title":"前端需要学GraphQL 吗？","date":"2024-06-19T15:15:17.000Z","urlname":"cq9pzn6cr3pnlwb8","is_nav":false,"updated":"2024-06-19T15:15:21.000Z","not_show":false,"description":"什么是GraphQL？GraphQL 是 Facebook 开发的一个数据查询语言，可以让前端开发者更具体地指定他们需要什么数据，从而使数据获取更加高效。GraphQL 是一种数据查询和操作语言，它主要被设计用来作为 API 的请求语言。与传统的 RESTful API 相比，GraphQL ...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1135,"minutes":4,"text":"4 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/cq9pzn6cr3pnlwb8","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/cq9pzn6cr3pnlwb8","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/cq9pzn6cr3pnlwb8.md","toc":[{"value":"什么是GraphQL？","url":"#什么是graphql","depth":1},{"value":"为什么需要GraphQL？","url":"#为什么需要graphql","depth":1},{"value":"Golang如何实现？","url":"#golang如何实现","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"前端需要学GraphQL 吗？","datePublished":"2024-06-19T15:15:17.000Z","dateModified":"2024-06-19T15:15:21.000Z","description":"什么是GraphQL？GraphQL 是 Facebook 开发的一个数据查询语言，可以让前端开发者更具体地指定他们需要什么数据，从而使数据获取更加高效。GraphQL 是一种数据查询和操作语言，它主要被设计用来作为 API 的请求语言。与传统的 RESTful API 相比，GraphQL ...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/cq9pzn6cr3pnlwb8"}},{"title":"ChatGPT为什么使用SSE而不是WebSocket？","date":"2024-06-19T15:15:04.000Z","urlname":"oq3v2462g4htykqr","is_nav":false,"updated":"2024-06-19T15:15:10.000Z","not_show":false,"description":"我在探索ChatGPT的使用过程中，发现了一个有趣的现象：ChatGPT在实现流式返回的时候，选择了SSE（Server-Sent Events），而非WebSocket。那么问题来了：为什么ChatGPT选择了SSE，而不是WebSocket呢。SSE是什么？SSE，全称Server-Sen...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1305,"minutes":4,"text":"4 分钟"},"slug":"doc/🔥 程序员自我修养/十万个为什么💡/oq3v2462g4htykqr","path":"docs/doc/🔥 程序员自我修养/十万个为什么💡/oq3v2462g4htykqr","filePath":"docs/doc/🔥 程序员自我修养/十万个为什么💡/oq3v2462g4htykqr.md","toc":[{"value":"SSE是什么？","url":"#sse是什么","depth":3},{"value":"什么是WebSocket？","url":"#什么是websocket","depth":3},{"value":"SSE与WebSocket的比较","url":"#sse与websocket的比较","depth":3},{"value":"使用Golang和React实践SSE","url":"#使用golang和react实践sse","depth":3},{"value":"总结","url":"#总结-16","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"ChatGPT为什么使用SSE而不是WebSocket？","datePublished":"2024-06-19T15:15:04.000Z","dateModified":"2024-06-19T15:15:10.000Z","description":"我在探索ChatGPT的使用过程中，发现了一个有趣的现象：ChatGPT在实现流式返回的时候，选择了SSE（Server-Sent Events），而非WebSocket。那么问题来了：为什么ChatGPT选择了SSE，而不是WebSocket呢。SSE是什么？SSE，全称Server-Sen...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/十万个为什么💡/oq3v2462g4htykqr"}},{"title":"Go到底能做什么？不能做什么？","date":"2024-06-19T15:14:51.000Z","urlname":"ihwoz00dunyzo09m","is_nav":false,"updated":"2024-08-06T12:32:49.000Z","not_show":false,"description":"首先，让我表达一下我对Golang的喜爱。作为一名科技博主和程序员，我个人非常喜欢Golang，主要有以下几点原因：1、简洁易用：Go语言非常简洁，没有繁杂的语法，读起来非常流畅。同时，它的标准库提供了丰富的功能，可以有效地减少了我们的开发工作。2、高并发：Go语言的并发模型Goroutine...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":996,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Go/🎁 最佳实践/ihwoz00dunyzo09m","path":"docs/doc/💻 编程语言/Go/🎁 最佳实践/ihwoz00dunyzo09m","filePath":"docs/doc/💻 编程语言/Go/🎁 最佳实践/ihwoz00dunyzo09m.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Go到底能做什么？不能做什么？","datePublished":"2024-06-19T15:14:51.000Z","dateModified":"2024-08-06T12:32:49.000Z","description":"首先，让我表达一下我对Golang的喜爱。作为一名科技博主和程序员，我个人非常喜欢Golang，主要有以下几点原因：1、简洁易用：Go语言非常简洁，没有繁杂的语法，读起来非常流畅。同时，它的标准库提供了丰富的功能，可以有效地减少了我们的开发工作。2、高并发：Go语言的并发模型Goroutine...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🎁 最佳实践/ihwoz00dunyzo09m"}},{"title":"节流和防抖知道吗？","date":"2024-06-19T15:13:57.000Z","urlname":"kwwca84uhgta9e5s","is_nav":false,"updated":"2024-06-19T15:14:08.000Z","not_show":false,"description":"面试官:节流与防抖，说说两者各自适用场景？回答：面试官，在前端开发中，节流（Throttle）和防抖（Debounce）是两种常用的优化高频率执行JavaScript代码的技术。我将分别阐述它们的概念、适用场景，并给出代码示例。首先解释一下防抖（Debounce）：防抖是指在事件被触发后延迟一...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1705587753359-2343c689-b7a2-460d-85a6-3d7f701c3906.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":464,"minutes":2,"text":"2 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/kwwca84uhgta9e5s","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/kwwca84uhgta9e5s","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/kwwca84uhgta9e5s.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"节流和防抖知道吗？","datePublished":"2024-06-19T15:13:57.000Z","dateModified":"2024-06-19T15:14:08.000Z","description":"面试官:节流与防抖，说说两者各自适用场景？回答：面试官，在前端开发中，节流（Throttle）和防抖（Debounce）是两种常用的优化高频率执行JavaScript代码的技术。我将分别阐述它们的概念、适用场景，并给出代码示例。首先解释一下防抖（Debounce）：防抖是指在事件被触发后延迟一...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/kwwca84uhgta9e5s"}},{"title":"前端全栈必须会的Prisma！","date":"2024-06-19T15:13:23.000Z","urlname":"mc7nvtq4c2ds0wsg","is_nav":false,"updated":"2024-06-19T15:13:40.000Z","not_show":false,"description":"什么是Prisma？在这个快速迭代的数字时代，开发者们始终在寻找能够提高数据库操作效率和准确性的工具。Prisma，应运而生。Prisma最初是作为一款图形QL数据库工具诞生的，随着时间的推移，它演变成了一个强大的数据库工具集，旨在解决传统ORM工具中存在的性能瓶颈和复杂性问题。与传统的ORM...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1718810004812-dd50df6a-78fb-429c-ad02-12dffca473a8.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1144,"minutes":4,"text":"4 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/mc7nvtq4c2ds0wsg","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/mc7nvtq4c2ds0wsg","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/mc7nvtq4c2ds0wsg.md","toc":[{"value":"什么是Prisma？","url":"#什么是prisma","depth":1},{"value":"上手","url":"#上手","depth":1},{"value":"依赖","url":"#依赖","depth":2},{"value":"连接数据库","url":"#连接数据库-1","depth":2},{"value":"模型映射","url":"#模型映射","depth":2},{"value":"CRUD","url":"#crud","depth":2},{"value":"感受","url":"#感受","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"前端全栈必须会的Prisma！","datePublished":"2024-06-19T15:13:23.000Z","dateModified":"2024-06-19T15:13:40.000Z","description":"什么是Prisma？在这个快速迭代的数字时代，开发者们始终在寻找能够提高数据库操作效率和准确性的工具。Prisma，应运而生。Prisma最初是作为一款图形QL数据库工具诞生的，随着时间的推移，它演变成了一个强大的数据库工具集，旨在解决传统ORM工具中存在的性能瓶颈和复杂性问题。与传统的ORM...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/mc7nvtq4c2ds0wsg"}},{"title":"react-use-form的onSubmit没有被触发","date":"2024-06-19T15:12:59.000Z","urlname":"ria4g4alm00t95pc","is_nav":false,"updated":"2024-06-19T15:13:08.000Z","not_show":false,"description":"背景今天在写Nextjs代码的时候，发现一个问题，我使用react-use-form的表单，点击提交按钮的时候：onSubmit没有被触发！！于是排查···源代码如下：\"use client\"  import { AddLinkRequest } from '@/app/api/link/ad...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1710676279519-3f43cddc-21c7-43de-acf1-e48fd6818ce0.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":748,"minutes":2,"text":"2 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/ria4g4alm00t95pc","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/ria4g4alm00t95pc","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/ria4g4alm00t95pc.md","toc":[{"value":"背景","url":"#背景-2","depth":1},{"value":"解决","url":"#解决-1","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"react-use-form的onSubmit没有被触发","datePublished":"2024-06-19T15:12:59.000Z","dateModified":"2024-06-19T15:13:08.000Z","description":"背景今天在写Nextjs代码的时候，发现一个问题，我使用react-use-form的表单，点击提交按钮的时候：onSubmit没有被触发！！于是排查···源代码如下：\"use client\"  import { AddLinkRequest } from '@/app/api/link/ad...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/ria4g4alm00t95pc"}},{"title":"6.16 硕博就业率1/3，你不干有的是人干","date":"2024-06-19T15:12:06.000Z","urlname":"pg7y8w44ytvs2iz8","is_nav":false,"updated":"2024-06-19T15:12:19.000Z","not_show":false,"description":"大家好，我是白露啊。今天，我看到智联招聘发布了一组数据，今年普本(注非双一流本科院校)院校的硕博毕业生offer获得率为33.2%,较去年下降17个百分点,同时也低于普本院校本科毕业生的offer获得率43.9%。大家没看错，研究生就业率居然比本科还低！这可是前所未有的现象。报告显示，应届生选...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1718627600352-e915c883-738d-45ea-b25c-4ea3846e1f6a.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":974,"minutes":3,"text":"3 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/pg7y8w44ytvs2iz8","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/pg7y8w44ytvs2iz8","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/pg7y8w44ytvs2iz8.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.16 硕博就业率1/3，你不干有的是人干","datePublished":"2024-06-19T15:12:06.000Z","dateModified":"2024-06-19T15:12:19.000Z","description":"大家好，我是白露啊。今天，我看到智联招聘发布了一组数据，今年普本(注非双一流本科院校)院校的硕博毕业生offer获得率为33.2%,较去年下降17个百分点,同时也低于普本院校本科毕业生的offer获得率43.9%。大家没看错，研究生就业率居然比本科还低！这可是前所未有的现象。报告显示，应届生选...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/pg7y8w44ytvs2iz8"}},{"title":"6.20 计算机行业会成为下一个土木吗？","date":"2024-06-19T15:11:32.000Z","urlname":"fdh0qxhfnqh2cqe6","is_nav":false,"updated":"2024-06-19T15:11:52.000Z","not_show":false,"description":"大家好，我是白露。计算机行业会不会成为下一个土木工程？这个问题不仅关乎行业发展，还关系到下一代从业者的未来职业规划。我分享一位网友的经历，希望对大家有所启发。中国互联网的黄金十年我与计算机的缘分始于2012年高考后的专业选择。那个时候，最火的专业是金融、建筑、土木和医学。这些专业无论分数还是就...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1057,"minutes":4,"text":"4 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/fdh0qxhfnqh2cqe6","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/fdh0qxhfnqh2cqe6","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/fdh0qxhfnqh2cqe6.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.20 计算机行业会成为下一个土木吗？","datePublished":"2024-06-19T15:11:32.000Z","dateModified":"2024-06-19T15:11:52.000Z","description":"大家好，我是白露。计算机行业会不会成为下一个土木工程？这个问题不仅关乎行业发展，还关系到下一代从业者的未来职业规划。我分享一位网友的经历，希望对大家有所启发。中国互联网的黄金十年我与计算机的缘分始于2012年高考后的专业选择。那个时候，最火的专业是金融、建筑、土木和医学。这些专业无论分数还是就...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/fdh0qxhfnqh2cqe6"}},{"title":"6.15 工作能力强，其实做好四个方面就够了","date":"2024-06-19T15:11:11.000Z","urlname":"gpcprixm66vwcedl","is_nav":false,"updated":"2024-06-19T15:11:32.000Z","not_show":false,"description":"大家好，我是白露啊。职场上，有的人工作两三年之后事业一路飙升，工资翻番涨；而有的人工作了四五年还在原地踏步，职位和薪水毫无变化。互联网大厂里，员工之间竞争激烈，只想着拿基本工资的人，事业上肯定不会有起色。那么，什么样的人才能实现月薪好几万的梦想呢？今天，我给大家分享四个职场心得，这些心得能帮助...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1331,"minutes":4,"text":"4 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/gpcprixm66vwcedl","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/gpcprixm66vwcedl","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/gpcprixm66vwcedl.md","toc":[{"value":"一、明确目标，知行合一","url":"#一明确目标知行合一","depth":3},{"value":"二、积极学习，持续提升","url":"#二积极学习持续提升","depth":3},{"value":"三、提升沟通，优化合作","url":"#三提升沟通优化合作","depth":3},{"value":"四、主动承担，展现价值","url":"#四主动承担展现价值","depth":3},{"value":"总结","url":"#总结-23","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.15 工作能力强，其实做好四个方面就够了","datePublished":"2024-06-19T15:11:11.000Z","dateModified":"2024-06-19T15:11:32.000Z","description":"大家好，我是白露啊。职场上，有的人工作两三年之后事业一路飙升，工资翻番涨；而有的人工作了四五年还在原地踏步，职位和薪水毫无变化。互联网大厂里，员工之间竞争激烈，只想着拿基本工资的人，事业上肯定不会有起色。那么，什么样的人才能实现月薪好几万的梦想呢？今天，我给大家分享四个职场心得，这些心得能帮助...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/gpcprixm66vwcedl"}},{"title":"6.14 清华毕业十年后，一半无娃，压力很大","date":"2024-06-19T15:10:48.000Z","urlname":"loirov7wpifevglz","is_nav":false,"updated":"2024-06-19T15:11:09.000Z","not_show":false,"description":"大家好，我是白露啊。今天，我们来聊一聊学历和幸福感之间的关系。这个话题总是让人百感交集，不少人觉得学历高就能过上幸福的好日子，但事实真的如此简单吗？在常规的认知里，考上清华大学的人，在同龄人里肯定是极为优秀的了。正常来说毕业后工作是不愁的，成为工作所在地的中产者问题不大。实际情况究竟怎样呢？在...","cover":"https://cdn.nlark.com/yuque/0/2024/jpeg/22382235/1718720267411-d03e3beb-be11-4e0a-b982-b9b293a272d6.jpeg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":924,"minutes":3,"text":"3 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/loirov7wpifevglz","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/loirov7wpifevglz","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/loirov7wpifevglz.md","toc":[{"value":"一半人无娃","url":"#一半人无娃","depth":1},{"value":"74的人觉得压力无处不在","url":"#74的人觉得压力无处不在","depth":1},{"value":"学历是敲门砖，但不是幸福的保证","url":"#学历是敲门砖但不是幸福的保证","depth":3},{"value":"幸福感的来源","url":"#幸福感的来源","depth":3},{"value":"","url":"#-18","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.14 清华毕业十年后，一半无娃，压力很大","datePublished":"2024-06-19T15:10:48.000Z","dateModified":"2024-06-19T15:11:09.000Z","description":"大家好，我是白露啊。今天，我们来聊一聊学历和幸福感之间的关系。这个话题总是让人百感交集，不少人觉得学历高就能过上幸福的好日子，但事实真的如此简单吗？在常规的认知里，考上清华大学的人，在同龄人里肯定是极为优秀的了。正常来说毕业后工作是不愁的，成为工作所在地的中产者问题不大。实际情况究竟怎样呢？在...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/loirov7wpifevglz"}},{"title":"6.19 西电毕业生的迷茫：二战考研还是接受调剂？","date":"2024-06-19T15:10:03.000Z","urlname":"yzihdzv9ytpzrt8w","is_nav":false,"updated":"2024-06-19T15:10:45.000Z","not_show":false,"description":"今天在网上看到一位兄弟的烦恼，忍不住想和大家分享一下。他本科毕业于西电，去年目标北大软微，结果总分差了几分，今年调剂到了中国航天科技集团第五研究院西安分院，也就是504所。Now他在纠结，稳稳地拿着504所那一份稳定的银行路，还是二战再搏一搏。背景介绍：本科西电，去年12月应届考研，成绩是36...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1718723069494-cb9026ea-92c8-409c-b5a5-6c8fde8ba770.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":709,"minutes":2,"text":"2 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/yzihdzv9ytpzrt8w","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/yzihdzv9ytpzrt8w","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/yzihdzv9ytpzrt8w.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.19 西电毕业生的迷茫：二战考研还是接受调剂？","datePublished":"2024-06-19T15:10:03.000Z","dateModified":"2024-06-19T15:10:45.000Z","description":"今天在网上看到一位兄弟的烦恼，忍不住想和大家分享一下。他本科毕业于西电，去年目标北大软微，结果总分差了几分，今年调剂到了中国航天科技集团第五研究院西安分院，也就是504所。Now他在纠结，稳稳地拿着504所那一份稳定的银行路，还是二战再搏一搏。背景介绍：本科西电，去年12月应届考研，成绩是36...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/yzihdzv9ytpzrt8w"}},{"title":"外部链接为什么可以影响SEO？","date":"2024-06-17T03:19:05.000Z","urlname":"sf3un5ht5ehuegqh","is_nav":false,"updated":"2024-06-17T03:19:23.000Z","not_show":false,"description":"外部链接,也称为反向链接或入站链接,是指从其他网站指向你网站的链接。外部链接对搜索引擎排名有重大影响,原因如下:1. 链接是一种\"投票\"当一个网站链接到你的网站时,搜索引擎将其视为一种认可或\"投票\"。它表明你的内容有价值,值得链接。搜索引擎使用这些\"投票\"来评估网页的重要性和权威性。2. 链接...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":555,"minutes":2,"text":"2 分钟"},"slug":"doc/🔥 程序员自我修养/个人建站 🤖/sf3un5ht5ehuegqh","path":"docs/doc/🔥 程序员自我修养/个人建站 🤖/sf3un5ht5ehuegqh","filePath":"docs/doc/🔥 程序员自我修养/个人建站 🤖/sf3un5ht5ehuegqh.md","toc":[{"value":"1. 链接是一种\"投票\"","url":"#1-链接是一种投票","depth":3},{"value":"2. 链接传递PageRank","url":"#2-链接传递pagerank","depth":3},{"value":"3. 链接帮助发现新页面","url":"#3-链接帮助发现新页面","depth":3},{"value":"4. 链接提供上下文","url":"#4-链接提供上下文","depth":3},{"value":"5. 链接的质量很重要","url":"#5-链接的质量很重要","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"外部链接为什么可以影响SEO？","datePublished":"2024-06-17T03:19:05.000Z","dateModified":"2024-06-17T03:19:23.000Z","description":"外部链接,也称为反向链接或入站链接,是指从其他网站指向你网站的链接。外部链接对搜索引擎排名有重大影响,原因如下:1. 链接是一种\"投票\"当一个网站链接到你的网站时,搜索引擎将其视为一种认可或\"投票\"。它表明你的内容有价值,值得链接。搜索引擎使用这些\"投票\"来评估网页的重要性和权威性。2. 链接...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/个人建站 🤖/sf3un5ht5ehuegqh"}},{"title":"初识SEO","date":"2024-06-17T03:02:11.000Z","urlname":"yruzbxv5gtss1avi","is_nav":false,"updated":"2024-06-17T03:09:59.000Z","not_show":false,"description":"第一阶段：SEO基础1.1 什么是SEO？SEO是Search Engine Optimization（搜索引擎优化）的缩写。它是一组用于提高网站在搜索引擎自然搜索结果中的可见性的实践。SEO的目标是提高网站在搜索结果页面（SERP）上的排名，从而增加来自搜索引擎的有机（非付费）流量。SEO对...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3461,"minutes":12,"text":"12 分钟"},"slug":"doc/🔥 程序员自我修养/个人建站 🤖/yruzbxv5gtss1avi","path":"docs/doc/🔥 程序员自我修养/个人建站 🤖/yruzbxv5gtss1avi","filePath":"docs/doc/🔥 程序员自我修养/个人建站 🤖/yruzbxv5gtss1avi.md","toc":[{"value":"第一阶段：SEO基础","url":"#第一阶段seo基础","depth":2},{"value":"1.1 什么是SEO？","url":"#11-什么是seo","depth":3},{"value":"1.2 搜索引擎的工作原理","url":"#12-搜索引擎的工作原理","depth":3},{"value":"1.3 关键词研究","url":"#13-关键词研究","depth":3},{"value":"1.3.1 关键词的类型","url":"#131-关键词的类型","depth":4},{"value":"1.3.2 如何选择合适的关键词","url":"#132-如何选择合适的关键词","depth":4},{"value":"1.3.3 使用工具进行关键词研究","url":"#133-使用工具进行关键词研究","depth":4},{"value":"1.4 页面优化（On-page SEO）","url":"#14-页面优化on-page-seo","depth":3},{"value":"1.4.1 标题标签和元描述","url":"#141-标题标签和元描述","depth":4},{"value":"1.4.2 URL结构","url":"#142-url结构","depth":4},{"value":"1.4.3 内部链接","url":"#143-内部链接","depth":4},{"value":"1.4.4 内容优化","url":"#144-内容优化","depth":4},{"value":"第二阶段：高级SEO","url":"#第二阶段高级seo","depth":2},{"value":"2.1 技术SEO","url":"#21-技术seo","depth":3},{"value":"2.1.1 网站速度优化","url":"#211-网站速度优化","depth":4},{"value":"2.1.2 移动友好性","url":"#212-移动友好性","depth":4},{"value":"2.1.3 结构化数据","url":"#213-结构化数据","depth":4},{"value":"2.2 内容策略","url":"#22-内容策略","depth":3},{"value":"2.2.1 创建高质量内容","url":"#221-创建高质量内容","depth":4},{"value":"2.2.2 内容更新和维护","url":"#222-内容更新和维护","depth":4},{"value":"2.3 本地SEO","url":"#23-本地seo","depth":3},{"value":"2.3.1 Google My Business","url":"#231-google-my-business","depth":4},{"value":"2.3.2 本地关键词优化","url":"#232-本地关键词优化","depth":4},{"value":"第三阶段：SEO工具","url":"#第三阶段seo工具","depth":2},{"value":"3.1 Google Analytics","url":"#31-google-analytics","depth":3},{"value":"3.1.1 设置和使用","url":"#311-设置和使用","depth":4},{"value":"3.1.2 关键指标分析","url":"#312-关键指标分析","depth":4},{"value":"3.2 Google Search Console","url":"#32-google-search-console","depth":3},{"value":"3.2.1 设置和使用","url":"#321-设置和使用","depth":4},{"value":"3.2.2 监控和优化网站表现","url":"#322-监控和优化网站表现","depth":4},{"value":"3.3 其他工具","url":"#33-其他工具","depth":3},{"value":"3.3.1 Ahrefs","url":"#331-ahrefs","depth":4},{"value":"3.3.2 SEMrush","url":"#332-semrush","depth":4},{"value":"最后","url":"#最后-1","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"初识SEO","datePublished":"2024-06-17T03:02:11.000Z","dateModified":"2024-06-17T03:09:59.000Z","description":"第一阶段：SEO基础1.1 什么是SEO？SEO是Search Engine Optimization（搜索引擎优化）的缩写。它是一组用于提高网站在搜索引擎自然搜索结果中的可见性的实践。SEO的目标是提高网站在搜索结果页面（SERP）上的排名，从而增加来自搜索引擎的有机（非付费）流量。SEO对...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/个人建站 🤖/yruzbxv5gtss1avi"}},{"title":"13、插件发布","date":"2024-06-15T13:25:55.000Z","urlname":"eoy7yl53cf9t7mpp","is_nav":false,"updated":"2024-06-21T09:02:05.000Z","not_show":false,"description":"本文详细介绍了如何在完成插件开发和测试后，将其发布到 Chrome Web Store 上的步骤，包括创建账号、打包上传、填写信息及更新插件等内容。","tags":[],"keywords":"插件发布, Chrome Web Store, 插件开发, 打包插件, 发布插件","authors":["whitedew"],"type":"Post","readingTime":{"words":1051,"minutes":4,"text":"4 分钟"},"slug":"doc/🧰 实践项目/ChromePlugin项目实战/eoy7yl53cf9t7mpp","path":"docs/doc/🧰 实践项目/ChromePlugin项目实战/eoy7yl53cf9t7mpp","filePath":"docs/doc/🧰 实践项目/ChromePlugin项目实战/eoy7yl53cf9t7mpp.md","toc":[{"value":"创建 Chrome Web Store 账号","url":"#创建-chrome-web-store-账号","depth":2},{"value":"打包插件","url":"#打包插件","depth":2},{"value":"上传插件","url":"#上传插件","depth":2},{"value":"填写插件信息","url":"#填写插件信息","depth":2},{"value":"发布和更新插件","url":"#发布和更新插件","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"13、插件发布","datePublished":"2024-06-15T13:25:55.000Z","dateModified":"2024-06-21T09:02:05.000Z","description":"本文详细介绍了如何在完成插件开发和测试后，将其发布到 Chrome Web Store 上的步骤，包括创建账号、打包上传、填写信息及更新插件等内容。","url":"https://offernow.cn/docs/doc/🧰 实践项目/ChromePlugin项目实战/eoy7yl53cf9t7mpp"}},{"title":"12、国际化支持","date":"2024-06-15T13:25:25.000Z","urlname":"xbzsvccoy347guga","is_nav":false,"updated":"2024-06-21T09:05:03.000Z","not_show":false,"description":"本章节详细介绍如何在Chrome插件中添加国际化支持，通过编写国际化文件和示例演示，掌握多语言插件开发的基础知识和技术实现。","tags":[],"keywords":"Chrome插件, 国际化支持, 多语言开发, messages.json, 插件国际化","authors":["whitedew"],"type":"Post","readingTime":{"words":1102,"minutes":4,"text":"4 分钟"},"slug":"doc/🧰 实践项目/ChromePlugin项目实战/xbzsvccoy347guga","path":"docs/doc/🧰 实践项目/ChromePlugin项目实战/xbzsvccoy347guga","filePath":"docs/doc/🧰 实践项目/ChromePlugin项目实战/xbzsvccoy347guga.md","toc":[{"value":"1. 引言","url":"#1-引言","depth":2},{"value":"2. 添加多语言支持","url":"#2-添加多语言支持","depth":2},{"value":"2.1 创建国际化目录和文件","url":"#21-创建国际化目录和文件","depth":3},{"value":"2.2 编写 messages.json 文件","url":"#22-编写-messagesjson-文件","depth":3},{"value":"英文版本 messages.json","url":"#英文版本-messagesjson","depth":4},{"value":"中文版本 messages.json","url":"#中文版本-messagesjson","depth":4},{"value":"3. 修改 manifest.json 文件","url":"#3-修改-manifestjson-文件","depth":2},{"value":"4. 在 HTML 中使用国际化内容","url":"#4-在-html-中使用国际化内容","depth":2},{"value":"4.1 更新 popup.html","url":"#41-更新-popuphtml","depth":3},{"value":"4.2 更新 popup.js","url":"#42-更新-popupjs","depth":3},{"value":"5. 示例：添加中文和英文支持","url":"#5-示例添加中文和英文支持","depth":2},{"value":"5.1 测试中文支持","url":"#51-测试中文支持","depth":3},{"value":"5.2 测试英文支持","url":"#52-测试英文支持","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"12、国际化支持","datePublished":"2024-06-15T13:25:25.000Z","dateModified":"2024-06-21T09:05:03.000Z","description":"本章节详细介绍如何在Chrome插件中添加国际化支持，通过编写国际化文件和示例演示，掌握多语言插件开发的基础知识和技术实现。","url":"https://offernow.cn/docs/doc/🧰 实践项目/ChromePlugin项目实战/xbzsvccoy347guga"}},{"title":"11、调试与测试","date":"2024-06-15T13:24:58.000Z","urlname":"zbeb9457iikko9uw","is_nav":false,"updated":"2024-06-21T09:05:59.000Z","not_show":false,"description":"keywords: 插件调试, 自动化测试, Chrome开发者工具, 常见错误, Selenium测试在完成插件开发后，调试和测试是确保插件稳定性和功能完整性的重要步骤。本章将详细讲解如何使用 Chrome 开发者工具进行调试，并介绍一些常见的错误及其解决方法，最后还会指导你编写自动化测试脚...","tags":[],"keywords":"插件调试, 自动化测试, Chrome开发者工具, 常见错误, Selenium测试","authors":["whitedew"],"type":"Post","readingTime":{"words":1022,"minutes":3,"text":"3 分钟"},"slug":"doc/🧰 实践项目/ChromePlugin项目实战/zbeb9457iikko9uw","path":"docs/doc/🧰 实践项目/ChromePlugin项目实战/zbeb9457iikko9uw","filePath":"docs/doc/🧰 实践项目/ChromePlugin项目实战/zbeb9457iikko9uw.md","toc":[{"value":"11.1 使用 Chrome 开发者工具进行调试","url":"#111-使用-chrome-开发者工具进行调试","depth":2},{"value":"11.1.1 打开 Chrome 开发者工具","url":"#1111-打开-chrome-开发者工具","depth":3},{"value":"11.1.2 调试 Popup 页面","url":"#1112-调试-popup-页面","depth":3},{"value":"11.1.3 调试 Content Script","url":"#1113-调试-content-script","depth":3},{"value":"11.2 常见的错误和解决方法","url":"#112-常见的错误和解决方法","depth":2},{"value":"11.2.1 权限错误","url":"#1121-权限错误","depth":3},{"value":"11.2.2 网络请求失败","url":"#1122-网络请求失败","depth":3},{"value":"11.3 编写自动化测试脚本","url":"#113-编写自动化测试脚本","depth":2},{"value":"11.3.1 安装 Selenium","url":"#1131-安装-selenium","depth":3},{"value":"11.3.2 编写测试脚本","url":"#1132-编写测试脚本","depth":3},{"value":"11.3.3 运行测试脚本","url":"#1133-运行测试脚本","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"11、调试与测试","datePublished":"2024-06-15T13:24:58.000Z","dateModified":"2024-06-21T09:05:59.000Z","description":"keywords: 插件调试, 自动化测试, Chrome开发者工具, 常见错误, Selenium测试在完成插件开发后，调试和测试是确保插件稳定性和功能完整性的重要步骤。本章将详细讲解如何使用 Chrome 开发者工具进行调试，并介绍一些常见的错误及其解决方法，最后还会指导你编写自动化测试脚...","url":"https://offernow.cn/docs/doc/🧰 实践项目/ChromePlugin项目实战/zbeb9457iikko9uw"}},{"title":"10、性能优化","date":"2024-06-15T13:24:32.000Z","urlname":"dd58xbizumpbgilb","is_nav":false,"updated":"2024-06-21T09:01:30.000Z","not_show":false,"description":"通过性能优化提升Chrome插件的加载速度、减少内存占用、优化API调用，为用户提供最佳体验。掌握文件压缩、延迟加载、缓存机制等关键技术。","tags":[],"keywords":"性能优化, Chrome插件, 加载速度, 内存占用, API调用","authors":["whitedew"],"type":"Post","readingTime":{"words":787,"minutes":3,"text":"3 分钟"},"slug":"doc/🧰 实践项目/ChromePlugin项目实战/dd58xbizumpbgilb","path":"docs/doc/🧰 实践项目/ChromePlugin项目实战/dd58xbizumpbgilb","filePath":"docs/doc/🧰 实践项目/ChromePlugin项目实战/dd58xbizumpbgilb.md","toc":[{"value":"提升插件加载速度","url":"#提升插件加载速度","depth":2},{"value":"优化文件加载","url":"#优化文件加载","depth":3},{"value":"使用缓存","url":"#使用缓存-1","depth":3},{"value":"减少内存占用","url":"#减少内存占用","depth":2},{"value":"清理未使用的变量和事件监听器","url":"#清理未使用的变量和事件监听器","depth":3},{"value":"使用合适的数据结构","url":"#使用合适的数据结构","depth":3},{"value":"优化 API 调用","url":"#优化-api-调用","depth":2},{"value":"减少不必要的 API 调用","url":"#减少不必要的-api-调用","depth":3},{"value":"使用批量请求","url":"#使用批量请求","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"10、性能优化","datePublished":"2024-06-15T13:24:32.000Z","dateModified":"2024-06-21T09:01:30.000Z","description":"通过性能优化提升Chrome插件的加载速度、减少内存占用、优化API调用，为用户提供最佳体验。掌握文件压缩、延迟加载、缓存机制等关键技术。","url":"https://offernow.cn/docs/doc/🧰 实践项目/ChromePlugin项目实战/dd58xbizumpbgilb"}},{"title":"9、界面优化与用户交互","date":"2024-06-15T13:24:00.000Z","urlname":"dpmrx7kbh9a840er","is_nav":false,"updated":"2024-06-21T09:01:48.000Z","not_show":false,"description":"本章介绍了如何优化插件的用户界面，增强用户交互体验。内容涵盖改进Popup界面、添加多语言支持和实现用户设置选项，提升插件的美观度和易用性。","tags":[],"keywords":"插件优化, 用户界面, 用户交互, 多语言支持, 用户设置","authors":["whitedew"],"type":"Post","readingTime":{"words":758,"minutes":3,"text":"3 分钟"},"slug":"doc/🧰 实践项目/ChromePlugin项目实战/dpmrx7kbh9a840er","path":"docs/doc/🧰 实践项目/ChromePlugin项目实战/dpmrx7kbh9a840er","filePath":"docs/doc/🧰 实践项目/ChromePlugin项目实战/dpmrx7kbh9a840er.md","toc":[{"value":"改进 Popup 界面","url":"#改进-popup-界面","depth":2},{"value":"创建改进后的 popup.html","url":"#创建改进后的-popuphtml","depth":3},{"value":"编写 popup.css","url":"#编写-popupcss","depth":3},{"value":"添加多语言支持","url":"#添加多语言支持","depth":2},{"value":"创建 locales/en/messages.json","url":"#创建-localesenmessagesjson","depth":3},{"value":"创建 locales/zh/messages.json","url":"#创建-localeszhmessagesjson","depth":3},{"value":"修改 manifest.json 以支持多语言","url":"#修改-manifestjson-以支持多语言","depth":3},{"value":"在 popup.html 中使用国际化消息","url":"#在-popuphtml-中使用国际化消息","depth":3},{"value":"在 popup.js 中加载国际化消息","url":"#在-popupjs-中加载国际化消息","depth":3},{"value":"实现用户设置选项","url":"#实现用户设置选项","depth":2},{"value":"创建 settings.html","url":"#创建-settingshtml","depth":3},{"value":"编写 settings.js","url":"#编写-settingsjs","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"9、界面优化与用户交互","datePublished":"2024-06-15T13:24:00.000Z","dateModified":"2024-06-21T09:01:48.000Z","description":"本章介绍了如何优化插件的用户界面，增强用户交互体验。内容涵盖改进Popup界面、添加多语言支持和实现用户设置选项，提升插件的美观度和易用性。","url":"https://offernow.cn/docs/doc/🧰 实践项目/ChromePlugin项目实战/dpmrx7kbh9a840er"}},{"title":"8、数据存储与同步","date":"2024-06-15T13:23:41.000Z","urlname":"zid22mlibhcghi01","is_nav":false,"updated":"2024-06-23T12:40:13.000Z","not_show":false,"description":"keywords: 数据存储, 同步, Chrome存储API, 插件开发, 历史记录在插件开发过程中，数据存储和同步是一个非常重要的功能。用户需要保存他们的翻译记录和查词记录，以便将来参考。这一章将详细介绍如何使用 Chrome 存储 API 来实现这一功能。8.1 使用 Chrome 存储...","tags":[],"keywords":"数据存储, 同步, Chrome存储API, 插件开发, 历史记录","authors":["whitedew"],"type":"Post","readingTime":{"words":806,"minutes":3,"text":"3 分钟"},"slug":"doc/🧰 实践项目/ChromePlugin项目实战/zid22mlibhcghi01","path":"docs/doc/🧰 实践项目/ChromePlugin项目实战/zid22mlibhcghi01","filePath":"docs/doc/🧰 实践项目/ChromePlugin项目实战/zid22mlibhcghi01.md","toc":[{"value":"8.1 使用 Chrome 存储 API","url":"#81-使用-chrome-存储-api","depth":2},{"value":"8.1.1 存储 API 的基本使用","url":"#811-存储-api-的基本使用","depth":3},{"value":"8.1.2 示例：保存和展示历史记录","url":"#812-示例保存和展示历史记录","depth":3},{"value":"8.2 保存用户翻译和查词记录","url":"#82-保存用户翻译和查词记录","depth":2},{"value":"8.3 清理和同步数据","url":"#83-清理和同步数据","depth":2},{"value":"8.4 小结","url":"#84-小结","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"8、数据存储与同步","datePublished":"2024-06-15T13:23:41.000Z","dateModified":"2024-06-23T12:40:13.000Z","description":"keywords: 数据存储, 同步, Chrome存储API, 插件开发, 历史记录在插件开发过程中，数据存储和同步是一个非常重要的功能。用户需要保存他们的翻译记录和查词记录，以便将来参考。这一章将详细介绍如何使用 Chrome 存储 API 来实现这一功能。8.1 使用 Chrome 存储...","url":"https://offernow.cn/docs/doc/🧰 实践项目/ChromePlugin项目实战/zid22mlibhcghi01"}},{"title":"7、词典功能实现","date":"2024-06-15T13:23:23.000Z","urlname":"vtsebpvpbg1cymg5","is_nav":false,"updated":"2024-06-23T12:28:58.000Z","not_show":false,"description":"本章介绍如何为翻译插件增加词典功能，包括选择Merriam-Webster API、调用API以及在插件中显示词典解释结果的详细步骤。","tags":[],"keywords":"翻译插件, 词典功能, Merriam-Webster API, 前端开发, 插件开发, API调用","authors":["whitedew"],"type":"Post","readingTime":{"words":1052,"minutes":4,"text":"4 分钟"},"slug":"doc/🧰 实践项目/ChromePlugin项目实战/vtsebpvpbg1cymg5","path":"docs/doc/🧰 实践项目/ChromePlugin项目实战/vtsebpvpbg1cymg5","filePath":"docs/doc/🧰 实践项目/ChromePlugin项目实战/vtsebpvpbg1cymg5.md","toc":[{"value":"选择词典 API","url":"#选择词典-api","depth":2},{"value":"获取 Merriam-Webster API Key","url":"#获取-merriam-webster-api-key","depth":3},{"value":"调用词典 API","url":"#调用词典-api","depth":2},{"value":"更新 content.js","url":"#更新-contentjs","depth":3},{"value":"显示词典解释结果","url":"#显示词典解释结果","depth":2},{"value":"更新 popup.js","url":"#更新-popupjs","depth":3},{"value":"更新 popup.html","url":"#更新-popuphtml","depth":3},{"value":"完整示例","url":"#完整示例","depth":2},{"value":"总结","url":"#总结-19","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"7、词典功能实现","datePublished":"2024-06-15T13:23:23.000Z","dateModified":"2024-06-23T12:28:58.000Z","description":"本章介绍如何为翻译插件增加词典功能，包括选择Merriam-Webster API、调用API以及在插件中显示词典解释结果的详细步骤。","url":"https://offernow.cn/docs/doc/🧰 实践项目/ChromePlugin项目实战/vtsebpvpbg1cymg5"}},{"title":"6、调用翻译 API","date":"2024-06-15T13:22:57.000Z","urlname":"csxtdf0gdbfudqg7","is_nav":false,"updated":"2024-06-23T12:37:28.000Z","not_show":false,"description":"学习如何在 Chrome 插件中选择并设置翻译 API，使用内容脚本调用 API，显示翻译结果。包含 Google Translate 和其他免费翻译 API 的详细步骤。","tags":[],"keywords":"翻译 API，Chrome 插件，Google Translate，API 调用，翻译功能","authors":["whitedew"],"type":"Post","readingTime":{"words":774,"minutes":3,"text":"3 分钟"},"slug":"doc/🧰 实践项目/ChromePlugin项目实战/csxtdf0gdbfudqg7","path":"docs/doc/🧰 实践项目/ChromePlugin项目实战/csxtdf0gdbfudqg7","filePath":"docs/doc/🧰 实践项目/ChromePlugin项目实战/csxtdf0gdbfudqg7.md","toc":[{"value":"6.1 选择合适的翻译 API","url":"#61-选择合适的翻译-api","depth":2},{"value":"6.1.1 Google Translate API","url":"#611-google-translate-api","depth":3},{"value":"6.1.2 免费翻译 API","url":"#612-免费翻译-api","depth":3},{"value":"6.2 设置 API 访问权限","url":"#62-设置-api-访问权限","depth":2},{"value":"6.2.1 获取 API Key","url":"#621-获取-api-key","depth":3},{"value":"6.2.2 配置 API Key","url":"#622-配置-api-key","depth":3},{"value":"6.3 使用内容脚本调用翻译 API","url":"#63-使用内容脚本调用翻译-api","depth":2},{"value":"6.3.1 创建翻译函数","url":"#631-创建翻译函数","depth":3},{"value":"6.3.2 调用翻译函数","url":"#632-调用翻译函数","depth":3},{"value":"6.4 显示翻译结果","url":"#64-显示翻译结果","depth":2},{"value":"6.4.1 创建提示框样式","url":"#641-创建提示框样式","depth":3},{"value":"6.4.2 在页面上显示提示框","url":"#642-在页面上显示提示框","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6、调用翻译 API","datePublished":"2024-06-15T13:22:57.000Z","dateModified":"2024-06-23T12:37:28.000Z","description":"学习如何在 Chrome 插件中选择并设置翻译 API，使用内容脚本调用 API，显示翻译结果。包含 Google Translate 和其他免费翻译 API 的详细步骤。","url":"https://offernow.cn/docs/doc/🧰 实践项目/ChromePlugin项目实战/csxtdf0gdbfudqg7"}},{"title":"5、消息传递机制","date":"2024-06-15T13:22:35.000Z","urlname":"zqv9hf5rs9wbcmyh","is_nav":false,"updated":"2024-06-21T09:06:48.000Z","not_show":false,"description":"keywords: Chrome 插件开发, 消息传递机制, 背景脚本, 内容脚本, popup 界面, 通信管道在 Chrome 插件的开发过程中，消息传递机制是实现不同部分之间通信的关键。无论是从背景脚本到内容脚本，还是从 popup 界面到背景脚本，都需要建立有效的通信管道。本章将详细介...","tags":[],"keywords":"Chrome 插件开发, 消息传递机制, 背景脚本, 内容脚本, popup 界面, 通信管道","authors":["whitedew"],"type":"Post","readingTime":{"words":705,"minutes":2,"text":"2 分钟"},"slug":"doc/🧰 实践项目/ChromePlugin项目实战/zqv9hf5rs9wbcmyh","path":"docs/doc/🧰 实践项目/ChromePlugin项目实战/zqv9hf5rs9wbcmyh","filePath":"docs/doc/🧰 实践项目/ChromePlugin项目实战/zqv9hf5rs9wbcmyh.md","toc":[{"value":"背景脚本与内容脚本通信","url":"#背景脚本与内容脚本通信","depth":2},{"value":"1. 背景脚本background.js的编写","url":"#1-背景脚本backgroundjs的编写","depth":3},{"value":"2. 更新manifest.json文件","url":"#2-更新manifestjson文件","depth":3},{"value":"处理短连接与长连接","url":"#处理短连接与长连接","depth":2},{"value":"短连接","url":"#短连接","depth":3},{"value":"长连接","url":"#长连接","depth":3},{"value":"实现选中文本的传递","url":"#实现选中文本的传递","depth":2},{"value":"1. 添加选中文本获取功能","url":"#1-添加选中文本获取功能","depth":3},{"value":"2. 背景脚本处理选中文本","url":"#2-背景脚本处理选中文本","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5、消息传递机制","datePublished":"2024-06-15T13:22:35.000Z","dateModified":"2024-06-21T09:06:48.000Z","description":"keywords: Chrome 插件开发, 消息传递机制, 背景脚本, 内容脚本, popup 界面, 通信管道在 Chrome 插件的开发过程中，消息传递机制是实现不同部分之间通信的关键。无论是从背景脚本到内容脚本，还是从 popup 界面到背景脚本，都需要建立有效的通信管道。本章将详细介...","url":"https://offernow.cn/docs/doc/🧰 实践项目/ChromePlugin项目实战/zqv9hf5rs9wbcmyh"}},{"title":"4、网页交互","date":"2024-06-15T13:22:08.000Z","urlname":"hoxdx3meswbbhpff","is_nav":false,"updated":"2024-06-21T09:03:45.000Z","not_show":false,"description":"深入探讨如何使用Chrome扩展中的内容脚本与网页进行交互，包括添加和注册内容脚本、操作网页DOM及获取选中文本内容，为翻译和词典功能打下基础。","tags":[],"keywords":"Chrome扩展, 内容脚本, DOM操作, 翻译插件, 词典插件, 获取选中内容","authors":["whitedew"],"type":"Post","readingTime":{"words":892,"minutes":3,"text":"3 分钟"},"slug":"doc/🧰 实践项目/ChromePlugin项目实战/hoxdx3meswbbhpff","path":"docs/doc/🧰 实践项目/ChromePlugin项目实战/hoxdx3meswbbhpff","filePath":"docs/doc/🧰 实践项目/ChromePlugin项目实战/hoxdx3meswbbhpff.md","toc":[{"value":"添加内容脚本content.js","url":"#添加内容脚本contentjs","depth":2},{"value":"修改manifest.json","url":"#修改manifestjson","depth":3},{"value":"操作网页的 DOM","url":"#操作网页的-dom","depth":2},{"value":"编写content.js","url":"#编写contentjs","depth":3},{"value":"获取选中内容的示例","url":"#获取选中内容的示例","depth":2},{"value":"修改content.js","url":"#修改contentjs","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4、网页交互","datePublished":"2024-06-15T13:22:08.000Z","dateModified":"2024-06-21T09:03:45.000Z","description":"深入探讨如何使用Chrome扩展中的内容脚本与网页进行交互，包括添加和注册内容脚本、操作网页DOM及获取选中文本内容，为翻译和词典功能打下基础。","url":"https://offernow.cn/docs/doc/🧰 实践项目/ChromePlugin项目实战/hoxdx3meswbbhpff"}},{"title":"3、创建 Popup 界面","date":"2024-06-15T13:21:04.000Z","urlname":"fhh99lgx1ihp1ykw","is_nav":false,"updated":"2024-06-21T09:03:29.000Z","not_show":false,"description":"在本章中，我们将一步步创建Chrome插件的基础Popup界面，包括设计popup.html、popup.css以及编写popup.js来处理用户的点击事件。","tags":[],"keywords":"创建Popup界面, Chrome插件, popup.html, popup.js, popup.css","authors":["whitedew"],"type":"Post","readingTime":{"words":822,"minutes":3,"text":"3 分钟"},"slug":"doc/🧰 实践项目/ChromePlugin项目实战/fhh99lgx1ihp1ykw","path":"docs/doc/🧰 实践项目/ChromePlugin项目实战/fhh99lgx1ihp1ykw","filePath":"docs/doc/🧰 实践项目/ChromePlugin项目实战/fhh99lgx1ihp1ykw.md","toc":[{"value":"创建popup.html","url":"#创建popuphtml","depth":2},{"value":"设计popup的样式和布局","url":"#设计popup的样式和布局","depth":2},{"value":"编写popup.js处理事件","url":"#编写popupjs处理事件","depth":2},{"value":"整合与测试","url":"#整合与测试","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"3、创建 Popup 界面","datePublished":"2024-06-15T13:21:04.000Z","dateModified":"2024-06-21T09:03:29.000Z","description":"在本章中，我们将一步步创建Chrome插件的基础Popup界面，包括设计popup.html、popup.css以及编写popup.js来处理用户的点击事件。","url":"https://offernow.cn/docs/doc/🧰 实践项目/ChromePlugin项目实战/fhh99lgx1ihp1ykw"}},{"title":"2、项目文件","date":"2024-06-15T13:20:10.000Z","urlname":"eydyl7oc3k5ivgbz","is_nav":false,"updated":"2024-06-21T09:02:21.000Z","not_show":false,"description":"本章讲解如何从零开始创建 Chrome 插件项目，包括创建项目文件夹、了解项目结构和编写 manifest.json 文件。确保项目结构清晰，代码管理便捷。","tags":[],"keywords":"Chrome 插件, 项目文件, manifest.json, 项目结构, 版本控制","authors":["whitedew"],"type":"Post","readingTime":{"words":806,"minutes":3,"text":"3 分钟"},"slug":"doc/🧰 实践项目/ChromePlugin项目实战/eydyl7oc3k5ivgbz","path":"docs/doc/🧰 实践项目/ChromePlugin项目实战/eydyl7oc3k5ivgbz","filePath":"docs/doc/🧰 实践项目/ChromePlugin项目实战/eydyl7oc3k5ivgbz.md","toc":[{"value":"创建项目文件夹","url":"#创建项目文件夹","depth":2},{"value":"项目结构介绍","url":"#项目结构介绍","depth":2},{"value":"编写 manifest.json 文件","url":"#编写-manifestjson-文件","depth":2},{"value":"解释 manifest.json 文件内容","url":"#解释-manifestjson-文件内容","depth":3},{"value":"提交代码到版本控制","url":"#提交代码到版本控制","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"2、项目文件","datePublished":"2024-06-15T13:20:10.000Z","dateModified":"2024-06-21T09:02:21.000Z","description":"本章讲解如何从零开始创建 Chrome 插件项目，包括创建项目文件夹、了解项目结构和编写 manifest.json 文件。确保项目结构清晰，代码管理便捷。","url":"https://offernow.cn/docs/doc/🧰 实践项目/ChromePlugin项目实战/eydyl7oc3k5ivgbz"}},{"title":"1、什么是 Chrome 插件？","date":"2024-06-15T13:19:17.000Z","urlname":"yow1nk49lu90564x","is_nav":false,"updated":"2024-06-23T12:37:49.000Z","not_show":false,"description":"---keywords: Chrome插件, 常见用途, 安装Chrome, 开发者环境, 翻译插件, 词典插件---我们将介绍什么是 Chrome 插件、其常见用途和好处，并引导您完成安装 Chrome 浏览器以及设置开发者环境的步骤。通过这些准备工作，您将为后续章节的学习打下坚实的基础。我...","tags":[],"keywords":"Chrome插件, 常见用途, 安装Chrome, 开发者环境, 翻译插件, 词典插件","authors":["whitedew"],"type":"Post","readingTime":{"words":963,"minutes":3,"text":"3 分钟"},"slug":"doc/🧰 实践项目/ChromePlugin项目实战/yow1nk49lu90564x","path":"docs/doc/🧰 实践项目/ChromePlugin项目实战/yow1nk49lu90564x","filePath":"docs/doc/🧰 实践项目/ChromePlugin项目实战/yow1nk49lu90564x.md","toc":[{"value":"1.1 什么是 Chrome 插件？","url":"#11-什么是-chrome-插件","depth":2},{"value":"常见用途和好处","url":"#常见用途和好处","depth":3},{"value":"1.2 安装 Chrome 浏览器","url":"#12-安装-chrome-浏览器","depth":2},{"value":"安装步骤","url":"#安装步骤-1","depth":3},{"value":"1.3 设置开发者环境","url":"#13-设置开发者环境","depth":2},{"value":"启用开发者模式","url":"#启用开发者模式","depth":3},{"value":"安装代码编辑器","url":"#安装代码编辑器","depth":3},{"value":"安装 VS Code","url":"#安装-vs-code-1","depth":3},{"value":"安装 Node.js 和 npm（可选）","url":"#安装-nodejs-和-npm可选","depth":3},{"value":"小结","url":"#小结-7","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"1、什么是 Chrome 插件？","datePublished":"2024-06-15T13:19:17.000Z","dateModified":"2024-06-23T12:37:49.000Z","description":"---keywords: Chrome插件, 常见用途, 安装Chrome, 开发者环境, 翻译插件, 词典插件---我们将介绍什么是 Chrome 插件、其常见用途和好处，并引导您完成安装 Chrome 浏览器以及设置开发者环境的步骤。通过这些准备工作，您将为后续章节的学习打下坚实的基础。我...","url":"https://offernow.cn/docs/doc/🧰 实践项目/ChromePlugin项目实战/yow1nk49lu90564x"}},{"title":"ChromePlugin项目实战","date":"2024-06-15T13:18:56.000Z","urlname":"mrpg5qrcb72px7ng","is_nav":false,"nav_path":"chrome_plugin","updated":"2024-06-21T08:59:37.000Z","not_show":false,"description":"本文详细介绍了Chrome插件开发的各个环节，从初始设置到最终发布，包括创建Popup界面、内容脚本、消息传递、调用翻译API、词典功能、数据存储、界面优化、性能优化、调试测试、国际化支持等。 ---","tags":[],"keywords":"Chrome插件, 插件开发, manifest.json, 内容脚本, 翻译API","authors":["whitedew"],"type":"Post","readingTime":{"words":433,"minutes":1,"text":"1 分钟"},"slug":"doc/🧰 实践项目/mrpg5qrcb72px7ng","path":"docs/doc/🧰 实践项目/mrpg5qrcb72px7ng","filePath":"docs/doc/🧰 实践项目/mrpg5qrcb72px7ng.md","toc":[{"value":"目录","url":"#目录","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"ChromePlugin项目实战","datePublished":"2024-06-15T13:18:56.000Z","dateModified":"2024-06-21T08:59:37.000Z","description":"本文详细介绍了Chrome插件开发的各个环节，从初始设置到最终发布，包括创建Popup界面、内容脚本、消息传递、调用翻译API、词典功能、数据存储、界面优化、性能优化、调试测试、国际化支持等。 ---","url":"https://offernow.cn/docs/doc/🧰 实践项目/mrpg5qrcb72px7ng"}},{"title":"6.12 跟年薪100w的95后聊了，他说晋升不靠努力","date":"2024-06-15T04:40:35.000Z","urlname":"stq0311uxpw8665g","is_nav":false,"updated":"2024-06-15T04:40:58.000Z","not_show":false,"description":"大家好 我是白露。今天给大家汇报一个好消息，恭喜我的学员宝子在7天内拿下了5个Offer，年包都在50w+以上！！先给大家介绍一下这个学员的背景⬇️这位同学原本是一位传统金融行业的高级分析师，从事金融数据分析已有5年。作为一名金融分析师，同学每天都需要处理大量的数据，进行市场分析和风险评估。然...","cover":"https://cdn.nlark.com/yuque/0/2024/jpeg/22389147/1718375218709-693f3885-85fb-4fe2-8ae8-b821d2041e0d.jpeg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1082,"minutes":4,"text":"4 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/stq0311uxpw8665g","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/stq0311uxpw8665g","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/stq0311uxpw8665g.md","toc":[{"value":"开始面试","url":"#开始面试-14","depth":1},{"value":"索引与数据结构","url":"#索引与数据结构","depth":4},{"value":"多线程与并发控制","url":"#多线程与并发控制","depth":4},{"value":"并发编程","url":"#并发编程","depth":4},{"value":"Spring框架","url":"#spring框架","depth":4},{"value":"编程题","url":"#编程题-1","depth":4},{"value":"反问面试官","url":"#反问面试官","depth":4},{"value":"我的博客网站上线啦！","url":"#我的博客网站上线啦","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.12 跟年薪100w的95后聊了，他说晋升不靠努力","datePublished":"2024-06-15T04:40:35.000Z","dateModified":"2024-06-15T04:40:58.000Z","description":"大家好 我是白露。今天给大家汇报一个好消息，恭喜我的学员宝子在7天内拿下了5个Offer，年包都在50w+以上！！先给大家介绍一下这个学员的背景⬇️这位同学原本是一位传统金融行业的高级分析师，从事金融数据分析已有5年。作为一名金融分析师，同学每天都需要处理大量的数据，进行市场分析和风险评估。然...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/stq0311uxpw8665g"}},{"title":"使用react-markdown 自定义组件在 Next.js 中进行渲染","date":"2024-06-14T03:18:55.000Z","urlname":"ee5pgwsb1imq4fyg","is_nav":false,"updated":"2024-06-14T03:20:01.000Z","not_show":false,"description":"在这篇文章中，我们将讨论如何在Next.js项目中使用react-markdown库来渲染Markdown内容，并自定义组件以扩展Markdown的功能。我们将使用TypeScript来确保代码的类型安全性。Markdown是一种轻量级标记语言，常用于编写文档、博客等。react-markdo...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":726,"minutes":2,"text":"2 分钟"},"slug":"doc/🔥 程序员自我修养/最强前端🏷️/ee5pgwsb1imq4fyg","path":"docs/doc/🔥 程序员自我修养/最强前端🏷️/ee5pgwsb1imq4fyg","filePath":"docs/doc/🔥 程序员自我修养/最强前端🏷️/ee5pgwsb1imq4fyg.md","toc":[{"value":"2. 安装依赖","url":"#2-安装依赖","depth":2},{"value":"3. 创建Markdown文件","url":"#3-创建markdown文件","depth":2},{"value":"4. 使用react-markdown渲染Markdown","url":"#4-使用react-markdown渲染markdown","depth":2},{"value":"5. 自定义Markdown组件","url":"#5-自定义markdown组件","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"使用react-markdown 自定义组件在 Next.js 中进行渲染","datePublished":"2024-06-14T03:18:55.000Z","dateModified":"2024-06-14T03:20:01.000Z","description":"在这篇文章中，我们将讨论如何在Next.js项目中使用react-markdown库来渲染Markdown内容，并自定义组件以扩展Markdown的功能。我们将使用TypeScript来确保代码的类型安全性。Markdown是一种轻量级标记语言，常用于编写文档、博客等。react-markdo...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强前端🏷️/ee5pgwsb1imq4fyg"}},{"title":"最强前端🏷️","date":"2024-06-14T03:17:29.000Z","urlname":"zvhtpcf14k5ubrg3","is_nav":true,"nav_path":"fe","updated":"2024-09-28T04:11:42.000Z","not_show":false,"description":"---is_nav: truenav_path: fe---“最强前端🏷️”博客专栏是前端技术的知识汇聚地。在内容上，涵盖前端核心技术的深度剖析。HTML、CSS 和 JavaScript 的精髓被详细解读，从基础语法到高级特性，让你全面掌握。前端框架如 Vue.js、React 等也有深入...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":391,"minutes":1,"text":"1 分钟"},"slug":"doc/🔥 程序员自我修养/zvhtpcf14k5ubrg3","path":"docs/doc/🔥 程序员自我修养/zvhtpcf14k5ubrg3","filePath":"docs/doc/🔥 程序员自我修养/zvhtpcf14k5ubrg3.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"最强前端🏷️","datePublished":"2024-06-14T03:17:29.000Z","dateModified":"2024-09-28T04:11:42.000Z","description":"---is_nav: truenav_path: fe---“最强前端🏷️”博客专栏是前端技术的知识汇聚地。在内容上，涵盖前端核心技术的深度剖析。HTML、CSS 和 JavaScript 的精髓被详细解读，从基础语法到高级特性，让你全面掌握。前端框架如 Vue.js、React 等也有深入...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/zvhtpcf14k5ubrg3"}},{"title":"如何提高学习效率？","date":"2024-06-13T14:25:46.000Z","urlname":"lhdpzegytx39ap8h","is_nav":false,"updated":"2024-06-13T14:27:30.000Z","not_show":false,"description":"每个人在学习过程中都希望能够提高效率和效果，然而多数人常常感到时间不够用或者效果不理想。今天，我从多个方面为大家提供一些实用的技巧和方法，帮助你们更高效地学习。一、制定合理的学习计划目标明确：制定清晰具体的学习目标，明确自己要达到的学习成果，不要模糊不清。分解任务：将大目标细分为小任务，每天集...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1054,"minutes":4,"text":"4 分钟"},"slug":"doc/🔥 程序员自我修养/十万个为什么💡/lhdpzegytx39ap8h","path":"docs/doc/🔥 程序员自我修养/十万个为什么💡/lhdpzegytx39ap8h","filePath":"docs/doc/🔥 程序员自我修养/十万个为什么💡/lhdpzegytx39ap8h.md","toc":[{"value":"一、制定合理的学习计划","url":"#一制定合理的学习计划","depth":3},{"value":"二、使用高效学习方法","url":"#二使用高效学习方法","depth":3},{"value":"三、优化学习环境","url":"#三优化学习环境","depth":3},{"value":"四、积极的心态和习惯","url":"#四积极的心态和习惯","depth":3},{"value":"五、高质量的学习资源","url":"#五高质量的学习资源","depth":3},{"value":"六、有效的复习和巩固","url":"#六有效的复习和巩固","depth":3},{"value":"七、利用科技工具","url":"#七利用科技工具","depth":3},{"value":"八、保持积极的互动","url":"#八保持积极的互动","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"如何提高学习效率？","datePublished":"2024-06-13T14:25:46.000Z","dateModified":"2024-06-13T14:27:30.000Z","description":"每个人在学习过程中都希望能够提高效率和效果，然而多数人常常感到时间不够用或者效果不理想。今天，我从多个方面为大家提供一些实用的技巧和方法，帮助你们更高效地学习。一、制定合理的学习计划目标明确：制定清晰具体的学习目标，明确自己要达到的学习成果，不要模糊不清。分解任务：将大目标细分为小任务，每天集...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/十万个为什么💡/lhdpzegytx39ap8h"}},{"title":"如何选择适合的编程语言入门？","date":"2024-06-13T14:24:56.000Z","urlname":"eg8vrd6a1a2qtc0f","is_nav":false,"updated":"2024-06-13T14:25:43.000Z","not_show":false,"description":"如何选择最适合自己的编程语言呢？接下来，我给大家分享一些实用的建议，希望能帮到你们。一、明确目标和兴趣考虑你的兴趣和未来方向是选择编程语言的首要因素。如果你对网页开发感兴趣，可以选择前端开发语言；如果你想从事数据分析，可以选择专注于数据处理的语言。 网页开发：如果你对网页设计和开发感兴趣，可以...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1005,"minutes":3,"text":"3 分钟"},"slug":"doc/🔥 程序员自我修养/最强后端🐚/eg8vrd6a1a2qtc0f","path":"docs/doc/🔥 程序员自我修养/最强后端🐚/eg8vrd6a1a2qtc0f","filePath":"docs/doc/🔥 程序员自我修养/最强后端🐚/eg8vrd6a1a2qtc0f.md","toc":[{"value":"一、明确目标和兴趣","url":"#一明确目标和兴趣","depth":3},{"value":"二、考虑语言的难易程度","url":"#二考虑语言的难易程度","depth":3},{"value":"三、了解市场需求和职业前景","url":"#三了解市场需求和职业前景","depth":3},{"value":"四、参与社区和项目","url":"#四参与社区和项目","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"如何选择适合的编程语言入门？","datePublished":"2024-06-13T14:24:56.000Z","dateModified":"2024-06-13T14:25:43.000Z","description":"如何选择最适合自己的编程语言呢？接下来，我给大家分享一些实用的建议，希望能帮到你们。一、明确目标和兴趣考虑你的兴趣和未来方向是选择编程语言的首要因素。如果你对网页开发感兴趣，可以选择前端开发语言；如果你想从事数据分析，可以选择专注于数据处理的语言。 网页开发：如果你对网页设计和开发感兴趣，可以...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强后端🐚/eg8vrd6a1a2qtc0f"}},{"title":"CPU是怎么制作的？(简化版)","date":"2024-06-13T14:20:00.000Z","urlname":"qaesyxprfkwnnqzg","is_nav":false,"updated":"2024-06-13T14:20:27.000Z","not_show":false,"description":"今天我们来聊一讲现代科技的奇迹之一：CPU是怎么制作的。CPU（中央处理器）被誉为计算机的大脑，其制造过程充满了高科技和精密工艺。一、基本原材料硅晶圆：制作CPU的基本材料是硅。硅元素提纯后被制成圆柱形的硅锭，然后被切片成非常薄的硅片，这些硅片就是制作芯片的基础材料。二、制造工艺制造CPU的过...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":793,"minutes":3,"text":"3 分钟"},"slug":"doc/🔥 程序员自我修养/十万个为什么💡/qaesyxprfkwnnqzg","path":"docs/doc/🔥 程序员自我修养/十万个为什么💡/qaesyxprfkwnnqzg","filePath":"docs/doc/🔥 程序员自我修养/十万个为什么💡/qaesyxprfkwnnqzg.md","toc":[{"value":"一、基本原材料","url":"#一基本原材料","depth":3},{"value":"二、制造工艺","url":"#二制造工艺","depth":3},{"value":"三、封装和测试","url":"#三封装和测试","depth":3},{"value":"四、最终集成","url":"#四最终集成","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"CPU是怎么制作的？(简化版)","datePublished":"2024-06-13T14:20:00.000Z","dateModified":"2024-06-13T14:20:27.000Z","description":"今天我们来聊一讲现代科技的奇迹之一：CPU是怎么制作的。CPU（中央处理器）被誉为计算机的大脑，其制造过程充满了高科技和精密工艺。一、基本原材料硅晶圆：制作CPU的基本材料是硅。硅元素提纯后被制成圆柱形的硅锭，然后被切片成非常薄的硅片，这些硅片就是制作芯片的基础材料。二、制造工艺制造CPU的过...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/十万个为什么💡/qaesyxprfkwnnqzg"}},{"title":"三字经是什么？","date":"2024-06-13T13:54:09.000Z","urlname":"sdk3mbryw2v8y6d1","is_nav":false,"updated":"2024-06-13T13:54:28.000Z","not_show":false,"description":"人之初，性本善。性相近，习相远。苟不教，性乃迁。教之道，贵以专。昔孟母，择邻处。子不学，断机杼。窦燕山，有义方。教五子，名俱扬。养不教，父之过。教不严，师之惰。子不学，非所宜。幼不学，老何为。玉不琢，不成器。人不学，不知义。为人子，方少时。亲师友，习礼仪。香九龄，能温席。孝于亲，所当执。融四岁...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1440,"minutes":5,"text":"5 分钟"},"slug":"doc/🔥 程序员自我修养/十万个为什么💡/sdk3mbryw2v8y6d1","path":"docs/doc/🔥 程序员自我修养/十万个为什么💡/sdk3mbryw2v8y6d1","filePath":"docs/doc/🔥 程序员自我修养/十万个为什么💡/sdk3mbryw2v8y6d1.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"三字经是什么？","datePublished":"2024-06-13T13:54:09.000Z","dateModified":"2024-06-13T13:54:28.000Z","description":"人之初，性本善。性相近，习相远。苟不教，性乃迁。教之道，贵以专。昔孟母，择邻处。子不学，断机杼。窦燕山，有义方。教五子，名俱扬。养不教，父之过。教不严，师之惰。子不学，非所宜。幼不学，老何为。玉不琢，不成器。人不学，不知义。为人子，方少时。亲师友，习礼仪。香九龄，能温席。孝于亲，所当执。融四岁...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/十万个为什么💡/sdk3mbryw2v8y6d1"}},{"title":"什么是除息和除权？","date":"2024-06-13T13:51:08.000Z","urlname":"pysvuh4kpt1qwkoe","is_nav":false,"updated":"2024-06-13T13:53:13.000Z","not_show":false,"description":"大家好，我是白露啊。今天我们来聊聊股票市场中的两个重要概念：除息 和 除权。这些术语看似复杂，但其实它们在股票投资中扮演着非常重要的角色。什么是除息？除息 是指股票在分红派息后的一种调整。一家公司在派息日将利润分配给股东，每股分配一定的现金股利。在除息日当天，为了反应公司现金流的变化和确保公平...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":574,"minutes":2,"text":"2 分钟"},"slug":"doc/🔥 程序员自我修养/十万个为什么💡/pysvuh4kpt1qwkoe","path":"docs/doc/🔥 程序员自我修养/十万个为什么💡/pysvuh4kpt1qwkoe","filePath":"docs/doc/🔥 程序员自我修养/十万个为什么💡/pysvuh4kpt1qwkoe.md","toc":[{"value":"什么是除息？","url":"#什么是除息","depth":3},{"value":"什么是除权？","url":"#什么是除权","depth":3},{"value":"实际影响","url":"#实际影响","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"什么是除息和除权？","datePublished":"2024-06-13T13:51:08.000Z","dateModified":"2024-06-13T13:53:13.000Z","description":"大家好，我是白露啊。今天我们来聊聊股票市场中的两个重要概念：除息 和 除权。这些术语看似复杂，但其实它们在股票投资中扮演着非常重要的角色。什么是除息？除息 是指股票在分红派息后的一种调整。一家公司在派息日将利润分配给股东，每股分配一定的现金股利。在除息日当天，为了反应公司现金流的变化和确保公平...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/十万个为什么💡/pysvuh4kpt1qwkoe"}},{"title":"3/26 太简单了! 平平无奇的美团二面！","date":"2024-06-13T13:14:42.000Z","urlname":"gcdzehnfhoqrwpdu","is_nav":false,"updated":"2024-06-13T13:14:50.000Z","not_show":false,"description":"原链接：https://www.nowcoder.com/discuss/601813614772662272?sourceSSR=searchtheme: cyanosis【提醒】通过这次面试经验，你将可以复习到以下知识点：Java集合类的了解，如List, Set, Map及其实现类。Ha...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3678,"minutes":12,"text":"12 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/gcdzehnfhoqrwpdu","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/gcdzehnfhoqrwpdu","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/gcdzehnfhoqrwpdu.md","toc":[{"value":"theme: cyanosis","url":"#theme-cyanosis","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"3/26 太简单了! 平平无奇的美团二面！","datePublished":"2024-06-13T13:14:42.000Z","dateModified":"2024-06-13T13:14:50.000Z","description":"原链接：https://www.nowcoder.com/discuss/601813614772662272?sourceSSR=searchtheme: cyanosis【提醒】通过这次面试经验，你将可以复习到以下知识点：Java集合类的了解，如List, Set, Map及其实现类。Ha...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/gcdzehnfhoqrwpdu"}},{"title":"3/27 太难了！阿里云面试令人发指！","date":"2024-06-13T13:14:42.000Z","urlname":"tuvfdu72a3uvmdt1","is_nav":false,"updated":"2024-06-13T13:14:50.000Z","not_show":false,"description":"https://www.nowcoder.com/?type=818_1【提醒】通过这次面试经验，你将可以复习到以下知识点：面向对象编程（OOP）的基本概念：封装、继承、多态。Golang中goroutine与线程的区别和GMP模型的理解。Go的垃圾回收机制以及与Python垃圾回收的对比。G...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3349,"minutes":11,"text":"11 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/tuvfdu72a3uvmdt1","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/tuvfdu72a3uvmdt1","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/tuvfdu72a3uvmdt1.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"3/27 太难了！阿里云面试令人发指！","datePublished":"2024-06-13T13:14:42.000Z","dateModified":"2024-06-13T13:14:50.000Z","description":"https://www.nowcoder.com/?type=818_1【提醒】通过这次面试经验，你将可以复习到以下知识点：面向对象编程（OOP）的基本概念：封装、继承、多态。Golang中goroutine与线程的区别和GMP模型的理解。Go的垃圾回收机制以及与Python垃圾回收的对比。G...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/tuvfdu72a3uvmdt1"}},{"title":"4/1 背刺！春招B站一面，这些问题你都会吗？","date":"2024-06-13T13:14:41.000Z","urlname":"bubs1avkkli85tbn","is_nav":false,"updated":"2024-06-13T13:14:49.000Z","not_show":false,"description":"下面我将分享一位同学在Bilibili一面的面试经历，对于这次面试，他的评价是，很有难度，你试试呢？【提醒】通过这次面试经验，你将可以复习到以下知识点，注意汇总，不超过10个RPC调用的网络中断处理DPDKC++的多态实现和应用场景C++类的大小及成员变量初始化unique_ptr的用法Gol...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2707,"minutes":9,"text":"9 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/bubs1avkkli85tbn","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/bubs1avkkli85tbn","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/bubs1avkkli85tbn.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/1 背刺！春招B站一面，这些问题你都会吗？","datePublished":"2024-06-13T13:14:41.000Z","dateModified":"2024-06-13T13:14:49.000Z","description":"下面我将分享一位同学在Bilibili一面的面试经历，对于这次面试，他的评价是，很有难度，你试试呢？【提醒】通过这次面试经验，你将可以复习到以下知识点，注意汇总，不超过10个RPC调用的网络中断处理DPDKC++的多态实现和应用场景C++类的大小及成员变量初始化unique_ptr的用法Gol...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/bubs1avkkli85tbn"}},{"title":"4/2 腾讯PCG二面：技术深度不够？腾讯PCG面试问到你怕了没？","date":"2024-06-13T13:14:41.000Z","urlname":"cslqxxvst26d0tw7","is_nav":false,"updated":"2024-06-13T13:14:49.000Z","not_show":false,"description":"下面我将分享一位同学在腾讯PCG TRPC二面的面试经历，他说这场面试好比走进了技术的迷宫，充满了挑战和机遇，你准备好了吗？【提醒】通过这次面试经验，你将可以复习到以下知识点：RPC框架原理Localcache组件使用Redis库选择Golang的interface概念Golang中的map使...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":4737,"minutes":16,"text":"16 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/cslqxxvst26d0tw7","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/cslqxxvst26d0tw7","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/cslqxxvst26d0tw7.md","toc":[{"value":"腾讯PCG trpc 二面","url":"#腾讯pcg-trpc-二面","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/2 腾讯PCG二面：技术深度不够？腾讯PCG面试问到你怕了没？","datePublished":"2024-06-13T13:14:41.000Z","dateModified":"2024-06-13T13:14:49.000Z","description":"下面我将分享一位同学在腾讯PCG TRPC二面的面试经历，他说这场面试好比走进了技术的迷宫，充满了挑战和机遇，你准备好了吗？【提醒】通过这次面试经验，你将可以复习到以下知识点：RPC框架原理Localcache组件使用Redis库选择Golang的interface概念Golang中的map使...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/cslqxxvst26d0tw7"}},{"title":"4/6 字节三面真刺激！前端都这么难？","date":"2024-06-13T13:14:41.000Z","urlname":"fvstr3qzo7gqguok","is_nav":false,"updated":"2024-06-13T13:14:49.000Z","not_show":false,"description":"下面我将分享一位同学在字节跳动的三面面试经历，对于这次面试，他的评价是非常注重深度和技术广度，准备好挑战你的前端知识储备了吗？【提醒】通过这次面试经验，你将可以复习到以下知识点：Vue 2和Vue 3的差异Vue模板编译过程及AST的角色虚拟DOM的生成过程React Hooks中useSta...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3071,"minutes":10,"text":"10 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/fvstr3qzo7gqguok","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/fvstr3qzo7gqguok","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/fvstr3qzo7gqguok.md","toc":[{"value":"题库","url":"#题库","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/6 字节三面真刺激！前端都这么难？","datePublished":"2024-06-13T13:14:41.000Z","dateModified":"2024-06-13T13:14:49.000Z","description":"下面我将分享一位同学在字节跳动的三面面试经历，对于这次面试，他的评价是非常注重深度和技术广度，准备好挑战你的前端知识储备了吗？【提醒】通过这次面试经验，你将可以复习到以下知识点：Vue 2和Vue 3的差异Vue模板编译过程及AST的角色虚拟DOM的生成过程React Hooks中useSta...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/fvstr3qzo7gqguok"}},{"title":"3/29 打穿！得物青训营Golang面试全记录！","date":"2024-06-13T13:14:41.000Z","urlname":"hknd17h7i6hsgxwg","is_nav":false,"updated":"2024-06-13T13:14:49.000Z","not_show":false,"description":"https://www.nowcoder.com/?type=818_1下面我将分享一位同学在得物青训营的面试经历，对于这次面试，他的评价是，很有难度，你试试呢？【提醒】通过这次面试经验，你将可以复习到以下知识点，注意汇总，不超过10个快排算法动态规划的概念面向对象的理解Golang的调度模型...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1973,"minutes":7,"text":"7 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/hknd17h7i6hsgxwg","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/hknd17h7i6hsgxwg","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/hknd17h7i6hsgxwg.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"3/29 打穿！得物青训营Golang面试全记录！","datePublished":"2024-06-13T13:14:41.000Z","dateModified":"2024-06-13T13:14:49.000Z","description":"https://www.nowcoder.com/?type=818_1下面我将分享一位同学在得物青训营的面试经历，对于这次面试，他的评价是，很有难度，你试试呢？【提醒】通过这次面试经验，你将可以复习到以下知识点，注意汇总，不超过10个快排算法动态规划的概念面向对象的理解Golang的调度模型...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/hknd17h7i6hsgxwg"}},{"title":"4/2 腾讯PCG一：问麻了！腾讯一面究竟问了什么？从HTTP到算法····","date":"2024-06-13T13:14:41.000Z","urlname":"iok9gzmat6hudv1t","is_nav":false,"updated":"2024-06-13T13:14:49.000Z","not_show":false,"description":"下面我将分享一位同学在腾讯PCG的trpc一面的面试经历，对于这次面试，他的评价是，既全面又深入，涵盖了从网络基础到算法的多个领域，你试试呢？【提醒】通过这次面试经验，你将可以复习到以下知识点：浏览器到服务器的请求流程HTTPS与HTTP的差异JWT Token的原理和优势TCP连接的建立和断...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":4543,"minutes":15,"text":"15 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/iok9gzmat6hudv1t","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/iok9gzmat6hudv1t","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/iok9gzmat6hudv1t.md","toc":[{"value":"腾讯pcg trpc一面","url":"#腾讯pcg-trpc一面","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/2 腾讯PCG一：问麻了！腾讯一面究竟问了什么？从HTTP到算法····","datePublished":"2024-06-13T13:14:41.000Z","dateModified":"2024-06-13T13:14:49.000Z","description":"下面我将分享一位同学在腾讯PCG的trpc一面的面试经历，对于这次面试，他的评价是，既全面又深入，涵盖了从网络基础到算法的多个领域，你试试呢？【提醒】通过这次面试经验，你将可以复习到以下知识点：浏览器到服务器的请求流程HTTPS与HTTP的差异JWT Token的原理和优势TCP连接的建立和断...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/iok9gzmat6hudv1t"}},{"title":"4/4 滴滴后端：太深入了！面试滴滴存储后端，我被这些问题问住了！","date":"2024-06-13T13:14:41.000Z","urlname":"ip5m72cycgk48xo6","is_nav":false,"updated":"2024-06-13T13:14:49.000Z","not_show":false,"description":"下面我将分享一位同学在滴滴的存储后端面试经历，对于这次面试，他的评价是，考察深度和广度都很足，你准备好迎接挑战了吗？【提醒】通过这次面试经验，你将可以复习到以下知识点：Raft一致性算法Golang的核心特性和并发模型GPM模型详解算法：最长公共子序列数据库事务隔离级别Go语言源码阅读和协程机...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3003,"minutes":10,"text":"10 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/ip5m72cycgk48xo6","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/ip5m72cycgk48xo6","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/ip5m72cycgk48xo6.md","toc":[{"value":"滴滴存储后端","url":"#滴滴存储后端","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/4 滴滴后端：太深入了！面试滴滴存储后端，我被这些问题问住了！","datePublished":"2024-06-13T13:14:41.000Z","dateModified":"2024-06-13T13:14:49.000Z","description":"下面我将分享一位同学在滴滴的存储后端面试经历，对于这次面试，他的评价是，考察深度和广度都很足，你准备好迎接挑战了吗？【提醒】通过这次面试经验，你将可以复习到以下知识点：Raft一致性算法Golang的核心特性和并发模型GPM模型详解算法：最长公共子序列数据库事务隔离级别Go语言源码阅读和协程机...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/ip5m72cycgk48xo6"}},{"title":"4/5 美团：“轻松”！深入JVM和MySQL，美团优选事业群一面你准备好了吗？","date":"2024-06-13T13:14:41.000Z","urlname":"oo90yhzkwk34410x","is_nav":false,"updated":"2024-06-13T13:14:49.000Z","not_show":false,"description":"咱们来看一场美团优选事业群后端开发岗位的一面面试经历，面试官人很和善，整个过程既轻松又充实。这场面试不仅考察了基础知识，还涉及到了项目实战和算法。赶紧来看看，这样的面试你能hold住吗？【提醒】通过这次面试经验，你将可以复习到以下知识点：Java集合类的使用及线程安全并发编程的相关类和机制Ja...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":5294,"minutes":18,"text":"18 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/oo90yhzkwk34410x","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/oo90yhzkwk34410x","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/oo90yhzkwk34410x.md","toc":[{"value":"美团-优选事业群-后端开发一面","url":"#美团-优选事业群-后端开发一面","depth":1},{"value":"八股（30min）","url":"#八股30min","depth":3},{"value":"项目（50min）","url":"#项目50min","depth":3},{"value":"做题（10min）","url":"#做题10min","depth":3},{"value":"反问","url":"#反问","depth":3},{"value":"总结","url":"#总结-20","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/5 美团：“轻松”！深入JVM和MySQL，美团优选事业群一面你准备好了吗？","datePublished":"2024-06-13T13:14:41.000Z","dateModified":"2024-06-13T13:14:49.000Z","description":"咱们来看一场美团优选事业群后端开发岗位的一面面试经历，面试官人很和善，整个过程既轻松又充实。这场面试不仅考察了基础知识，还涉及到了项目实战和算法。赶紧来看看，这样的面试你能hold住吗？【提醒】通过这次面试经验，你将可以复习到以下知识点：Java集合类的使用及线程安全并发编程的相关类和机制Ja...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/oo90yhzkwk34410x"}},{"title":"4/3 蚂蚁一面：揭秘蚂蚁一面：你真的懂MySQL和Redis吗？","date":"2024-06-13T13:14:41.000Z","urlname":"trklqv1f6ekrnrnl","is_nav":false,"updated":"2024-06-13T13:14:49.000Z","not_show":false,"description":"咱们来分享一位同学在蚂蚁金服的一面面试经历，这位同学对这次面试的评价是：考察宽广深刻，需要将知识点串联起来。那么，你准备好挑战自己的知识体系了吗？【提醒】通过这次面试经验，你将可以复习到以下知识点：Docker与虚拟机的区别Kubernetes的核心组件令牌桶算法与压力测试Redis的持久化和...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":4684,"minutes":16,"text":"16 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/trklqv1f6ekrnrnl","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/trklqv1f6ekrnrnl","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/trklqv1f6ekrnrnl.md","toc":[{"value":"蚂蚁一面面经","url":"#蚂蚁一面面经","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/3 蚂蚁一面：揭秘蚂蚁一面：你真的懂MySQL和Redis吗？","datePublished":"2024-06-13T13:14:41.000Z","dateModified":"2024-06-13T13:14:49.000Z","description":"咱们来分享一位同学在蚂蚁金服的一面面试经历，这位同学对这次面试的评价是：考察宽广深刻，需要将知识点串联起来。那么，你准备好挑战自己的知识体系了吗？【提醒】通过这次面试经验，你将可以复习到以下知识点：Docker与虚拟机的区别Kubernetes的核心组件令牌桶算法与压力测试Redis的持久化和...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/trklqv1f6ekrnrnl"}},{"title":"3/28 太难了！深入语言核心！腾讯视频后台开发一面经验分享","date":"2024-06-13T13:14:41.000Z","urlname":"vkm0wmtadabu45qk","is_nav":false,"updated":"2024-06-13T13:14:50.000Z","not_show":false,"description":"https://www.nowcoder.com/feed/main/detail/0d2e3d5bce19438a880ed23d5428abcf【提醒】通过这次面试经验，你将可以复习到以下知识点：Go语言的特性及其垃圾回收（GC）机制。Go语言的GMP调度模型。Go语言中的并发控制工具：c...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1784,"minutes":6,"text":"6 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/vkm0wmtadabu45qk","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/vkm0wmtadabu45qk","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/vkm0wmtadabu45qk.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"3/28 太难了！深入语言核心！腾讯视频后台开发一面经验分享","datePublished":"2024-06-13T13:14:41.000Z","dateModified":"2024-06-13T13:14:50.000Z","description":"https://www.nowcoder.com/feed/main/detail/0d2e3d5bce19438a880ed23d5428abcf【提醒】通过这次面试经验，你将可以复习到以下知识点：Go语言的特性及其垃圾回收（GC）机制。Go语言的GMP调度模型。Go语言中的并发控制工具：c...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/vkm0wmtadabu45qk"}},{"title":"3/30 天崩开局😭！两个小时！美团一面！","date":"2024-06-13T13:14:41.000Z","urlname":"xvs38ptqpq63en6m","is_nav":false,"updated":"2024-06-13T13:14:49.000Z","not_show":false,"description":"https://www.nowcoder.com/discuss/602263922418151424下面我将分享一位同学在美团后端一面的面试经历，对于这次面试，他的评价是，很有难度，你试试呢？【提醒】通过这次面试经验，你将可以复习到以下知识点：算法题：LeetCode124，LeetCode...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1711542073325-02c4c1b3-4895-4033-ace0-97884558fbbe.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3993,"minutes":13,"text":"13 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/xvs38ptqpq63en6m","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/xvs38ptqpq63en6m","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/xvs38ptqpq63en6m.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"3/30 天崩开局😭！两个小时！美团一面！","datePublished":"2024-06-13T13:14:41.000Z","dateModified":"2024-06-13T13:14:49.000Z","description":"https://www.nowcoder.com/discuss/602263922418151424下面我将分享一位同学在美团后端一面的面试经历，对于这次面试，他的评价是，很有难度，你试试呢？【提醒】通过这次面试经验，你将可以复习到以下知识点：算法题：LeetCode124，LeetCode...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/xvs38ptqpq63en6m"}},{"title":"3/31 蚂蚁集团Java一面，不只是技术问题，还有系统设计的深度拷问！","date":"2024-06-13T13:14:41.000Z","urlname":"ye5hk2gzoaeh95us","is_nav":false,"updated":"2024-06-13T13:14:49.000Z","not_show":false,"description":"https://www.nowcoder.com/discuss/601794045181997056下面我将分享一位同学在蚂蚁集团Java一面的面试经历，他的评价是，面试过程中问题很深入，你试试呢？【提醒】通过这次面试经验，你将可以复习到以下知识点：线程池的工作原理、参数配置及使用注意事项C...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1711544256669-3e7e0807-93ea-4e27-93bc-66acaaf67b7c.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2707,"minutes":9,"text":"9 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/ye5hk2gzoaeh95us","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/ye5hk2gzoaeh95us","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/ye5hk2gzoaeh95us.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"3/31 蚂蚁集团Java一面，不只是技术问题，还有系统设计的深度拷问！","datePublished":"2024-06-13T13:14:41.000Z","dateModified":"2024-06-13T13:14:49.000Z","description":"https://www.nowcoder.com/discuss/601794045181997056下面我将分享一位同学在蚂蚁集团Java一面的面试经历，他的评价是，面试过程中问题很深入，你试试呢？【提醒】通过这次面试经验，你将可以复习到以下知识点：线程池的工作原理、参数配置及使用注意事项C...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/ye5hk2gzoaeh95us"}},{"title":"4/9 折磨！一小时面试如深渊试炼，拼多多的暗黑挑战","date":"2024-06-13T13:14:40.000Z","urlname":"aqgngfkdutop1k94","is_nav":false,"updated":"2024-06-13T13:14:48.000Z","not_show":false,"description":"https://www.nowcoder.com/discuss/604806997279506432下面我将分享一位同学在拼多多面试的经历，对于这次面试，他的评价是，压力巨大，感觉像是经历了一场暗黑风暴。面试官的提问如同机关枪一般连绵不绝，让人猝不及防。想象一下：紧张的氛围、快速的问题切换、...","cover":"https://cdn.nlark.com/yuque/0/2024/jpeg/22382235/1712366658142-648811f1-b720-4504-ba24-a0636794336c.jpeg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":4101,"minutes":14,"text":"14 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/aqgngfkdutop1k94","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/aqgngfkdutop1k94","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/aqgngfkdutop1k94.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/9 折磨！一小时面试如深渊试炼，拼多多的暗黑挑战","datePublished":"2024-06-13T13:14:40.000Z","dateModified":"2024-06-13T13:14:48.000Z","description":"https://www.nowcoder.com/discuss/604806997279506432下面我将分享一位同学在拼多多面试的经历，对于这次面试，他的评价是，压力巨大，感觉像是经历了一场暗黑风暴。面试官的提问如同机关枪一般连绵不绝，让人猝不及防。想象一下：紧张的氛围、快速的问题切换、...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/aqgngfkdutop1k94"}},{"title":"4/10 一面成教训! 腾讯PCG后台开发面试官的“善意”追问！","date":"2024-06-13T13:14:40.000Z","urlname":"cpkt2rm3gl36g4if","is_nav":false,"updated":"2024-06-13T13:14:48.000Z","not_show":false,"description":"作者：池敖池恩链接：https://www.nowcoder.com/interview/center?entranceType=%E5%AF%BC%E8%88%AA%E6%A0%8F来源：牛客下面分享一位同学在腾讯PCG的一面面试经历，对于这次面试，他的评价是，在交流中学习成长。让我们看看这...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2076,"minutes":7,"text":"7 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/cpkt2rm3gl36g4if","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/cpkt2rm3gl36g4if","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/cpkt2rm3gl36g4if.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/10 一面成教训! 腾讯PCG后台开发面试官的“善意”追问！","datePublished":"2024-06-13T13:14:40.000Z","dateModified":"2024-06-13T13:14:48.000Z","description":"作者：池敖池恩链接：https://www.nowcoder.com/interview/center?entranceType=%E5%AF%BC%E8%88%AA%E6%A0%8F来源：牛客下面分享一位同学在腾讯PCG的一面面试经历，对于这次面试，他的评价是，在交流中学习成长。让我们看看这...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/cpkt2rm3gl36g4if"}},{"title":"4/12  美团技术部一面深度解析：后端开发岗位你能答对几题？","date":"2024-06-13T13:14:40.000Z","urlname":"dnb52x3dyoscmwyw","is_nav":false,"updated":"2024-06-13T13:14:48.000Z","not_show":false,"description":"好像和4/8 一样这里是一位同学在美团转正实习到店平台技术部的一面面试分享，面试题目涉及了Zookeeper、Kafka和MySQL等多个重点技术领域，面试官很和气，引导式的提问让整个面试过程充满学习和成长。现在我们就来一起回顾这些问题，并深入探讨其中的技术细节。【提醒】通过这次面试经验，你将...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3492,"minutes":12,"text":"12 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/dnb52x3dyoscmwyw","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/dnb52x3dyoscmwyw","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/dnb52x3dyoscmwyw.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/12  美团技术部一面深度解析：后端开发岗位你能答对几题？","datePublished":"2024-06-13T13:14:40.000Z","dateModified":"2024-06-13T13:14:48.000Z","description":"好像和4/8 一样这里是一位同学在美团转正实习到店平台技术部的一面面试分享，面试题目涉及了Zookeeper、Kafka和MySQL等多个重点技术领域，面试官很和气，引导式的提问让整个面试过程充满学习和成长。现在我们就来一起回顾这些问题，并深入探讨其中的技术细节。【提醒】通过这次面试经验，你将...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/dnb52x3dyoscmwyw"}},{"title":"4/13 腾讯一面：HTTP和HTTPS我终于搞明白了！","date":"2024-06-13T13:14:40.000Z","urlname":"gggqtyot9c91og42","is_nav":false,"updated":"2024-06-13T13:14:48.000Z","not_show":false,"description":"嘿，今天我们来看看一位同学在腾讯音乐的面试经历。面试的内容涵盖了项目难点、Redis锁、进程通信方式、进程与线程的区别、CPU使用率查看方法、空文件创建、抓包工具、HTTP与HTTPS的区别等多个方面，真是内容丰富，挑战性十足啊。特别是在算法部分，面试官从堆排序切换到快排，可见面试的灵活性。对...","cover":"https://cdn.nlark.com/yuque/0/2024/jpeg/22382235/1713276096800-adda1632-d5ca-4010-a317-16929ddd5f12.jpeg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3728,"minutes":12,"text":"12 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/gggqtyot9c91og42","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/gggqtyot9c91og42","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/gggqtyot9c91og42.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/13 腾讯一面：HTTP和HTTPS我终于搞明白了！","datePublished":"2024-06-13T13:14:40.000Z","dateModified":"2024-06-13T13:14:48.000Z","description":"嘿，今天我们来看看一位同学在腾讯音乐的面试经历。面试的内容涵盖了项目难点、Redis锁、进程通信方式、进程与线程的区别、CPU使用率查看方法、空文件创建、抓包工具、HTTP与HTTPS的区别等多个方面，真是内容丰富，挑战性十足啊。特别是在算法部分，面试官从堆排序切换到快排，可见面试的灵活性。对...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/gggqtyot9c91og42"}},{"title":"4/15 腾讯面试官考了我Spring的AOP","date":"2024-06-13T13:14:40.000Z","urlname":"gq8mqmknp0ciuwvr","is_nav":false,"updated":"2024-06-13T13:14:48.000Z","not_show":false,"description":"最近腾讯云智基础平台的实习机会火爆异常，据说他们的面试题目广泛且深入，特别是对于Java相关的技术栈，涵盖了Spring的IOC和AOP，循环依赖的解决方法，以及类加载机制等。一位名叫“讲义气的小太阳在努力”的同学分享了自己的面试经历，让我们一起来看看他是如何应对的，也许能给打算申请的你一些灵...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":4052,"minutes":14,"text":"14 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/gq8mqmknp0ciuwvr","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/gq8mqmknp0ciuwvr","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/gq8mqmknp0ciuwvr.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/15 腾讯面试官考了我Spring的AOP","datePublished":"2024-06-13T13:14:40.000Z","dateModified":"2024-06-13T13:14:48.000Z","description":"最近腾讯云智基础平台的实习机会火爆异常，据说他们的面试题目广泛且深入，特别是对于Java相关的技术栈，涵盖了Spring的IOC和AOP，循环依赖的解决方法，以及类加载机制等。一位名叫“讲义气的小太阳在努力”的同学分享了自己的面试经历，让我们一起来看看他是如何应对的，也许能给打算申请的你一些灵...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/gq8mqmknp0ciuwvr"}},{"title":"4/16 又一个公司要倒下了：从洗脑广告到裁员风波","date":"2024-06-13T13:14:40.000Z","urlname":"iv993phgec0ybt41","is_nav":false,"updated":"2024-06-13T13:14:48.000Z","not_show":false,"description":"从 这一次开始，我们引入更有趣的开篇曾几何时，“找工作，就上58同城！”这句话仿佛成了无数求职者的心声。杨幂代言时期的“58同城，一个神奇的网站”广告语，更是在电视上、网络上洗脑式地传播。但今日的58同城，似乎正经历着自己的内部风波——面对盈利压力，不得不对业务进行大刀阔斧的裁剪。近期，一则让...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1713533648200-b35416c3-a7ed-430a-8a8f-8218852b9905.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3669,"minutes":12,"text":"12 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/iv993phgec0ybt41","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/iv993phgec0ybt41","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/iv993phgec0ybt41.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/16 又一个公司要倒下了：从洗脑广告到裁员风波","datePublished":"2024-06-13T13:14:40.000Z","dateModified":"2024-06-13T13:14:48.000Z","description":"从 这一次开始，我们引入更有趣的开篇曾几何时，“找工作，就上58同城！”这句话仿佛成了无数求职者的心声。杨幂代言时期的“58同城，一个神奇的网站”广告语，更是在电视上、网络上洗脑式地传播。但今日的58同城，似乎正经历着自己的内部风波——面对盈利压力，不得不对业务进行大刀阔斧的裁剪。近期，一则让...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/iv993phgec0ybt41"}},{"title":"4/7 小米 C++ | 小米Su7 面经分享~","date":"2024-06-13T13:14:40.000Z","urlname":"oklf57y328g00vpa","is_nav":false,"updated":"2024-06-13T13:14:49.000Z","not_show":false,"description":"https://www.nowcoder.com/share/jump/1712366593836下面分享一位同学在小米的面试经历，对于这次面试，他的评价是，阵容强大，你试试呢？【提醒】通过这次面试经验，你将可以复习到以下知识点（注意汇总，不超过6个）继承与多态的基本概念和实现方式C++中的虚...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2051,"minutes":7,"text":"7 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/oklf57y328g00vpa","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/oklf57y328g00vpa","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/oklf57y328g00vpa.md","toc":[{"value":"","url":"#-14","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/7 小米 C++ | 小米Su7 面经分享~","datePublished":"2024-06-13T13:14:40.000Z","dateModified":"2024-06-13T13:14:49.000Z","description":"https://www.nowcoder.com/share/jump/1712366593836下面分享一位同学在小米的面试经历，对于这次面试，他的评价是，阵容强大，你试试呢？【提醒】通过这次面试经验，你将可以复习到以下知识点（注意汇总，不超过6个）继承与多态的基本概念和实现方式C++中的虚...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/oklf57y328g00vpa"}},{"title":"4/14 无offer，但有所得：美团技术中心面试心得分享","date":"2024-06-13T13:14:40.000Z","urlname":"pic89gwlv72y59qo","is_nav":false,"updated":"2024-06-13T13:14:48.000Z","not_show":false,"description":"最近关于美团平台增长技术和智能引擎部业务技术中心的面试话题在论坛上引起了不少讨论。有一位同学分享了他的面试经历，听说这个部门主要负责美团app打开后的推荐feed流后端。面试过程中，面试官在闲聊环节后，深入探讨了C++的智能指针和STL容器等技术实现。虽然最后没有拿到offer，但这位同学的经...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3453,"minutes":12,"text":"12 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/pic89gwlv72y59qo","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/pic89gwlv72y59qo","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/pic89gwlv72y59qo.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/14 无offer，但有所得：美团技术中心面试心得分享","datePublished":"2024-06-13T13:14:40.000Z","dateModified":"2024-06-13T13:14:48.000Z","description":"最近关于美团平台增长技术和智能引擎部业务技术中心的面试话题在论坛上引起了不少讨论。有一位同学分享了他的面试经历，听说这个部门主要负责美团app打开后的推荐feed流后端。面试过程中，面试官在闲聊环节后，深入探讨了C++的智能指针和STL容器等技术实现。虽然最后没有拿到offer，但这位同学的经...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/pic89gwlv72y59qo"}},{"title":"4/18 4月阿里offer被毁，我该怎么进字节？","date":"2024-06-13T13:14:40.000Z","urlname":"qr3clvvbzi9cg2gh","is_nav":false,"updated":"2024-06-13T13:14:48.000Z","not_show":false,"description":"在校招求职的浪潮中，有些故事总是让人唏嘘不已。比如最近在社交平台上广泛讨论的一个话题：“4月阿里offer被毁，我该怎么进字节？”这不仅反映了当下职场的变动性，也映射了求职者在面对突如其来的变故时的无助与挣扎。时间回溯到2021年7月至9月，一个年轻的实习生在阿里巴巴拿到了转正的offer，这...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1713536359324-f34aeab3-f533-46c6-8789-a42ef94433fa.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3985,"minutes":13,"text":"13 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/qr3clvvbzi9cg2gh","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/qr3clvvbzi9cg2gh","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/qr3clvvbzi9cg2gh.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/18 4月阿里offer被毁，我该怎么进字节？","datePublished":"2024-06-13T13:14:40.000Z","dateModified":"2024-06-13T13:14:48.000Z","description":"在校招求职的浪潮中，有些故事总是让人唏嘘不已。比如最近在社交平台上广泛讨论的一个话题：“4月阿里offer被毁，我该怎么进字节？”这不仅反映了当下职场的变动性，也映射了求职者在面对突如其来的变故时的无助与挣扎。时间回溯到2021年7月至9月，一个年轻的实习生在阿里巴巴拿到了转正的offer，这...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/qr3clvvbzi9cg2gh"}},{"title":"4/11 百度| 三面凉经：百度Go实习生技术面试实录","date":"2024-06-13T13:14:40.000Z","urlname":"semmykgoba7owx89","is_nav":false,"updated":"2024-06-13T13:14:48.000Z","not_show":false,"description":"作者：nemurubaka链接：https://www.nowcoder.com/?type=818_1来源：牛客网下面分享一位同学在百度后端Golang实习的三面面试经历，对于这次面试，他的评价是，充满挑战。面试过程中遇到了网络信号问题，以及一些陌生的问题，让我们看看他是怎样应对这场战斗的。...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2137,"minutes":7,"text":"7 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/semmykgoba7owx89","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/semmykgoba7owx89","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/semmykgoba7owx89.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/11 百度| 三面凉经：百度Go实习生技术面试实录","datePublished":"2024-06-13T13:14:40.000Z","dateModified":"2024-06-13T13:14:48.000Z","description":"作者：nemurubaka链接：https://www.nowcoder.com/?type=818_1来源：牛客网下面分享一位同学在百度后端Golang实习的三面面试经历，对于这次面试，他的评价是，充满挑战。面试过程中遇到了网络信号问题，以及一些陌生的问题，让我们看看他是怎样应对这场战斗的。...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/semmykgoba7owx89"}},{"title":"4/8 美团实习转正面试···过了！","date":"2024-06-13T13:14:40.000Z","urlname":"syvcyt4o14hzg9fm","is_nav":false,"updated":"2024-06-13T13:14:48.000Z","not_show":false,"description":"https://www.nowcoder.com/feed/main/detail/a98f1d0b65894e4999478282ca2fc3df下面我将分享一位同学在美团转正实习到店平台技术部的一面面试经历，他的评价是，面试官很友好，问题全面，充分考察了对Kafka和MySQL的理解。如果...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1712365870440-0d38dccd-34b6-48ad-95bb-3879c3e5af39.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3607,"minutes":12,"text":"12 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/syvcyt4o14hzg9fm","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/syvcyt4o14hzg9fm","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/syvcyt4o14hzg9fm.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/8 美团实习转正面试···过了！","datePublished":"2024-06-13T13:14:40.000Z","dateModified":"2024-06-13T13:14:48.000Z","description":"https://www.nowcoder.com/feed/main/detail/a98f1d0b65894e4999478282ca2fc3df下面我将分享一位同学在美团转正实习到店平台技术部的一面面试经历，他的评价是，面试官很友好，问题全面，充分考察了对Kafka和MySQL的理解。如果...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/syvcyt4o14hzg9fm"}},{"title":"4/24 哭了，没找到暑期实习，真的会耽误秋招上岸吗？","date":"2024-06-13T13:14:39.000Z","urlname":"aq1212cxh4z9k8st","is_nav":false,"updated":"2024-06-13T13:14:47.000Z","not_show":false,"description":"夏天到了，你大概能感受到的不仅仅是温度的上升，对很多大学生来说，暑期实习的话题也开始火热起来。暑期实习，听着就像是一场夏日大作战，每个学生都希望能在这个季节为自己的简历添上亮眼的一笔。但是，这到底是不是唯一的选择呢？暑期实习真的就比日常实习强？一、丑话说在前面首先，得承认，如果你实力足够，暑期...","cover":"https://cdn.nlark.com/yuque/0/2024/jpeg/22389147/1714195976193-db8e9aac-5696-42ef-98bf-56bb5cdbcf8b.jpeg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":5621,"minutes":19,"text":"19 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/aq1212cxh4z9k8st","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/aq1212cxh4z9k8st","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/aq1212cxh4z9k8st.md","toc":[{"value":"一、丑话说在前面","url":"#一丑话说在前面","depth":2},{"value":"二、面试全过程分享","url":"#二面试全过程分享","depth":2},{"value":"以下来源于应聘者的真实回忆。","url":"#以下来源于应聘者的真实回忆","depth":4},{"value":"（1）自我介绍","url":"#1自我介绍","depth":5},{"value":"（2）技术环节","url":"#2技术环节","depth":5},{"value":"（3）应用场景技术题目（涉及到具体项目）","url":"#3应用场景技术题目涉及到具体项目","depth":5},{"value":"（4）其他（性格、偏好、个人理解、反问等）","url":"#4其他性格偏好个人理解反问等","depth":5},{"value":"三、总结","url":"#三总结","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/24 哭了，没找到暑期实习，真的会耽误秋招上岸吗？","datePublished":"2024-06-13T13:14:39.000Z","dateModified":"2024-06-13T13:14:47.000Z","description":"夏天到了，你大概能感受到的不仅仅是温度的上升，对很多大学生来说，暑期实习的话题也开始火热起来。暑期实习，听着就像是一场夏日大作战，每个学生都希望能在这个季节为自己的简历添上亮眼的一笔。但是，这到底是不是唯一的选择呢？暑期实习真的就比日常实习强？一、丑话说在前面首先，得承认，如果你实力足够，暑期...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/aq1212cxh4z9k8st"}},{"title":"4/19 985毕业生:至今0 offer，深夜无眠","date":"2024-06-13T13:14:39.000Z","urlname":"ar2e2voeocrtbpio","is_nav":false,"updated":"2024-06-13T13:14:47.000Z","not_show":false,"description":"南京大学，作为国内顶尖的学府之一，其计算机科学与技术系近年来在人才培养和科研创新方面成绩斐然，无数优秀学子从这里走出，成为了科技界的中坚力量。而在这样一个充满竞争和挑战的环境中，学生们的求职之路并非一帆风顺。 就在不久前的一篇帖子中，一名南京大学的计算机类学生分享了他的求职焦虑——面试数月，依...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1713688227879-d88c655f-931a-430c-be88-02de63eee1cf.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3433,"minutes":11,"text":"11 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/ar2e2voeocrtbpio","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/ar2e2voeocrtbpio","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/ar2e2voeocrtbpio.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/19 985毕业生:至今0 offer，深夜无眠","datePublished":"2024-06-13T13:14:39.000Z","dateModified":"2024-06-13T13:14:47.000Z","description":"南京大学，作为国内顶尖的学府之一，其计算机科学与技术系近年来在人才培养和科研创新方面成绩斐然，无数优秀学子从这里走出，成为了科技界的中坚力量。而在这样一个充满竞争和挑战的环境中，学生们的求职之路并非一帆风顺。 就在不久前的一篇帖子中，一名南京大学的计算机类学生分享了他的求职焦虑——面试数月，依...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/ar2e2voeocrtbpio"}},{"title":"4/26 真香！腾讯拿到SP了！","date":"2024-06-13T13:14:39.000Z","urlname":"bw0l9y2hx0qxc9w2","is_nav":false,"updated":"2024-06-13T13:14:47.000Z","not_show":false,"description":"面试腾讯需要做什么？大家好，我是青玉白露。为了准备面试腾讯的后台开发岗位，你需要全面地准备以下几个方面：1. 项目经验准备项目介绍：准备清晰的项目介绍，包括项目背景、你的具体角色、技术栈、关键功能、解决的难题以及项目的成果。深入理解项目：了解项目的每个细节，包括架构设计、数据库设计、性能优化等...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1714305011026-7dc3654c-3e1c-45ab-b620-b0937b2d2bd4.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":4034,"minutes":13,"text":"13 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/bw0l9y2hx0qxc9w2","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/bw0l9y2hx0qxc9w2","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/bw0l9y2hx0qxc9w2.md","toc":[{"value":"面试腾讯需要做什么？","url":"#面试腾讯需要做什么","depth":1},{"value":"1. 项目经验","url":"#1-项目经验","depth":3},{"value":"2. 技术和知识准备","url":"#2-技术和知识准备","depth":3},{"value":"3. 自我介绍","url":"#3-自我介绍","depth":3},{"value":"4. 软技能","url":"#4-软技能","depth":3},{"value":"5. 面试态度","url":"#5-面试态度","depth":3},{"value":"6. 面试流程准备","url":"#6-面试流程准备","depth":3},{"value":"面试经验","url":"#面试经验","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/26 真香！腾讯拿到SP了！","datePublished":"2024-06-13T13:14:39.000Z","dateModified":"2024-06-13T13:14:47.000Z","description":"面试腾讯需要做什么？大家好，我是青玉白露。为了准备面试腾讯的后台开发岗位，你需要全面地准备以下几个方面：1. 项目经验准备项目介绍：准备清晰的项目介绍，包括项目背景、你的具体角色、技术栈、关键功能、解决的难题以及项目的成果。深入理解项目：了解项目的每个细节，包括架构设计、数据库设计、性能优化等...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/bw0l9y2hx0qxc9w2"}},{"title":"4/27 双非本科自述: 无竞赛国奖,怎么逆袭腾讯字节","date":"2024-06-13T13:14:39.000Z","urlname":"obtempoe5ennystv","is_nav":false,"updated":"2024-06-13T13:14:47.000Z","not_show":false,"description":"https://www.nowcoder.com/discuss/505466271127908352?sourceSSR=search写在前面大家好，我是青玉白露。在这个充斥着精英主义色彩的社会里，\"双一流\"大学和耀眼奖项似乎成了走向职业成功、大厂的不二法门及必备之物。然而，今天我要分享的，...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1714483002228-dab01552-8129-4438-a06b-75858b7daa5d.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":4827,"minutes":16,"text":"16 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/obtempoe5ennystv","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/obtempoe5ennystv","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/obtempoe5ennystv.md","toc":[{"value":"写在前面","url":"#写在前面","depth":1},{"value":"经验感悟","url":"#经验感悟","depth":1},{"value":"面经分享","url":"#面经分享","depth":1},{"value":"项目介绍","url":"#项目介绍-1","depth":2},{"value":"八股文","url":"#八股文","depth":2},{"value":"算法题","url":"#算法题-1","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/27 双非本科自述: 无竞赛国奖,怎么逆袭腾讯字节","datePublished":"2024-06-13T13:14:39.000Z","dateModified":"2024-06-13T13:14:47.000Z","description":"https://www.nowcoder.com/discuss/505466271127908352?sourceSSR=search写在前面大家好，我是青玉白露。在这个充斥着精英主义色彩的社会里，\"双一流\"大学和耀眼奖项似乎成了走向职业成功、大厂的不二法门及必备之物。然而，今天我要分享的，...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/obtempoe5ennystv"}},{"title":"4/23 阿里云又崩啦！一次逆天的技术拷打","date":"2024-06-13T13:14:39.000Z","urlname":"qg3mrber4se3u9fy","is_nav":false,"updated":"2024-06-13T13:14:47.000Z","not_show":false,"description":"在科技世界的舞台上，我们会经常看到一些出人意料的事件。前不久，阿里旗下的淘宝、闲鱼、阿里云盘、饿了么、钉钉等产品突然出现了崩溃，引发了广泛的关注和热议。“阿里全系产品崩了”，这一话题在微博上迅速登上了热搜。阿里云作为国内的云计算领军者，一直以来都处于遥遥领先的位置。然而，这次的全系产品崩溃事件...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1714051311931-d9936783-75af-4bd5-90bf-ae925e670076.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2834,"minutes":9,"text":"9 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/qg3mrber4se3u9fy","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/qg3mrber4se3u9fy","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/qg3mrber4se3u9fy.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/23 阿里云又崩啦！一次逆天的技术拷打","datePublished":"2024-06-13T13:14:39.000Z","dateModified":"2024-06-13T13:14:47.000Z","description":"在科技世界的舞台上，我们会经常看到一些出人意料的事件。前不久，阿里旗下的淘宝、闲鱼、阿里云盘、饿了么、钉钉等产品突然出现了崩溃，引发了广泛的关注和热议。“阿里全系产品崩了”，这一话题在微博上迅速登上了热搜。阿里云作为国内的云计算领军者，一直以来都处于遥遥领先的位置。然而，这次的全系产品崩溃事件...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/qg3mrber4se3u9fy"}},{"title":"4/22 清华毕业，细数24年秋招的艰辛与无用功","date":"2024-06-13T13:14:39.000Z","urlname":"qg6w5i80r8ydt744","is_nav":false,"updated":"2024-06-13T13:14:47.000Z","not_show":false,"description":"以下内容，来自于清华24届硕士毕业生的自述自序\"每个人的人生都是一场马拉松，而我，在清华电气的赛道上，难免跌跌撞撞。\" 在秋招这场没有硝烟的战场上，我，一位211工科本科毕业生，跨考进入清华大学电气工程与自动化专业的研究生，亲身经历了从代码到金融的跨界之旅。然而，也正是这段日子里，我深刻体会到...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1948,"minutes":6,"text":"6 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/qg6w5i80r8ydt744","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/qg6w5i80r8ydt744","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/qg6w5i80r8ydt744.md","toc":[{"value":"自序","url":"#自序","depth":1},{"value":"感悟","url":"#感悟","depth":1},{"value":"总结","url":"#总结-21","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/22 清华毕业，细数24年秋招的艰辛与无用功","datePublished":"2024-06-13T13:14:39.000Z","dateModified":"2024-06-13T13:14:47.000Z","description":"以下内容，来自于清华24届硕士毕业生的自述自序\"每个人的人生都是一场马拉松，而我，在清华电气的赛道上，难免跌跌撞撞。\" 在秋招这场没有硝烟的战场上，我，一位211工科本科毕业生，跨考进入清华大学电气工程与自动化专业的研究生，亲身经历了从代码到金融的跨界之旅。然而，也正是这段日子里，我深刻体会到...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/qg6w5i80r8ydt744"}},{"title":"4/30 五一过半，我还在想春招……","date":"2024-06-13T13:14:39.000Z","urlname":"sdq1t8gtsqk629g6","is_nav":false,"updated":"2024-06-13T13:14:46.000Z","not_show":false,"description":"https://www.nowcoder.com/discuss/614511730340659200昨天有个同学跟我分享他的春招经历：我就读于南京航空航天大学，目前大四，五一期间一直在复盘自己最终能够进入腾讯、阿里的原因，我认为自己从简历层被字节HR选中的原因，有以下几点。经验总结怎么写一份...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2891,"minutes":10,"text":"10 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/sdq1t8gtsqk629g6","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/sdq1t8gtsqk629g6","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/sdq1t8gtsqk629g6.md","toc":[{"value":"经验总结","url":"#经验总结","depth":1},{"value":"怎么写一份无法被HR拒绝的简历","url":"#怎么写一份无法被hr拒绝的简历","depth":2},{"value":"明确这份实习是不是你想要的","url":"#明确这份实习是不是你想要的","depth":2},{"value":"面试Tips","url":"#面试tips","depth":2},{"value":"模拟面试","url":"#模拟面试","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/30 五一过半，我还在想春招……","datePublished":"2024-06-13T13:14:39.000Z","dateModified":"2024-06-13T13:14:46.000Z","description":"https://www.nowcoder.com/discuss/614511730340659200昨天有个同学跟我分享他的春招经历：我就读于南京航空航天大学，目前大四，五一期间一直在复盘自己最终能够进入腾讯、阿里的原因，我认为自己从简历层被字节HR选中的原因，有以下几点。经验总结怎么写一份...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/sdq1t8gtsqk629g6"}},{"title":"4/25 中科大：字节实习一年的感受，真的有点···","date":"2024-06-13T13:14:39.000Z","urlname":"txa9sgikm5pac3cw","is_nav":false,"updated":"2024-06-13T13:14:46.000Z","not_show":false,"description":"大家好，我是青玉白露，下面是一位中科大的同学，分享在字节实习一年的刚收，真的有点东西，强烈建议多次阅读！收藏！分享作为一个中科大软件工程的学生，我有幸在字节跳动实习了一年多的时间。这段经历无疑是我学习和成长过程中的一笔宝贵财富。一年多来，我见证了自己的变化，也积累了不少心得。是时候把这些经历和...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1714230609350-dad5f971-ec36-4f51-a5d3-96597e33f38a.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":4480,"minutes":15,"text":"15 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/txa9sgikm5pac3cw","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/txa9sgikm5pac3cw","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/txa9sgikm5pac3cw.md","toc":[{"value":"分享","url":"#分享","depth":1},{"value":"面试分享","url":"#面试分享","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/25 中科大：字节实习一年的感受，真的有点···","datePublished":"2024-06-13T13:14:39.000Z","dateModified":"2024-06-13T13:14:46.000Z","description":"大家好，我是青玉白露，下面是一位中科大的同学，分享在字节实习一年的刚收，真的有点东西，强烈建议多次阅读！收藏！分享作为一个中科大软件工程的学生，我有幸在字节跳动实习了一年多的时间。这段经历无疑是我学习和成长过程中的一笔宝贵财富。一年多来，我见证了自己的变化，也积累了不少心得。是时候把这些经历和...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/txa9sgikm5pac3cw"}},{"title":"4/20 双非研一退学转IT 专业，做对了什么？","date":"2024-06-13T13:14:39.000Z","urlname":"vc2soai9wm3g7xyz","is_nav":false,"updated":"2024-06-13T13:14:47.000Z","not_show":false,"description":"在学术和职业的道路上，我们总会面临着选择与决定。最近看到一位同学分享的文章，一个双非学校的仪器科学与技术专业读学硕的学生在网络上分享了自己的迷茫和想法。这位研一的学生，面对未来的不确定性，正在考虑一个重大的决定——是否应该退学并换个专业重新考研。这位学生之所以有这个想法，主要基于以下几点考虑：...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1713791113969-69687f7b-40c3-46d3-b7f9-2d6bec3995f1.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":5734,"minutes":19,"text":"19 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/vc2soai9wm3g7xyz","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/vc2soai9wm3g7xyz","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/vc2soai9wm3g7xyz.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/20 双非研一退学转IT 专业，做对了什么？","datePublished":"2024-06-13T13:14:39.000Z","dateModified":"2024-06-13T13:14:47.000Z","description":"在学术和职业的道路上，我们总会面临着选择与决定。最近看到一位同学分享的文章，一个双非学校的仪器科学与技术专业读学硕的学生在网络上分享了自己的迷茫和想法。这位研一的学生，面对未来的不确定性，正在考虑一个重大的决定——是否应该退学并换个专业重新考研。这位学生之所以有这个想法，主要基于以下几点考虑：...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/vc2soai9wm3g7xyz"}},{"title":"4/29 中科大研二：字节实习半年的感悟和求职经验","date":"2024-06-13T13:14:39.000Z","urlname":"yle9x1mig3opkp9m","is_nav":false,"updated":"2024-06-13T13:14:46.000Z","not_show":false,"description":"https://www.nowcoder.com/discuss在科技巨头字节跳动的实习经历无疑是一段难忘之旅。我有幸作为中科大软件学院研二学生，获得了这样的机会。实习的总时长超过半年，让我深刻体会到了字节跳动对实习生的重视与培养。在这里，我不仅技术能力得到了锤炼，更在mentor的指导下，解...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3432,"minutes":11,"text":"11 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/yle9x1mig3opkp9m","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/yle9x1mig3opkp9m","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/yle9x1mig3opkp9m.md","toc":[{"value":"面试指南","url":"#面试指南","depth":1},{"value":"自我介绍","url":"#自我介绍-1","depth":2},{"value":"基础知识与项目问答","url":"#基础知识与项目问答","depth":2},{"value":"编程题","url":"#编程题","depth":2},{"value":"反问环节","url":"#反问环节","depth":2},{"value":"实习感受","url":"#实习感受","depth":1},{"value":"面经分享","url":"#面经分享-1","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/29 中科大研二：字节实习半年的感悟和求职经验","datePublished":"2024-06-13T13:14:39.000Z","dateModified":"2024-06-13T13:14:46.000Z","description":"https://www.nowcoder.com/discuss在科技巨头字节跳动的实习经历无疑是一段难忘之旅。我有幸作为中科大软件学院研二学生，获得了这样的机会。实习的总时长超过半年，让我深刻体会到了字节跳动对实习生的重视与培养。在这里，我不仅技术能力得到了锤炼，更在mentor的指导下，解...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/yle9x1mig3opkp9m"}},{"title":"4/21 六个月滴滴实习：轻松、舒心又高薪！","date":"2024-06-13T13:14:39.000Z","urlname":"yz0tvggwqsckul9e","is_nav":false,"updated":"2024-06-13T13:14:47.000Z","not_show":false,"description":"https://www.nowcoder.com/discuss/610130751605981184?sourceSSR=post不久前，一位在滴滴后端研发部门实习了六个月的小伙伴在牛客网上分享了他的实习体验， 作者详细描述了他在滴滴的实习生活。从他的叙述中，我们可以感受到与其他互联网公司相...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1713967235272-e1f0b889-27e8-4ef3-887a-d2f71bb98446.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2644,"minutes":9,"text":"9 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/4 月/yz0tvggwqsckul9e","path":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/yz0tvggwqsckul9e","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/4 月/yz0tvggwqsckul9e.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4/21 六个月滴滴实习：轻松、舒心又高薪！","datePublished":"2024-06-13T13:14:39.000Z","dateModified":"2024-06-13T13:14:47.000Z","description":"https://www.nowcoder.com/discuss/610130751605981184?sourceSSR=post不久前，一位在滴滴后端研发部门实习了六个月的小伙伴在牛客网上分享了他的实习体验， 作者详细描述了他在滴滴的实习生活。从他的叙述中，我们可以感受到与其他互联网公司相...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/4 月/yz0tvggwqsckul9e"}},{"title":"4 月","date":"2024-06-13T13:14:38.000Z","urlname":"bb1q96x83h9u96w2","is_nav":false,"nav_path":"20244","updated":"2024-06-25T13:50:40.000Z","skip_nav":false,"not_show":false,"description":"---is_nav: falsenav_path: '20244'skip_nav: false---","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":0,"minutes":0,"text":"小于一分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/bb1q96x83h9u96w2","path":"docs/doc/💹 大厂面经/拿下面试官实战/bb1q96x83h9u96w2","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/bb1q96x83h9u96w2.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4 月","datePublished":"2024-06-13T13:14:38.000Z","dateModified":"2024-06-25T13:50:40.000Z","description":"---is_nav: falsenav_path: '20244'skip_nav: false---","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/bb1q96x83h9u96w2"}},{"title":"5.11 华中科大:感谢大家，我的春招之旅结束了","date":"2024-06-13T13:14:38.000Z","urlname":"agprzvnqlb1k3fdc","is_nav":false,"updated":"2024-06-13T13:30:49.000Z","not_show":false,"description":"大家好，我是白露。今天在论坛上看到一个帖子，一位华中科大的同学，因为家中父亲突然病倒，发求助帖：请问大家，春招走哪个方向能最快找到工作？还是说继续读研呢，但是家里急需钱……当时这个帖子直接热榜第一，然后牛客网创始人直接给这位同学开了一年会员表示支持。然后其他网友也纷纷提了自己的鼓励和意见。时隔...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1715523269355-3b148b36-28a0-4c15-aa1d-adfb35b79235.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2848,"minutes":9,"text":"9 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/agprzvnqlb1k3fdc","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/agprzvnqlb1k3fdc","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/agprzvnqlb1k3fdc.md","toc":[{"value":"场景题：扫码登录是如何实现的？","url":"#场景题扫码登录是如何实现的","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.11 华中科大:感谢大家，我的春招之旅结束了","datePublished":"2024-06-13T13:14:38.000Z","dateModified":"2024-06-13T13:30:49.000Z","description":"大家好，我是白露。今天在论坛上看到一个帖子，一位华中科大的同学，因为家中父亲突然病倒，发求助帖：请问大家，春招走哪个方向能最快找到工作？还是说继续读研呢，但是家里急需钱……当时这个帖子直接热榜第一，然后牛客网创始人直接给这位同学开了一年会员表示支持。然后其他网友也纷纷提了自己的鼓励和意见。时隔...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/agprzvnqlb1k3fdc"}},{"title":"5/3 学弟学妹听劝，谨慎选后端！要选…","date":"2024-06-13T13:14:38.000Z","urlname":"ant8ga6buh1zbg0q","is_nav":false,"updated":"2024-06-13T13:14:46.000Z","not_show":false,"description":"今天不分享面经了，给大家说说心里话.......学弟学妹们，如果你现在还在大学的校园里，或者已经在准备投递简历了，今天的这篇文章，你一定要看！！后端开发，这个曾经的热门选择，现在已经成为了一个需要我们更加谨慎考虑的领域。甚至于，我都不建议你们选择后端开发（虽然我是后端开发...），且听我慢慢说...","cover":"https://cdn.nlark.com/yuque/0/2024/jpeg/22382235/1714660672150-3a6f0d62-4b85-4dd1-9cb5-72b5bbab1bf5.jpeg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1053,"minutes":4,"text":"4 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/ant8ga6buh1zbg0q","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/ant8ga6buh1zbg0q","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/ant8ga6buh1zbg0q.md","toc":[{"value":"市场竞争：后端不再是避风港","url":"#市场竞争后端不再是避风港","depth":2},{"value":"实习经验：后端岗位不易求","url":"#实习经验后端岗位不易求","depth":2},{"value":"前端与客户端、测开：可能的替代选择？","url":"#前端与客户端测开可能的替代选择","depth":2},{"value":"最后：自知之明，方可不惑","url":"#最后自知之明方可不惑","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5/3 学弟学妹听劝，谨慎选后端！要选…","datePublished":"2024-06-13T13:14:38.000Z","dateModified":"2024-06-13T13:14:46.000Z","description":"今天不分享面经了，给大家说说心里话.......学弟学妹们，如果你现在还在大学的校园里，或者已经在准备投递简历了，今天的这篇文章，你一定要看！！后端开发，这个曾经的热门选择，现在已经成为了一个需要我们更加谨慎考虑的领域。甚至于，我都不建议你们选择后端开发（虽然我是后端开发...），且听我慢慢说...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/ant8ga6buh1zbg0q"}},{"title":"5/1 来看看阿里今年的年终奖···","date":"2024-06-13T13:14:38.000Z","urlname":"dckfr4w455txftuh","is_nav":false,"updated":"2024-06-13T13:14:46.000Z","not_show":false,"description":"阿里开奖大家好，我是白露呀。最近阿里各部分的年终相继开奖了，有人欢喜有人愁：淘天在今年的现金激励非常足，作为集团的核心业务之一，淘天今年的现金激励相当丰厚，特别是对于高绩效员工（绩效3.75），除了28-70万长期激励奖金和2000-4000普调。绩效3.5的员工虽然奖金较低，但接近一半的员工...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2652,"minutes":9,"text":"9 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/dckfr4w455txftuh","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/dckfr4w455txftuh","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/dckfr4w455txftuh.md","toc":[{"value":"阿里开奖","url":"#阿里开奖","depth":1},{"value":"淘天面经","url":"#淘天面经","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5/1 来看看阿里今年的年终奖···","datePublished":"2024-06-13T13:14:38.000Z","dateModified":"2024-06-13T13:14:46.000Z","description":"阿里开奖大家好，我是白露呀。最近阿里各部分的年终相继开奖了，有人欢喜有人愁：淘天在今年的现金激励非常足，作为集团的核心业务之一，淘天今年的现金激励相当丰厚，特别是对于高绩效员工（绩效3.75），除了28-70万长期激励奖金和2000-4000普调。绩效3.5的员工虽然奖金较低，但接近一半的员工...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/dckfr4w455txftuh"}},{"title":"5.9 快手营收千亿，薪资60W。。能去吗","date":"2024-06-13T13:14:38.000Z","urlname":"hk6rh30pvkk1rszw","is_nav":false,"updated":"2024-06-13T13:14:45.000Z","not_show":false,"description":"大家好，我是白露啊。最近快手发布了 2023 年度财报，里面有几点关键信息，我觉得大家应该很感兴趣。信息参考自 HR实名俱乐部人均薪酬60W，酸了···1、快手2023年全年总收入达1134.7亿元，同比增长20.5%。要知道，这个全年收入证明快手是一线互联网公司了，要知道，百度2023年的营...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1715302451293-8e32ffc6-e91b-454b-8fa7-58aa0a5b41cc.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2980,"minutes":10,"text":"10 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/hk6rh30pvkk1rszw","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/hk6rh30pvkk1rszw","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/hk6rh30pvkk1rszw.md","toc":[{"value":"开始面试","url":"#开始面试-3","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.9 快手营收千亿，薪资60W。。能去吗","datePublished":"2024-06-13T13:14:38.000Z","dateModified":"2024-06-13T13:14:45.000Z","description":"大家好，我是白露啊。最近快手发布了 2023 年度财报，里面有几点关键信息，我觉得大家应该很感兴趣。信息参考自 HR实名俱乐部人均薪酬60W，酸了···1、快手2023年全年总收入达1134.7亿元，同比增长20.5%。要知道，这个全年收入证明快手是一线互联网公司了，要知道，百度2023年的营...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/hk6rh30pvkk1rszw"}},{"title":"5.10 百度女公关璩静，发短视频弄丢千万年薪工作。。","date":"2024-06-13T13:14:38.000Z","urlname":"ltb7vneuipd9n7u3","is_nav":false,"updated":"2024-06-13T13:30:44.000Z","not_show":false,"description":"大家好，我是白露啊。百度前第一女公关璩静火了，然后被火速离职。看看她的简历，还是前华为副总裁，真的厉害。她以“霸道女总裁”的形象在短视频平台亮相，发了几条短视频，然后引发了一场公关界的“大海啸”（🌊🌊🌊）。璩静在短视频里一系列言论很有意思。比如：“员工闹分手提离职我秒批”“职场新人不要买...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1715342607315-bc8f69f0-c4d9-47f8-8dfb-3a4915003b07.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1340,"minutes":4,"text":"4 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/ltb7vneuipd9n7u3","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/ltb7vneuipd9n7u3","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/ltb7vneuipd9n7u3.md","toc":[{"value":"百度面经","url":"#百度面经","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.10 百度女公关璩静，发短视频弄丢千万年薪工作。。","datePublished":"2024-06-13T13:14:38.000Z","dateModified":"2024-06-13T13:30:44.000Z","description":"大家好，我是白露啊。百度前第一女公关璩静火了，然后被火速离职。看看她的简历，还是前华为副总裁，真的厉害。她以“霸道女总裁”的形象在短视频平台亮相，发了几条短视频，然后引发了一场公关界的“大海啸”（🌊🌊🌊）。璩静在短视频里一系列言论很有意思。比如：“员工闹分手提离职我秒批”“职场新人不要买...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/ltb7vneuipd9n7u3"}},{"title":"5.6 从 0 offer 到春招上岸，我只做了这一个决定...","date":"2024-06-13T13:14:38.000Z","urlname":"nirofi8i3qi3o30w","is_nav":false,"updated":"2024-06-13T13:30:02.000Z","not_show":false,"description":"大家好，我是白露啊。 今天我想和大家聊一聊关于春招编程语言的选择问题。这个问题其实我一直就想写了，但是之前忘记了···其实白露当年毕业找工作的时候，可谓是一波三折。最沉痛的打击就是在4月份的时候，原本实习转正的部门被优化了，因此只能够被迫毕业前两个月开始“春招”。在当时那个时间，市场上几乎已经...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1969,"minutes":7,"text":"7 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/nirofi8i3qi3o30w","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/nirofi8i3qi3o30w","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/nirofi8i3qi3o30w.md","toc":[{"value":"第一部分（约2天）：语法基础","url":"#第一部分约2天语法基础","depth":2},{"value":"第二部分（约7天） ：基础概念学习","url":"#第二部分约7天-基础概念学习","depth":2},{"value":"第三部分（约5天）： 项目实践+八股文","url":"#第三部分约5天-项目实践八股文","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.6 从 0 offer 到春招上岸，我只做了这一个决定...","datePublished":"2024-06-13T13:14:38.000Z","dateModified":"2024-06-13T13:30:02.000Z","description":"大家好，我是白露啊。 今天我想和大家聊一聊关于春招编程语言的选择问题。这个问题其实我一直就想写了，但是之前忘记了···其实白露当年毕业找工作的时候，可谓是一波三折。最沉痛的打击就是在4月份的时候，原本实习转正的部门被优化了，因此只能够被迫毕业前两个月开始“春招”。在当时那个时间，市场上几乎已经...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/nirofi8i3qi3o30w"}},{"title":"5.13 打工人最爱！生产力*5倍的GPT 4，无需网络！半价！","date":"2024-06-13T13:14:38.000Z","urlname":"no39xdu8bghyabg9","is_nav":false,"updated":"2024-06-13T13:18:15.000Z","not_show":false,"description":"大家好，我是白露，专注于全栈开发。今天我想分享一个提高工作效率的秘诀——利用先进的GPT技术。接下来，我将介绍如何以更经济的方式获取并使用这一工具。简言之：以低于官方价格的费用，享受与官方账号无差别的完整功能。一个ChatGPT Plus账号加上一个月的售后服务，市场价格通常在220元左右。即...","cover":"https://cdn.nlark.com/yuque/0/2024/jpeg/22382235/1715774097361-3425b9e5-28a5-415e-8332-4a89ead88836.jpeg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":916,"minutes":3,"text":"3 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/no39xdu8bghyabg9","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/no39xdu8bghyabg9","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/no39xdu8bghyabg9.md","toc":[{"value":"优点","url":"#优点-1","depth":2},{"value":"Q&A","url":"#qa","depth":2},{"value":"如何购买","url":"#如何购买","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.13 打工人最爱！生产力*5倍的GPT 4，无需网络！半价！","datePublished":"2024-06-13T13:14:38.000Z","dateModified":"2024-06-13T13:18:15.000Z","description":"大家好，我是白露，专注于全栈开发。今天我想分享一个提高工作效率的秘诀——利用先进的GPT技术。接下来，我将介绍如何以更经济的方式获取并使用这一工具。简言之：以低于官方价格的费用，享受与官方账号无差别的完整功能。一个ChatGPT Plus账号加上一个月的售后服务，市场价格通常在220元左右。即...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/no39xdu8bghyabg9"}},{"title":"5.5 60*13薪，外包到新疆...去吗？","date":"2024-06-13T13:14:38.000Z","urlname":"oaqqha6cgfddogpl","is_nav":false,"updated":"2024-06-13T13:14:46.000Z","not_show":false,"description":"大家好，我是白露呀。今天我在牛客上看到一篇帖子，一位网友说自己收到一个 offer ，薪资很高：60k*13，大约一年有近80万。但是有个要求是外包到新疆的乌鲁木齐，他拿不定主意，就在牛客上发了这个帖子。然后这个“凡尔赛式”的发言就把网友们给搞懵了，纷纷留下了他们的“祝福”，有网友说“外派月球...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1714996675947-78dddc31-0dcb-43d0-a5a5-505a7e9d1927.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2035,"minutes":7,"text":"7 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/oaqqha6cgfddogpl","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/oaqqha6cgfddogpl","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/oaqqha6cgfddogpl.md","toc":[{"value":"面经开始","url":"#面经开始","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.5 60*13薪，外包到新疆...去吗？","datePublished":"2024-06-13T13:14:38.000Z","dateModified":"2024-06-13T13:14:46.000Z","description":"大家好，我是白露呀。今天我在牛客上看到一篇帖子，一位网友说自己收到一个 offer ，薪资很高：60k*13，大约一年有近80万。但是有个要求是外包到新疆的乌鲁木齐，他拿不定主意，就在牛客上发了这个帖子。然后这个“凡尔赛式”的发言就把网友们给搞懵了，纷纷留下了他们的“祝福”，有网友说“外派月球...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/oaqqha6cgfddogpl"}},{"title":"5/4 清华毕业：今年的暑期实习很不乐观···","date":"2024-06-13T13:14:38.000Z","urlname":"puv1lz3y958v4ies","is_nav":false,"updated":"2024-06-13T13:29:54.000Z","not_show":false,"description":"今天有个清华的粉丝在群里发出一个感叹：今年暑期实习的形势不太乐观，互联网大厂的招聘门槛越来越高，竞争压力前所未有。实习招聘曲折他认识的同学拿到的互联网大厂offer主要集中在美团、阿里、腾讯这三家。他也跟我分享了自己的的春招经历。美团虽然开放岗位早，但流程快速之下隐藏的是无数的不确定性，经常被...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1714702627851-70bf6382-267b-45aa-9765-82a695606f69.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":4316,"minutes":14,"text":"14 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/puv1lz3y958v4ies","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/puv1lz3y958v4ies","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/puv1lz3y958v4ies.md","toc":[{"value":"实习招聘曲折","url":"#实习招聘曲折","depth":2},{"value":"面经分享","url":"#面经分享-2","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5/4 清华毕业：今年的暑期实习很不乐观···","datePublished":"2024-06-13T13:14:38.000Z","dateModified":"2024-06-13T13:29:54.000Z","description":"今天有个清华的粉丝在群里发出一个感叹：今年暑期实习的形势不太乐观，互联网大厂的招聘门槛越来越高，竞争压力前所未有。实习招聘曲折他认识的同学拿到的互联网大厂offer主要集中在美团、阿里、腾讯这三家。他也跟我分享了自己的的春招经历。美团虽然开放岗位早，但流程快速之下隐藏的是无数的不确定性，经常被...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/puv1lz3y958v4ies"}},{"title":"5/2 美团实习","date":"2024-06-13T13:14:38.000Z","urlname":"rflb7oxc3ugweal0","is_nav":false,"updated":"2024-06-13T13:29:46.000Z","not_show":false,"description":"面试官: 嗨，欢迎来到美团的后端面试。我们今天会讨论一些技术问题，先从基础开始。你能给我讲讲HashMap的原理以及它为什么线程不安全吗？还有，红黑树的结构是怎样的？求职者: 当然可以。HashMap的原理基于散列表，它通过hashcode来计算键的存储索引。由于多线程同时修改HashMap可...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1714524504982-5895272f-aa56-4611-b140-f196338fbb67.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1909,"minutes":6,"text":"6 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/rflb7oxc3ugweal0","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/rflb7oxc3ugweal0","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/rflb7oxc3ugweal0.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5/2 美团实习","datePublished":"2024-06-13T13:14:38.000Z","dateModified":"2024-06-13T13:29:46.000Z","description":"面试官: 嗨，欢迎来到美团的后端面试。我们今天会讨论一些技术问题，先从基础开始。你能给我讲讲HashMap的原理以及它为什么线程不安全吗？还有，红黑树的结构是怎样的？求职者: 当然可以。HashMap的原理基于散列表，它通过hashcode来计算键的存储索引。由于多线程同时修改HashMap可...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/rflb7oxc3ugweal0"}},{"title":"5.12 在国企工作的人。。。躺平了吗？","date":"2024-06-13T13:14:38.000Z","urlname":"ri9ghkuk8bxsazsi","is_nav":false,"updated":"2024-06-13T13:14:45.000Z","not_show":false,"description":"大家好，我是白露，全栈工程师。昨天和几个在互联网工作的朋友吃饭，其中有两个朋友抱怨道，现在互联网的工作节奏实在是太大了，真的想找个国企躺平了。这个时候，旁边从国企跳槽到互联网的朋友开口说：在国企工作，其实不是那么容易躺平的。他说，你们早应该对国企祛魅才对。接着他说了很多之前工作的事情，我总结了...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2031,"minutes":7,"text":"7 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/ri9ghkuk8bxsazsi","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/ri9ghkuk8bxsazsi","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/ri9ghkuk8bxsazsi.md","toc":[{"value":"问:如何把一个文件快速下发到100w个服务器？","url":"#问如何把一个文件快速下发到100w个服务器","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.12 在国企工作的人。。。躺平了吗？","datePublished":"2024-06-13T13:14:38.000Z","dateModified":"2024-06-13T13:14:45.000Z","description":"大家好，我是白露，全栈工程师。昨天和几个在互联网工作的朋友吃饭，其中有两个朋友抱怨道，现在互联网的工作节奏实在是太大了，真的想找个国企躺平了。这个时候，旁边从国企跳槽到互联网的朋友开口说：在国企工作，其实不是那么容易躺平的。他说，你们早应该对国企祛魅才对。接着他说了很多之前工作的事情，我总结了...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/ri9ghkuk8bxsazsi"}},{"title":"5.7 字节薪资解密。。张一鸣啥等级？","date":"2024-06-13T13:14:38.000Z","urlname":"vee4zpgz7mnpyi9h","is_nav":false,"updated":"2024-06-13T13:30:13.000Z","not_show":false,"description":"大家好，我是白露啊。 之前说BAT，可能是指百度、阿里、腾讯，但是现在，这个 B，大多数时候指的是字节跳动了。随着抖音系产品的流量持续升温，字节跳动已经是一个毋庸置疑的互联网大厂了，不管是想进去，还是已经入职的，大家其实对一件事情最感兴趣：那就是字节跳动的薪资到底有多少？。今天，我分享一下我从...","cover":"https://cdn.nlark.com/yuque/0/2024/jpeg/22382235/1715176258995-f9432213-e1dc-43e8-9587-72d19f9528d6.jpeg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3379,"minutes":11,"text":"11 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/vee4zpgz7mnpyi9h","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/vee4zpgz7mnpyi9h","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/vee4zpgz7mnpyi9h.md","toc":[{"value":"面经内容","url":"#面经内容","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.7 字节薪资解密。。张一鸣啥等级？","datePublished":"2024-06-13T13:14:38.000Z","dateModified":"2024-06-13T13:30:13.000Z","description":"大家好，我是白露啊。 之前说BAT，可能是指百度、阿里、腾讯，但是现在，这个 B，大多数时候指的是字节跳动了。随着抖音系产品的流量持续升温，字节跳动已经是一个毋庸置疑的互联网大厂了，不管是想进去，还是已经入职的，大家其实对一件事情最感兴趣：那就是字节跳动的薪资到底有多少？。今天，我分享一下我从...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/vee4zpgz7mnpyi9h"}},{"title":"5.8 华为校招上岸50w？揭秘华为职级薪资体系。。","date":"2024-06-13T13:14:38.000Z","urlname":"ypafbgby31t8s0ek","is_nav":false,"updated":"2024-06-13T13:30:36.000Z","not_show":false,"description":"大家好，我是白露啊。之前昨天聊字节的薪资职级的时候，有朋友留言，华为校招上岸是不是就50W？那我们今天就聊一聊华为。华为，作为国内知名的公司，薪资待遇和所谓的\"狼性文化\"一直是业界讨论的焦点。职级体系和薪资如下。其实大部分的校招生，入职就14~15左右，应该是拿不到50W的，普遍在30W左右但...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1715179697854-2e75c9a1-3e08-4cc3-a8d1-20c43c4a92c8.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2741,"minutes":9,"text":"9 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/ypafbgby31t8s0ek","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/ypafbgby31t8s0ek","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/ypafbgby31t8s0ek.md","toc":[{"value":"职级到底是怎么算的","url":"#职级到底是怎么算的","depth":2},{"value":"现在的华为还值得我们去吗？","url":"#现在的华为还值得我们去吗","depth":2},{"value":"面试【开始面试】","url":"#面试开始面试-1","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.8 华为校招上岸50w？揭秘华为职级薪资体系。。","datePublished":"2024-06-13T13:14:38.000Z","dateModified":"2024-06-13T13:30:36.000Z","description":"大家好，我是白露啊。之前昨天聊字节的薪资职级的时候，有朋友留言，华为校招上岸是不是就50W？那我们今天就聊一聊华为。华为，作为国内知名的公司，薪资待遇和所谓的\"狼性文化\"一直是业界讨论的焦点。职级体系和薪资如下。其实大部分的校招生，入职就14~15左右，应该是拿不到50W的，普遍在30W左右但...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/ypafbgby31t8s0ek"}},{"title":"5.23 一个年薪80w+的方向，我也入局了。。。","date":"2024-06-13T13:14:37.000Z","urlname":"gqkotrulk2fbi053","is_nav":false,"updated":"2024-06-13T13:14:44.000Z","not_show":false,"description":"旱的旱死、涝的涝死？大家好，我是白露。现在的市场可以说是，旱的旱死、涝的涝死！应该不用我说，大家都知道，24年甚至未来近几年，最热的技术还得是——AIGC！！随着先进人工智能的崛起，众多科技公司纷纷大规模扩充相关领域的人才。算法岗位在过去三个月里增长了68%，这一现象在HR圈内引起了极大的震动...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22389147/1716645803838-e567d636-85a4-49d5-907c-3cab243e8f40.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1921,"minutes":6,"text":"6 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/gqkotrulk2fbi053","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/gqkotrulk2fbi053","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/gqkotrulk2fbi053.md","toc":[{"value":"旱的旱死、涝的涝死？","url":"#旱的旱死涝的涝死","depth":2},{"value":"来，看看面试题目","url":"#来看看面试题目","depth":2},{"value":"示例案解析","url":"#示例案解析","depth":2},{"value":"要想获得AI职位，我要做什么？","url":"#要想获得ai职位我要做什么","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.23 一个年薪80w+的方向，我也入局了。。。","datePublished":"2024-06-13T13:14:37.000Z","dateModified":"2024-06-13T13:14:44.000Z","description":"旱的旱死、涝的涝死？大家好，我是白露。现在的市场可以说是，旱的旱死、涝的涝死！应该不用我说，大家都知道，24年甚至未来近几年，最热的技术还得是——AIGC！！随着先进人工智能的崛起，众多科技公司纷纷大规模扩充相关领域的人才。算法岗位在过去三个月里增长了68%，这一现象在HR圈内引起了极大的震动...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/gqkotrulk2fbi053"}},{"title":"5.13 GPT-4o的发布，留给程序员的后路不多了。。。","date":"2024-06-13T13:14:37.000Z","urlname":"gz4ygukzz7p6k1rg","is_nav":false,"updated":"2024-06-13T13:14:45.000Z","not_show":false,"description":"https://juejin.cn/post/6920517654323298311大家好，我是白露，全栈工程师。今天凌晨，OpenAI发布了GPT-4o。然后，朋友圈就炸了。一方面是大部分搞 ai的朋友在狂欢，aigc已来！另一方面，是其他领域的朋友在反思、苦笑、焦虑，特别是程序员：我还还要...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2056,"minutes":7,"text":"7 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/gz4ygukzz7p6k1rg","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/gz4ygukzz7p6k1rg","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/gz4ygukzz7p6k1rg.md","toc":[{"value":"如何设计微信抢红包功能？","url":"#如何设计微信抢红包功能","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.13 GPT-4o的发布，留给程序员的后路不多了。。。","datePublished":"2024-06-13T13:14:37.000Z","dateModified":"2024-06-13T13:14:45.000Z","description":"https://juejin.cn/post/6920517654323298311大家好，我是白露，全栈工程师。今天凌晨，OpenAI发布了GPT-4o。然后，朋友圈就炸了。一方面是大部分搞 ai的朋友在狂欢，aigc已来！另一方面，是其他领域的朋友在反思、苦笑、焦虑，特别是程序员：我还还要...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/gz4ygukzz7p6k1rg"}},{"title":"5.18 双 9 科班：实习难求，认命，总结，反思。。。","date":"2024-06-13T13:14:37.000Z","urlname":"ir4p81l1hm0s13hm","is_nav":false,"updated":"2024-06-13T13:14:44.000Z","not_show":false,"description":"大家好，我是白露啊。 今天，我偶然刷到了一篇帖子，一位寻找实习的同学的艰辛历程，现在不得不接受实习找不到的尴尬境地。让白露遗憾的是，这位同学看起来是很努力地在准备，但是不得不说，时间和方向弄错了，大家已经要引以为戒！我将他这段时间的经历，简单整理了一下：3月开始准备，刷了一个月leetcode...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1716131990587-364f0093-1192-4812-95a9-00c71ac86bd2.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2072,"minutes":7,"text":"7 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/ir4p81l1hm0s13hm","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/ir4p81l1hm0s13hm","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/ir4p81l1hm0s13hm.md","toc":[{"value":"面试开始！","url":"#面试开始","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.18 双 9 科班：实习难求，认命，总结，反思。。。","datePublished":"2024-06-13T13:14:37.000Z","dateModified":"2024-06-13T13:14:44.000Z","description":"大家好，我是白露啊。 今天，我偶然刷到了一篇帖子，一位寻找实习的同学的艰辛历程，现在不得不接受实习找不到的尴尬境地。让白露遗憾的是，这位同学看起来是很努力地在准备，但是不得不说，时间和方向弄错了，大家已经要引以为戒！我将他这段时间的经历，简单整理了一下：3月开始准备，刷了一个月leetcode...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/ir4p81l1hm0s13hm"}},{"title":"5.20 8个面试，已经给了6个offer了，我该咋办。。","date":"2024-06-13T13:14:37.000Z","urlname":"iuxt4arg489m7mmr","is_nav":false,"updated":"2024-06-13T13:14:45.000Z","not_show":false,"description":"大家好，我是白露啊。今天偶然看到一个帖子，我都有点看懵了。帖子下面的评论全都破防了。。。然后一大堆网友开始“举报”。老实说，混迹论坛这么多年，我还是“头一回在评论区见到这么多举报截图哈哈哈哈”。为什么大家都破防了呢？因为现在的大背景下，求职越来越难，一个offer都拿不到的同学大有人在。这也是...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1716217039531-8de55ce8-bdc9-48af-8381-7cddd0ac7a1a.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":443,"minutes":1,"text":"1 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/iuxt4arg489m7mmr","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/iuxt4arg489m7mmr","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/iuxt4arg489m7mmr.md","toc":[{"value":"两数之和","url":"#两数之和-1","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.20 8个面试，已经给了6个offer了，我该咋办。。","datePublished":"2024-06-13T13:14:37.000Z","dateModified":"2024-06-13T13:14:45.000Z","description":"大家好，我是白露啊。今天偶然看到一个帖子，我都有点看懵了。帖子下面的评论全都破防了。。。然后一大堆网友开始“举报”。老实说，混迹论坛这么多年，我还是“头一回在评论区见到这么多举报截图哈哈哈哈”。为什么大家都破防了呢？因为现在的大背景下，求职越来越难，一个offer都拿不到的同学大有人在。这也是...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/iuxt4arg489m7mmr"}},{"title":"5.21 淘宝618，不如拼多多，揭秘拼多多薪资体系","date":"2024-06-13T13:14:37.000Z","urlname":"lo1umogty242l1pn","is_nav":false,"updated":"2024-06-13T13:31:10.000Z","not_show":false,"description":"大家好，我是白露啊。刚有朋友问我：淘宝618开始了，怎么拼多多还没有动静啊？我笑说，对于拼多多来说，每天都是618 。至于淘宝618，已经逐渐沦为耍猴的活动。比如最近淘宝618的活动，88会员可以拿到一张消费券，5000-400。然后那些商家立马涨价三四百，优惠之后的价格跟之前的几乎一样，甚至...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1716469571085-ee3e57d0-9d53-4700-bf3f-055fb2af01fd.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2036,"minutes":7,"text":"7 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/lo1umogty242l1pn","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/lo1umogty242l1pn","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/lo1umogty242l1pn.md","toc":[{"value":"面试【开始面试】","url":"#面试开始面试","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.21 淘宝618，不如拼多多，揭秘拼多多薪资体系","datePublished":"2024-06-13T13:14:37.000Z","dateModified":"2024-06-13T13:31:10.000Z","description":"大家好，我是白露啊。刚有朋友问我：淘宝618开始了，怎么拼多多还没有动静啊？我笑说，对于拼多多来说，每天都是618 。至于淘宝618，已经逐渐沦为耍猴的活动。比如最近淘宝618的活动，88会员可以拿到一张消费券，5000-400。然后那些商家立马涨价三四百，优惠之后的价格跟之前的几乎一样，甚至...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/lo1umogty242l1pn"}},{"title":"5.16 8岁编程，20岁创业：GPT创始人的Sam Altman的简历。。。","date":"2024-06-13T13:14:37.000Z","urlname":"mbh6cq201quvnvv8","is_nav":false,"updated":"2024-06-13T13:31:00.000Z","not_show":false,"description":"大家好，我是白露，全栈开发。OpenAI 发布GPT-4o的消息又双叒刷屏了。大家都在说它多好用、多先进的时候……我反问了一句：谁造就了它？细数整个GPT爆火的背后，都离不开OpenAI 的CEO——Sam Altman，网友亲切的称之为“奥特曼”。我们直接来看看这位大佬的简历吧：20岁辍学创...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1715951640662-a96f5b52-0687-40c3-9dba-238407609dc6.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2683,"minutes":9,"text":"9 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/mbh6cq201quvnvv8","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/mbh6cq201quvnvv8","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/mbh6cq201quvnvv8.md","toc":[{"value":"20岁辍学创业","url":"#20岁辍学创业","depth":2},{"value":"\"董事风波\"","url":"#董事风波","depth":2},{"value":"面试开始","url":"#面试开始-1","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.16 8岁编程，20岁创业：GPT创始人的Sam Altman的简历。。。","datePublished":"2024-06-13T13:14:37.000Z","dateModified":"2024-06-13T13:31:00.000Z","description":"大家好，我是白露，全栈开发。OpenAI 发布GPT-4o的消息又双叒刷屏了。大家都在说它多好用、多先进的时候……我反问了一句：谁造就了它？细数整个GPT爆火的背后，都离不开OpenAI 的CEO——Sam Altman，网友亲切的称之为“奥特曼”。我们直接来看看这位大佬的简历吧：20岁辍学创...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/mbh6cq201quvnvv8"}},{"title":"5.14 南开毕业：金三银四结束了，听说还有铜五铁六。。。","date":"2024-06-13T13:14:37.000Z","urlname":"nd0ixdhsozud7vuy","is_nav":false,"updated":"2024-06-13T13:14:45.000Z","not_show":false,"description":"大家好，我是白露，全栈开发。大家经常都说春招是金三银四。说明在三月之前找到工作的难度最低，找的公司也最好；四月次之。毕竟好的公司，面试的人数往往远大于在实际招聘人数，因此招聘的时候都是时间越靠前，获得 offer 的难度更低。今天在论坛看到一个南开大学的同学发的帖子，分享给大家：看到这样的帖子...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1715778941545-c31980d3-0ba9-4d5a-918b-91eb1f278326.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1793,"minutes":6,"text":"6 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/nd0ixdhsozud7vuy","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/nd0ixdhsozud7vuy","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/nd0ixdhsozud7vuy.md","toc":[{"value":"开始面试","url":"#开始面试-4","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.14 南开毕业：金三银四结束了，听说还有铜五铁六。。。","datePublished":"2024-06-13T13:14:37.000Z","dateModified":"2024-06-13T13:14:45.000Z","description":"大家好，我是白露，全栈开发。大家经常都说春招是金三银四。说明在三月之前找到工作的难度最低，找的公司也最好；四月次之。毕竟好的公司，面试的人数往往远大于在实际招聘人数，因此招聘的时候都是时间越靠前，获得 offer 的难度更低。今天在论坛看到一个南开大学的同学发的帖子，分享给大家：看到这样的帖子...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/nd0ixdhsozud7vuy"}},{"title":"5.17 回寒啦，今年的工作比明年好找。。","date":"2024-06-13T13:14:37.000Z","urlname":"uhb41g1tpsf7cbqo","is_nav":false,"updated":"2024-06-13T13:14:45.000Z","not_show":false,"description":"大家好，我是白露。今儿个半夜，我在牛客里溜达，一不小心就瞄到这么一句话：等我反应过来，我就乐了，这话太有意思了！我差点儿没把手机给扔了，哈哈，这不是明摆着的反话嘛！啊，说真的，要是大胆宣布“今年工作好找了，比去年容易多了”，那估计得挨一顿炮轰，没人信吧，即便今年稍微宽松那么一丁点儿。但话锋一转...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1716043232035-f7e873e7-eddc-4bf8-928b-0271375654d4.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2696,"minutes":9,"text":"9 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/uhb41g1tpsf7cbqo","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/uhb41g1tpsf7cbqo","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/uhb41g1tpsf7cbqo.md","toc":[{"value":"场景题：实现一个登录拉黑功能","url":"#场景题实现一个登录拉黑功能","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.17 回寒啦，今年的工作比明年好找。。","datePublished":"2024-06-13T13:14:37.000Z","dateModified":"2024-06-13T13:14:45.000Z","description":"大家好，我是白露。今儿个半夜，我在牛客里溜达，一不小心就瞄到这么一句话：等我反应过来，我就乐了，这话太有意思了！我差点儿没把手机给扔了，哈哈，这不是明摆着的反话嘛！啊，说真的，要是大胆宣布“今年工作好找了，比去年容易多了”，那估计得挨一顿炮轰，没人信吧，即便今年稍微宽松那么一丁点儿。但话锋一转...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/uhb41g1tpsf7cbqo"}},{"title":"5.29 寒冬来了，字节跳动开启裁员新模式。。","date":"2024-06-13T13:14:37.000Z","urlname":"xkmfsfmiumxogo0z","is_nav":false,"updated":"2024-06-13T13:14:44.000Z","not_show":false,"description":"大家好，我是白露啊。不得不说，字节跳动还是真的会搞事啊。最近一段时间，字节搞出了一个裁员新模式：“细水长流”。这个寓意和“财（裁）源（员）广进”计划差不多了，只不过比较含蓄了。在一个著名社交平台上里，有字节员工发帖称，HR透露北京已经裁员到了不让裁员的地步。相比过去的一次性大规模裁员，目前字节...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1716905308210-c5848a68-e0ca-4acd-8cc3-7e7643f9c671.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1204,"minutes":4,"text":"4 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/xkmfsfmiumxogo0z","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/xkmfsfmiumxogo0z","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/xkmfsfmiumxogo0z.md","toc":[{"value":"开始面试","url":"#开始面试-5","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.29 寒冬来了，字节跳动开启裁员新模式。。","datePublished":"2024-06-13T13:14:37.000Z","dateModified":"2024-06-13T13:14:44.000Z","description":"大家好，我是白露啊。不得不说，字节跳动还是真的会搞事啊。最近一段时间，字节搞出了一个裁员新模式：“细水长流”。这个寓意和“财（裁）源（员）广进”计划差不多了，只不过比较含蓄了。在一个著名社交平台上里，有字节员工发帖称，HR透露北京已经裁员到了不让裁员的地步。相比过去的一次性大规模裁员，目前字节...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/xkmfsfmiumxogo0z"}},{"title":"5.28 618还没过，京东就“暴雷”了！","date":"2024-06-13T13:14:37.000Z","urlname":"yq9gp8ec15blqt55","is_nav":false,"updated":"2024-06-13T13:31:23.000Z","not_show":false,"description":"不拼博，不是我的兄弟京东每月1.4万人次代打卡，每次收费15元？新规要求午休时间缩短为一小时，不得关灯目前，京东针对此问题严抓考勤，午休时间由两小时缩短为一小时，且取消午休关灯。在此背景下，京东创始人、董事会主席刘强东在日前的高管会上直言：“凡是长期业绩不好，从来不拼搏的人，不是我的兄弟。”但...","cover":"https://cdn.nlark.com/yuque/0/2024/jpeg/22389147/1716901686253-b01d06ae-151f-4ab2-b86b-ee59ceadf7ab.jpeg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2095,"minutes":7,"text":"7 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/yq9gp8ec15blqt55","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/yq9gp8ec15blqt55","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/yq9gp8ec15blqt55.md","toc":[{"value":"不拼博，不是我的兄弟","url":"#不拼博不是我的兄弟","depth":1},{"value":"京东面经分享","url":"#京东面经分享","depth":1},{"value":"请解释一下RESTful API的设计原则，并举例说明。","url":"#请解释一下restful-api的设计原则并举例说明","depth":3},{"value":"2.介绍一下常用的缓存策略以及如何在应用中有效利用缓存。","url":"#2介绍一下常用的缓存策略以及如何在应用中有效利用缓存","depth":3},{"value":"3.如何处理长时间运行的任务？请举例说明。","url":"#3如何处理长时间运行的任务请举例说明","depth":3},{"value":"总结","url":"#总结-22","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.28 618还没过，京东就“暴雷”了！","datePublished":"2024-06-13T13:14:37.000Z","dateModified":"2024-06-13T13:31:23.000Z","description":"不拼博，不是我的兄弟京东每月1.4万人次代打卡，每次收费15元？新规要求午休时间缩短为一小时，不得关灯目前，京东针对此问题严抓考勤，午休时间由两小时缩短为一小时，且取消午休关灯。在此背景下，京东创始人、董事会主席刘强东在日前的高管会上直言：“凡是长期业绩不好，从来不拼搏的人，不是我的兄弟。”但...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/yq9gp8ec15blqt55"}},{"title":"5 月","date":"2024-06-13T13:14:36.000Z","urlname":"gc18uuv6s0o0k5b0","is_nav":false,"nav_path":"20245","updated":"2024-06-25T13:50:34.000Z","skip_nav":false,"not_show":false,"description":"---is_nav: falsenav_path: '20245'skip_nav: false---","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":0,"minutes":0,"text":"小于一分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/gc18uuv6s0o0k5b0","path":"docs/doc/💹 大厂面经/拿下面试官实战/gc18uuv6s0o0k5b0","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/gc18uuv6s0o0k5b0.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5 月","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-25T13:50:34.000Z","description":"---is_nav: falsenav_path: '20245'skip_nav: false---","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/gc18uuv6s0o0k5b0"}},{"title":"5.31 这。。24届毕业生24.9%学生0 Offer？","date":"2024-06-13T13:14:36.000Z","urlname":"fi7t6871nzglh4zr","is_nav":false,"updated":"2024-06-13T13:14:44.000Z","not_show":false,"description":"大家好，我是白露啊。据牛客网统计，2024届全国普通高校毕业生预计达到1179万人，同比增加21万人。就业形势比往年更加严峻，每一个毕业生都在这场前所未有的战役中努力拼搏。近期，牛客最新调查显示，24.9%的受访同学仍处于0 Offer的状态。在已经拿到Offer的学生中，普遍手握1-3个。真...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1717080918109-89d69cb4-737f-472e-a104-cb9b59af279f.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2413,"minutes":8,"text":"8 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/fi7t6871nzglh4zr","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/fi7t6871nzglh4zr","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/fi7t6871nzglh4zr.md","toc":[{"value":"还在寻找去处的你，如何脱颖而出？","url":"#还在寻找去处的你如何脱颖而出","depth":3},{"value":"1. 优化简历，提高竞争力","url":"#1-优化简历提高竞争力","depth":4},{"value":"2. 提升自我，拓宽视野","url":"#2-提升自我拓宽视野","depth":4},{"value":"3. 扩大求职渠道，增加机会","url":"#3-扩大求职渠道增加机会","depth":4},{"value":"4. 保持积极心态","url":"#4-保持积极心态","depth":4},{"value":"开始面试","url":"#开始面试","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.31 这。。24届毕业生24.9%学生0 Offer？","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-13T13:14:44.000Z","description":"大家好，我是白露啊。据牛客网统计，2024届全国普通高校毕业生预计达到1179万人，同比增加21万人。就业形势比往年更加严峻，每一个毕业生都在这场前所未有的战役中努力拼搏。近期，牛客最新调查显示，24.9%的受访同学仍处于0 Offer的状态。在已经拿到Offer的学生中，普遍手握1-3个。真...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/fi7t6871nzglh4zr"}},{"title":"5.22 计算机专业的爽了，彻底爽了","date":"2024-06-13T13:14:36.000Z","urlname":"gals8do4o84olthy","is_nav":false,"updated":"2024-06-13T13:14:44.000Z","not_show":false,"description":"大家好，我是白露啊。以下内容建议大家“全文背诵“，因为计算机专业的彻底“爽了”，是计算机行业的“新圣经”！都说计算机专业的毕业生，一门技能走遍天下，哪怕是出门倒垃圾，风都绕道走。 招聘会上，大厂、国企、外企争相抢人，老板们为了讨好我们计算机专业出身的职工，不仅给安排单独的豪华办公室和住宿，甚至...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1717079456648-e357efbf-620e-45b8-a8a7-36704278fba3.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2724,"minutes":9,"text":"9 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/gals8do4o84olthy","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/gals8do4o84olthy","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/gals8do4o84olthy.md","toc":[{"value":"面试圣经","url":"#面试圣经","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.22 计算机专业的爽了，彻底爽了","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-13T13:14:44.000Z","description":"大家好，我是白露啊。以下内容建议大家“全文背诵“，因为计算机专业的彻底“爽了”，是计算机行业的“新圣经”！都说计算机专业的毕业生，一门技能走遍天下，哪怕是出门倒垃圾，风都绕道走。 招聘会上，大厂、国企、外企争相抢人，老板们为了讨好我们计算机专业出身的职工，不仅给安排单独的豪华办公室和住宿，甚至...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/gals8do4o84olthy"}},{"title":"5.32 不愧是华为，这个薪资离谱了。。","date":"2024-06-13T13:14:36.000Z","urlname":"giwtq6xgghxutcwr","is_nav":false,"updated":"2024-06-13T13:14:44.000Z","not_show":false,"description":"大家好，我是白露啊。 在我的博客、博客分享网站的留言里，经常能够看到学生问“华为应届生薪资是多少？”、“评级13级对应的总包有多少？”等等问题。今天想和大家讨论一下华为这个神奇的存在。不愧是华为，这薪资真的令人惊叹啊！  拿好小本本，记下来吧！ 🔹智能制造与精密制造工程师：13.5k * 1...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1717080395966-8bb343ec-c196-4911-a4b0-e13476f3def8.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1551,"minutes":5,"text":"5 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/giwtq6xgghxutcwr","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/giwtq6xgghxutcwr","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/giwtq6xgghxutcwr.md","toc":[{"value":"开始面试","url":"#开始面试-1","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.32 不愧是华为，这个薪资离谱了。。","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-13T13:14:44.000Z","description":"大家好，我是白露啊。 在我的博客、博客分享网站的留言里，经常能够看到学生问“华为应届生薪资是多少？”、“评级13级对应的总包有多少？”等等问题。今天想和大家讨论一下华为这个神奇的存在。不愧是华为，这薪资真的令人惊叹啊！  拿好小本本，记下来吧！ 🔹智能制造与精密制造工程师：13.5k * 1...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/giwtq6xgghxutcwr"}},{"title":"5.30 从字节跳槽去国企，我真的很后悔了。","date":"2024-06-13T13:14:36.000Z","urlname":"guhokgyv4b2gngzx","is_nav":false,"updated":"2024-06-13T13:14:44.000Z","not_show":false,"description":"大家好，我是白露啊。 今天和大家分享一位前字节跳动产品经理的故事。他曾经是字节的一员，职级2-2。他从字节跳槽到国企，感觉肠子都悔青了，如下。我是一名前字节跳动的产品经理，职级2-2。 2019年的时候，我还在小厂打拼，收到字节的面试邀请，我难以抑制内心的激动，这是我梦寐以求的大厂啊。 通过面...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1717077322078-c35a0496-50fc-4b7c-8f58-5679ee009596.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2752,"minutes":9,"text":"9 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/5 月/guhokgyv4b2gngzx","path":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/guhokgyv4b2gngzx","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/5 月/guhokgyv4b2gngzx.md","toc":[{"value":"开始面试","url":"#开始面试-2","depth":1},{"value":"","url":"#-15","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.30 从字节跳槽去国企，我真的很后悔了。","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-13T13:14:44.000Z","description":"大家好，我是白露啊。 今天和大家分享一位前字节跳动产品经理的故事。他曾经是字节的一员，职级2-2。他从字节跳槽到国企，感觉肠子都悔青了，如下。我是一名前字节跳动的产品经理，职级2-2。 2019年的时候，我还在小厂打拼，收到字节的面试邀请，我难以抑制内心的激动，这是我梦寐以求的大厂啊。 通过面...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/5 月/guhokgyv4b2gngzx"}},{"title":"6.8 阎王爷背上是不是纹的拼多多？","date":"2024-06-13T13:14:36.000Z","urlname":"ab8nllkdlh7p3inz","is_nav":false,"updated":"2024-06-13T13:14:43.000Z","not_show":false,"description":"大家好，我是白露啊。昨天端午在刷帖子的时候，看到一个让人哭笑不得的吐槽，忍不住要和大家分享一下。帖子的标题是：“阎王爷背上是不是纹的拼多多”，接着是一段满满都是血泪的控诉。这哪里是工作，简直像是进“十八层地狱”。不仅工时长得吓人，每一分钟都被盯着，连喝水上厕所都成问题，忍不住感叹周扒皮遇到这种...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1717948488993-a3d95deb-95ee-43f9-93aa-345c5f125dfc.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":984,"minutes":3,"text":"3 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/ab8nllkdlh7p3inz","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/ab8nllkdlh7p3inz","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/ab8nllkdlh7p3inz.md","toc":[{"value":"开始面试","url":"#开始面试-6","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.8 阎王爷背上是不是纹的拼多多？","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-13T13:14:43.000Z","description":"大家好，我是白露啊。昨天端午在刷帖子的时候，看到一个让人哭笑不得的吐槽，忍不住要和大家分享一下。帖子的标题是：“阎王爷背上是不是纹的拼多多”，接着是一段满满都是血泪的控诉。这哪里是工作，简直像是进“十八层地狱”。不仅工时长得吓人，每一分钟都被盯着，连喝水上厕所都成问题，忍不住感叹周扒皮遇到这种...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/ab8nllkdlh7p3inz"}},{"title":"6.2 美团实习，感觉部门很穷，要去吗？","date":"2024-06-13T13:14:36.000Z","urlname":"ami3m0g2n2amiklt","is_nav":false,"updated":"2024-06-13T13:14:43.000Z","not_show":false,"description":"大家好，我是白露啊。最近有位同学在美团实习，感觉部门有点穷……为什么呢？因为对部门的设备表示有些失望。他说刚来没两天，领到的是一台2019款的MacBook，感觉有点拉胯。看到正式员工——大多数是2021年入职的——用的也是同款设备，就更加怀疑是不是部门太穷了，没经费换新的设备。评论区有网友也...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1717461498054-e0cb1ecc-724f-4400-bb83-ed8f6a50a0ab.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2276,"minutes":8,"text":"8 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/ami3m0g2n2amiklt","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/ami3m0g2n2amiklt","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/ami3m0g2n2amiklt.md","toc":[{"value":"部门“太穷”？ 别急，先了解一下","url":"#部门太穷-别急先了解一下","depth":3},{"value":"最重要的是","url":"#最重要的是","depth":3},{"value":"我的一点建议","url":"#我的一点建议","depth":3},{"value":"开始面试","url":"#开始面试-7","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.2 美团实习，感觉部门很穷，要去吗？","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-13T13:14:43.000Z","description":"大家好，我是白露啊。最近有位同学在美团实习，感觉部门有点穷……为什么呢？因为对部门的设备表示有些失望。他说刚来没两天，领到的是一台2019款的MacBook，感觉有点拉胯。看到正式员工——大多数是2021年入职的——用的也是同款设备，就更加怀疑是不是部门太穷了，没经费换新的设备。评论区有网友也...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/ami3m0g2n2amiklt"}},{"title":"6.10 双非本科一年20w，已是人中龙凤了","date":"2024-06-13T13:14:36.000Z","urlname":"bo3u73tfp6ek94n6","is_nav":false,"updated":"2024-08-25T08:35:33.000Z","not_show":false,"description":"大家好，我是白露啊。 “双非本科一年20w已经是人中龙凤了”……吗？牛客上刷到这条帖子，我一开始以为是一个钓鱼、引战贴。看完才觉得他说的很对，现在在求职选择工作的时候，网上都觉得得40万、50万，但当真没必要那么焦虑，因为那毕竟是少数。各位同学，不要被牛客、脉脉等论坛上“公布”的薪资给打击到了...\r","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1718197592810-0a2f2074-a697-4090-9e64-9bb18cf99ae9.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1715,"minutes":6,"text":"6 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/bo3u73tfp6ek94n6","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/bo3u73tfp6ek94n6","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/bo3u73tfp6ek94n6.md","toc":[{"value":"字节跳动-国际电商","url":"#字节跳动-国际电商","depth":1},{"value":"","url":"#-16","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.10 双非本科一年20w，已是人中龙凤了","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-08-25T08:35:33.000Z","description":"大家好，我是白露啊。 “双非本科一年20w已经是人中龙凤了”……吗？牛客上刷到这条帖子，我一开始以为是一个钓鱼、引战贴。看完才觉得他说的很对，现在在求职选择工作的时候，网上都觉得得40万、50万，但当真没必要那么焦虑，因为那毕竟是少数。各位同学，不要被牛客、脉脉等论坛上“公布”的薪资给打击到了...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/bo3u73tfp6ek94n6"}},{"title":"6.9 小公司要求真高","date":"2024-06-13T13:14:36.000Z","urlname":"chzybsqqhaq6arob","is_nav":false,"updated":"2024-06-13T13:14:43.000Z","not_show":false,"description":"https://www.nowcoder.com/feed/main/detail/6d73c0bef74a4ea6bd2d68ce7cd0e9b4大家好，我是白露啊。最近看到一个爽文帖，标题就是——“小公司要求真高”。事情是这样的，一家的小公司在拿到简历之后，HR直接对楼主说：“你不合适，简...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1717949289930-a385e4b9-6963-4802-95a9-0d0351f39960.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1635,"minutes":5,"text":"5 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/chzybsqqhaq6arob","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/chzybsqqhaq6arob","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/chzybsqqhaq6arob.md","toc":[{"value":"","url":"#-17","depth":3},{"value":"开始面试","url":"#开始面试-8","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.9 小公司要求真高","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-13T13:14:43.000Z","description":"https://www.nowcoder.com/feed/main/detail/6d73c0bef74a4ea6bd2d68ce7cd0e9b4大家好，我是白露啊。最近看到一个爽文帖，标题就是——“小公司要求真高”。事情是这样的，一家的小公司在拿到简历之后，HR直接对楼主说：“你不合适，简...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/chzybsqqhaq6arob"}},{"title":"6.5 来腾讯第4天，我已经焦虑昏了啊！","date":"2024-06-13T13:14:36.000Z","urlname":"gm1xmcdrvteelkgi","is_nav":false,"updated":"2024-06-13T13:29:27.000Z","not_show":false,"description":"大家好，我是白露啊。今天在看到一个实习生在抱怨，给我笑惨了。标题是：“腾讯实习第4天，焦虑昏了”！他写道：“怎么办啊牛爷爷们，什么都不会。业务看不懂，文档看不懂，他们说的听不懂。整个人是空洞的，茫然无措。真怕被干掉，我该怎么办啊😭😭😭😭😭”读到这话，不禁让我想起自己刚入职时的场景，内...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1717683261567-39fcd3a4-7ab6-4e77-add9-6a6b4cf555a2.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1511,"minutes":5,"text":"5 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/gm1xmcdrvteelkgi","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/gm1xmcdrvteelkgi","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/gm1xmcdrvteelkgi.md","toc":[{"value":"实习初期，如何克服焦虑？","url":"#实习初期如何克服焦虑","depth":3},{"value":"开始面试","url":"#开始面试-9","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.5 来腾讯第4天，我已经焦虑昏了啊！","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-13T13:29:27.000Z","description":"大家好，我是白露啊。今天在看到一个实习生在抱怨，给我笑惨了。标题是：“腾讯实习第4天，焦虑昏了”！他写道：“怎么办啊牛爷爷们，什么都不会。业务看不懂，文档看不懂，他们说的听不懂。整个人是空洞的，茫然无措。真怕被干掉，我该怎么办啊😭😭😭😭😭”读到这话，不禁让我想起自己刚入职时的场景，内...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/gm1xmcdrvteelkgi"}},{"title":"6.4 现在卷疯了，HR都怀疑人生，大二做三项目。。","date":"2024-06-13T13:14:36.000Z","urlname":"lg7x0n2rrs6akt2r","is_nav":false,"updated":"2024-06-13T13:29:24.000Z","not_show":false,"description":"大家好，我是白露。今天看到一条让人哭笑不得的帖子，标题是：“哎，世界已经卷到连HR都不相信了”。随后还附了一张对话截图：HR：你大二做三个系统？真的？同学：有人大二几个大厂实习，我几个项目不过分吧。这对话看得我差点笑喷了。卷，真的卷到让HR都怀疑人生了。更有意思的是，这篇帖子的评论区也是各种精...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1717509206724-0b9850df-efab-4e2b-8fbb-83dffa3029b1.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2274,"minutes":8,"text":"8 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/lg7x0n2rrs6akt2r","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/lg7x0n2rrs6akt2r","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/lg7x0n2rrs6akt2r.md","toc":[{"value":"应对“卷”的策略","url":"#应对卷的策略","depth":3},{"value":"开始面试","url":"#开始面试-10","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.4 现在卷疯了，HR都怀疑人生，大二做三项目。。","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-13T13:29:24.000Z","description":"大家好，我是白露。今天看到一条让人哭笑不得的帖子，标题是：“哎，世界已经卷到连HR都不相信了”。随后还附了一张对话截图：HR：你大二做三个系统？真的？同学：有人大二几个大厂实习，我几个项目不过分吧。这对话看得我差点笑喷了。卷，真的卷到让HR都怀疑人生了。更有意思的是，这篇帖子的评论区也是各种精...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/lg7x0n2rrs6akt2r"}},{"title":"6.3 学历差，就不能学计算机？扯","date":"2024-06-13T13:14:36.000Z","urlname":"obr7vwumxdr170hy","is_nav":false,"updated":"2024-06-13T13:14:43.000Z","not_show":false,"description":"大家好，我是白露。最近看到一篇帖子，不得不跟大家好好唠嗑唠嗑！这位网友说“真别学计算机了，计算机真是天坑，学历差的真别学了。”然后列举了一些看似正确，实则站不住脚的观点，xs。这话可以说是让我瞠目结舌。今天，白露就好好聊一聊，希望能给大家一些清醒的思考。学历与能力：别总拿学历说事儿没错，学历的...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1717507741102-eba64c0a-1c3f-474c-b789-9fbd816c8ac3.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2734,"minutes":9,"text":"9 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/obr7vwumxdr170hy","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/obr7vwumxdr170hy","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/obr7vwumxdr170hy.md","toc":[{"value":"学历与能力：别总拿学历说事儿","url":"#学历与能力别总拿学历说事儿","depth":3},{"value":"自我实现：别忘了初心","url":"#自我实现别忘了初心","depth":3},{"value":"就业市场需求：计算机专业的黄金地带","url":"#就业市场需求计算机专业的黄金地带","depth":3},{"value":"职业发展前景：别只看眼前，放眼未来","url":"#职业发展前景别只看眼前放眼未来","depth":3},{"value":"持续学习能力：没点硬实力，哪都混不下去","url":"#持续学习能力没点硬实力哪都混不下去","depth":3},{"value":"多样选择：什么香不香，你说了算","url":"#多样选择什么香不香你说了算","depth":3},{"value":"清醒点，别被带节奏","url":"#清醒点别被带节奏","depth":3},{"value":"开始面试","url":"#开始面试-11","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.3 学历差，就不能学计算机？扯","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-13T13:14:43.000Z","description":"大家好，我是白露。最近看到一篇帖子，不得不跟大家好好唠嗑唠嗑！这位网友说“真别学计算机了，计算机真是天坑，学历差的真别学了。”然后列举了一些看似正确，实则站不住脚的观点，xs。这话可以说是让我瞠目结舌。今天，白露就好好聊一聊，希望能给大家一些清醒的思考。学历与能力：别总拿学历说事儿没错，学历的...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/obr7vwumxdr170hy"}},{"title":"6.6 请问开水(美)团除了开水还有什么？","date":"2024-06-13T13:14:36.000Z","urlname":"ot4hbnxm5dhsdeno","is_nav":false,"updated":"2024-06-13T13:14:43.000Z","not_show":false,"description":"大家好，我是白露啊。开水团除了开水，还有啥惊喜呢？免费办公用品，舒适工作环境首先，你知道开水团还能领一些免费的办公用品吗？从基本的文具到高档的鼠标垫，开水团都为员工准备得妥妥的。一个高效的工作环境总是少不了这些小细节的支撑，让你的办公体验更加舒适。记得还有团团周边团团周边可是开水团的一大特色。...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1717947356369-eacc68fd-b324-4150-917f-2f9465073b6c.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1252,"minutes":4,"text":"4 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/ot4hbnxm5dhsdeno","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/ot4hbnxm5dhsdeno","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/ot4hbnxm5dhsdeno.md","toc":[{"value":"免费办公用品，舒适工作环境","url":"#免费办公用品舒适工作环境","depth":3},{"value":"记得还有团团周边","url":"#记得还有团团周边","depth":3},{"value":"福利活动","url":"#福利活动","depth":3},{"value":"内部分享会和培训","url":"#内部分享会和培训","depth":3},{"value":"健康关怀","url":"#健康关怀","depth":3},{"value":"","url":"#-19","depth":3},{"value":"开水团，除了开水还有更多","url":"#开水团除了开水还有更多","depth":3},{"value":"开水团的花式福利，你知道吗？","url":"#开水团的花式福利你知道吗","depth":3},{"value":"","url":"#-20","depth":4},{"value":"开始面试","url":"#开始面试-12","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.6 请问开水(美)团除了开水还有什么？","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-13T13:14:43.000Z","description":"大家好，我是白露啊。开水团除了开水，还有啥惊喜呢？免费办公用品，舒适工作环境首先，你知道开水团还能领一些免费的办公用品吗？从基本的文具到高档的鼠标垫，开水团都为员工准备得妥妥的。一个高效的工作环境总是少不了这些小细节的支撑，让你的办公体验更加舒适。记得还有团团周边团团周边可是开水团的一大特色。...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/ot4hbnxm5dhsdeno"}},{"title":"6.7 这公司是怎么存活的？真的有存在的必要吗？","date":"2024-06-13T13:14:36.000Z","urlname":"ozxzm57oyh321uc5","is_nav":false,"updated":"2024-06-13T13:14:43.000Z","not_show":false,"description":"大家好，我是白露啊。昨天看到一个招聘经历的分享，简直让我怀疑人生。还能有这样的公司？对方HR说：“*** ，学习期间是单休，每天需要加班4-5小时，并且学习期间每天要写工作总结。该岗位的薪资5500元(已包含加班费)+300元全勤，提供食宿，吃饭5元一餐，住宿平摊水电费。”看到这里，大家是不是...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1717773861686-657ff3fa-92b7-43ce-aebd-422a7365daff.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1479,"minutes":5,"text":"5 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/ozxzm57oyh321uc5","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/ozxzm57oyh321uc5","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/ozxzm57oyh321uc5.md","toc":[{"value":"还能有这样的公司？","url":"#还能有这样的公司","depth":3},{"value":"单休+每天加班4-5小时？","url":"#单休每天加班4-5小时","depth":3},{"value":"工作总结写日记","url":"#工作总结写日记","depth":3},{"value":"笑中带泪","url":"#笑中带泪","depth":3},{"value":"周末小酌","url":"#周末小酌","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.7 这公司是怎么存活的？真的有存在的必要吗？","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-13T13:14:43.000Z","description":"大家好，我是白露啊。昨天看到一个招聘经历的分享，简直让我怀疑人生。还能有这样的公司？对方HR说：“*** ，学习期间是单休，每天需要加班4-5小时，并且学习期间每天要写工作总结。该岗位的薪资5500元(已包含加班费)+300元全勤，提供食宿，吃饭5元一餐，住宿平摊水电费。”看到这里，大家是不是...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/ozxzm57oyh321uc5"}},{"title":"6.11 重来一次，我还会选择计算机专业吗?","date":"2024-06-13T13:14:36.000Z","urlname":"pg7c69bwhhlk3otz","is_nav":false,"updated":"2024-06-13T13:14:43.000Z","not_show":false,"description":"大家好，我是白露啊。 转眼间，我的年龄即将奔28了。回想起大学毕业时自己的样子，没想到时间过得这么快。 那时的我才23岁，后来选择继续读研，到26岁才完成学业。 大学时的我，是个风风火火的人，有想法、有干劲、有活力，觉得未来充满无限可能。 我参加了很多活动，并亲自作为负责人举办了全校规模的比赛...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1170,"minutes":4,"text":"4 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/pg7c69bwhhlk3otz","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/pg7c69bwhhlk3otz","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/pg7c69bwhhlk3otz.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.11 重来一次，我还会选择计算机专业吗?","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-13T13:14:43.000Z","description":"大家好，我是白露啊。 转眼间，我的年龄即将奔28了。回想起大学毕业时自己的样子，没想到时间过得这么快。 那时的我才23岁，后来选择继续读研，到26岁才完成学业。 大学时的我，是个风风火火的人，有想法、有干劲、有活力，觉得未来充满无限可能。 我参加了很多活动，并亲自作为负责人举办了全校规模的比赛...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/pg7c69bwhhlk3otz"}},{"title":"6.1 夸张，腾讯实习三个月，存款20W+","date":"2024-06-13T13:14:36.000Z","urlname":"waouohwqugquh410","is_nav":false,"updated":"2024-06-13T13:14:44.000Z","not_show":false,"description":"大家好，我是白露。 今天在牛客上看到一条帖子，让我感叹万分：实习两三个月，竟然已经存下了20多万的存款。 这也太夸张了吧？不太真实啊……很多网友表示疑问，“两三个月实习顶多存两三万吧？武理奖学金十几万？”楼主回复说：“还有学校补贴和导师横向，实习了半年多，存了五六万吧。” 所以真相了，其实是算...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1717428810924-f867c9fa-c710-4e08-904c-7707a976ce1e.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3726,"minutes":12,"text":"12 分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/6月/waouohwqugquh410","path":"docs/doc/💹 大厂面经/拿下面试官实战/6月/waouohwqugquh410","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/6月/waouohwqugquh410.md","toc":[{"value":"开始面试","url":"#开始面试-15","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.1 夸张，腾讯实习三个月，存款20W+","datePublished":"2024-06-13T13:14:36.000Z","dateModified":"2024-06-13T13:14:44.000Z","description":"大家好，我是白露。 今天在牛客上看到一条帖子，让我感叹万分：实习两三个月，竟然已经存下了20多万的存款。 这也太夸张了吧？不太真实啊……很多网友表示疑问，“两三个月实习顶多存两三万吧？武理奖学金十几万？”楼主回复说：“还有学校补贴和导师横向，实习了半年多，存了五六万吧。” 所以真相了，其实是算...","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/6月/waouohwqugquh410"}},{"title":"6月","date":"2024-06-13T13:14:35.000Z","urlname":"rufaif78psnb10tt","is_nav":false,"nav_path":"20246","updated":"2024-06-25T13:50:44.000Z","skip_nav":false,"not_show":false,"description":"---is_nav: falsenav_path: '20246'skip_nav: false---","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":0,"minutes":0,"text":"小于一分钟"},"slug":"doc/💹 大厂面经/拿下面试官实战/rufaif78psnb10tt","path":"docs/doc/💹 大厂面经/拿下面试官实战/rufaif78psnb10tt","filePath":"docs/doc/💹 大厂面经/拿下面试官实战/rufaif78psnb10tt.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6月","datePublished":"2024-06-13T13:14:35.000Z","dateModified":"2024-06-25T13:50:44.000Z","description":"---is_nav: falsenav_path: '20246'skip_nav: false---","url":"https://offernow.cn/docs/doc/💹 大厂面经/拿下面试官实战/rufaif78psnb10tt"}},{"title":"怎么添加网页到桌面快捷方式？","date":"2024-06-12T14:51:19.000Z","urlname":"kxrip3aituetr71i","is_nav":false,"updated":"2024-06-13T13:50:16.000Z","not_show":false,"description":"添加网页到桌面快捷方式？很简单，仅需要两步，接下来以chrome浏览器为例。第一步在想要保存的网页右上角点击设置。第二步保存并分享-创建快捷方式，保存到桌面即可!","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1718204241684-25d41923-5b94-4df2-978d-e081ed89e3f4.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":97,"minutes":0,"text":"小于一分钟"},"slug":"doc/🔥 程序员自我修养/十万个为什么💡/kxrip3aituetr71i","path":"docs/doc/🔥 程序员自我修养/十万个为什么💡/kxrip3aituetr71i","filePath":"docs/doc/🔥 程序员自我修养/十万个为什么💡/kxrip3aituetr71i.md","toc":[{"value":"第一步","url":"#第一步","depth":1},{"value":"第二步","url":"#第二步","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"怎么添加网页到桌面快捷方式？","datePublished":"2024-06-12T14:51:19.000Z","dateModified":"2024-06-13T13:50:16.000Z","description":"添加网页到桌面快捷方式？很简单，仅需要两步，接下来以chrome浏览器为例。第一步在想要保存的网页右上角点击设置。第二步保存并分享-创建快捷方式，保存到桌面即可!","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/十万个为什么💡/kxrip3aituetr71i"}},{"title":"第十二章：高级应用与最佳实践","date":"2024-06-07T02:39:12.000Z","urlname":"obhmxn0wg1gxp2n6","is_nav":false,"updated":"2024-08-15T08:43:21.000Z","not_show":false,"description":"在前面的章节中，我们已经掌握了JavaScript的基础知识和进阶技巧。在本章中，我们将探讨一些高级应用和最佳实践，帮助你在实际项目中更高效地运用JavaScript。前沿技术与框架React 的基本概念与使用React 是由 Facebook 开发的一个用于构建用户界面的 JavaScrip...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1126,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/JavaScript/obhmxn0wg1gxp2n6","path":"docs/doc/💻 编程语言/JavaScript/obhmxn0wg1gxp2n6","filePath":"docs/doc/💻 编程语言/JavaScript/obhmxn0wg1gxp2n6.md","toc":[{"value":"前沿技术与框架","url":"#前沿技术与框架","depth":2},{"value":"React 的基本概念与使用","url":"#react-的基本概念与使用","depth":3},{"value":"安装与设置","url":"#安装与设置","depth":4},{"value":"组件和 JSX","url":"#组件和-jsx","depth":4},{"value":"状态和生命周期","url":"#状态和生命周期","depth":4},{"value":"Vue.js 的基本概念与使用","url":"#vuejs-的基本概念与使用","depth":3},{"value":"安装与设置","url":"#安装与设置-1","depth":4},{"value":"Vue 实例","url":"#vue-实例","depth":4},{"value":"Angular 的基本概念与使用","url":"#angular-的基本概念与使用","depth":3},{"value":"安装与设置","url":"#安装与设置-2","depth":4},{"value":"组件和模板","url":"#组件和模板","depth":4},{"value":"进阶技巧与模式","url":"#进阶技巧与模式","depth":2},{"value":"设计模式在 JavaScript 中的应用","url":"#设计模式在-javascript-中的应用","depth":3},{"value":"单例模式","url":"#单例模式-1","depth":4},{"value":"工厂模式","url":"#工厂模式","depth":4},{"value":"使用 TypeScript 增强 JavaScript","url":"#使用-typescript-增强-javascript","depth":3},{"value":"安装与设置","url":"#安装与设置-3","depth":4},{"value":"使用 GraphQL 进行数据查询","url":"#使用-graphql-进行数据查询","depth":3},{"value":"安装与设置","url":"#安装与设置-4","depth":4},{"value":"定义 Schema 和 Resolver","url":"#定义-schema-和-resolver","depth":4},{"value":"开发与生产环境管理","url":"#开发与生产环境管理","depth":2},{"value":"区分开发与生产环境","url":"#区分开发与生产环境","depth":3},{"value":"使用 Docker 容器化 JavaScript 应用","url":"#使用-docker-容器化-javascript-应用","depth":3},{"value":"创建 Dockerfile","url":"#创建-dockerfile","depth":4},{"value":"构建与运行 Docker 容器","url":"#构建与运行-docker-容器","depth":4},{"value":"部署策略与滚动更新","url":"#部署策略与滚动更新","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十二章：高级应用与最佳实践","datePublished":"2024-06-07T02:39:12.000Z","dateModified":"2024-08-15T08:43:21.000Z","description":"在前面的章节中，我们已经掌握了JavaScript的基础知识和进阶技巧。在本章中，我们将探讨一些高级应用和最佳实践，帮助你在实际项目中更高效地运用JavaScript。前沿技术与框架React 的基本概念与使用React 是由 Facebook 开发的一个用于构建用户界面的 JavaScrip...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/JavaScript/obhmxn0wg1gxp2n6"}},{"title":"第十一章：现代 JavaScript 工具链","date":"2024-06-07T02:38:43.000Z","urlname":"myrlyqga6ewhaxdm","is_nav":false,"updated":"2024-08-15T08:43:01.000Z","not_show":false,"description":"由代码编写到代码部署，合理地使用工具可以大幅提升开发效率和代码质量。本章我们将深入探讨几种重要的 JavaScript 工具，包括模块打包工具、代码质量工具和构建与部署工具，并通过实际操作示例，帮助你熟悉并掌握这些工具的使用。模块打包工具模块化开发有助于代码的维护和复用，而模块打包工具则是将这...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1687,"minutes":6,"text":"6 分钟"},"slug":"doc/💻 编程语言/JavaScript/myrlyqga6ewhaxdm","path":"docs/doc/💻 编程语言/JavaScript/myrlyqga6ewhaxdm","filePath":"docs/doc/💻 编程语言/JavaScript/myrlyqga6ewhaxdm.md","toc":[{"value":"模块打包工具","url":"#模块打包工具","depth":2},{"value":"什么是模块打包工具？","url":"#什么是模块打包工具","depth":3},{"value":"使用 Webpack 进行模块打包","url":"#使用-webpack-进行模块打包","depth":3},{"value":"使用 Rollup 进行模块打包","url":"#使用-rollup-进行模块打包","depth":3},{"value":"代码质量工具","url":"#代码质量工具","depth":2},{"value":"使用 ESLint 进行代码规范检查","url":"#使用-eslint-进行代码规范检查","depth":3},{"value":"使用 Prettier 进行代码格式化","url":"#使用-prettier-进行代码格式化","depth":3},{"value":"构建与部署工具","url":"#构建与部署工具","depth":2},{"value":"使用 Babel 进行代码转换","url":"#使用-babel-进行代码转换","depth":3},{"value":"使用 npm scripts 进行自动化任务","url":"#使用-npm-scripts-进行自动化任务","depth":3},{"value":"使用 CI/CD 工具进行自动化构建与部署","url":"#使用-cicd-工具进行自动化构建与部署","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十一章：现代 JavaScript 工具链","datePublished":"2024-06-07T02:38:43.000Z","dateModified":"2024-08-15T08:43:01.000Z","description":"由代码编写到代码部署，合理地使用工具可以大幅提升开发效率和代码质量。本章我们将深入探讨几种重要的 JavaScript 工具，包括模块打包工具、代码质量工具和构建与部署工具，并通过实际操作示例，帮助你熟悉并掌握这些工具的使用。模块打包工具模块化开发有助于代码的维护和复用，而模块打包工具则是将这...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/JavaScript/myrlyqga6ewhaxdm"}},{"title":"第十章：测试与调试","date":"2024-06-07T02:38:31.000Z","urlname":"tvi5rnx6lvl2sczq","is_nav":false,"updated":"2024-08-15T08:42:46.000Z","not_show":false,"description":"1. 单元测试1.1 什么是单元测试单元测试（Unit Testing）是对软件的最小可测试单元进行验证，以确保其功能正确。它能够帮助开发者发现和修复错误，提高代码的稳定性和可维护性。单元测试通常由开发者自己编写，并且与实际的业务逻辑代码分开。1.2 使用 Jest 编写单元测试Jest 是一...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1599,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/JavaScript/tvi5rnx6lvl2sczq","path":"docs/doc/💻 编程语言/JavaScript/tvi5rnx6lvl2sczq","filePath":"docs/doc/💻 编程语言/JavaScript/tvi5rnx6lvl2sczq.md","toc":[{"value":"1. 单元测试","url":"#1-单元测试","depth":2},{"value":"1.1 什么是单元测试","url":"#11-什么是单元测试","depth":3},{"value":"1.2 使用 Jest 编写单元测试","url":"#12-使用-jest-编写单元测试","depth":3},{"value":"安装 Jest","url":"#安装-jest","depth":4},{"value":"编写测试用例","url":"#编写测试用例","depth":4},{"value":"运行测试","url":"#运行测试","depth":4},{"value":"1.3 运行与调试单元测试","url":"#13-运行与调试单元测试","depth":3},{"value":"运行特定测试文件","url":"#运行特定测试文件","depth":4},{"value":"调试测试","url":"#调试测试","depth":4},{"value":"2. 调试技巧","url":"#2-调试技巧","depth":2},{"value":"2.1 常用调试工具与方法","url":"#21-常用调试工具与方法","depth":3},{"value":"2.2 使用浏览器开发者工具进行调试","url":"#22-使用浏览器开发者工具进行调试","depth":3},{"value":"设置断点","url":"#设置断点-1","depth":4},{"value":"查看变量值","url":"#查看变量值","depth":4},{"value":"步进执行","url":"#步进执行","depth":4},{"value":"3. 性能优化","url":"#3-性能优化-1","depth":2},{"value":"3.1 常见的性能瓶颈与优化方法","url":"#31-常见的性能瓶颈与优化方法","depth":3},{"value":"DOM 操作优化","url":"#dom-操作优化","depth":4},{"value":"JavaScript 执行优化","url":"#javascript-执行优化","depth":4},{"value":"网络请求优化","url":"#网络请求优化","depth":4},{"value":"3.2 使用 Lighthouse 进行性能分析","url":"#32-使用-lighthouse-进行性能分析","depth":3},{"value":"安装 Lighthouse","url":"#安装-lighthouse","depth":4},{"value":"使用 Lighthouse 进行性能分析","url":"#使用-lighthouse-进行性能分析","depth":4},{"value":"分析 Lighthouse 报告","url":"#分析-lighthouse-报告","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十章：测试与调试","datePublished":"2024-06-07T02:38:31.000Z","dateModified":"2024-08-15T08:42:46.000Z","description":"1. 单元测试1.1 什么是单元测试单元测试（Unit Testing）是对软件的最小可测试单元进行验证，以确保其功能正确。它能够帮助开发者发现和修复错误，提高代码的稳定性和可维护性。单元测试通常由开发者自己编写，并且与实际的业务逻辑代码分开。1.2 使用 Jest 编写单元测试Jest 是一...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/JavaScript/tvi5rnx6lvl2sczq"}},{"title":"第九章：项目实战：创建一个任务管理应用","date":"2024-06-07T02:38:06.000Z","urlname":"xwymt3c06amgkp2n","is_nav":false,"updated":"2024-08-15T08:42:27.000Z","not_show":false,"description":"在这一章中，我们将通过创建一个完整的任务管理应用，来综合运用前几章所学的知识。这个项目将涵盖需求分析、功能规划、开发实现以及项目部署等多个方面，帮助你掌握实际项目开发的流程。项目介绍与规划项目需求分析与功能规划在开发一个任务管理应用之前，我们需要首先明确应用的需求和功能。以下是对项目的需求分析...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1742,"minutes":6,"text":"6 分钟"},"slug":"doc/💻 编程语言/JavaScript/xwymt3c06amgkp2n","path":"docs/doc/💻 编程语言/JavaScript/xwymt3c06amgkp2n","filePath":"docs/doc/💻 编程语言/JavaScript/xwymt3c06amgkp2n.md","toc":[{"value":"项目介绍与规划","url":"#项目介绍与规划","depth":2},{"value":"项目需求分析与功能规划","url":"#项目需求分析与功能规划","depth":3},{"value":"项目目录结构的设计","url":"#项目目录结构的设计","depth":3},{"value":"任务管理应用的开发","url":"#任务管理应用的开发","depth":2},{"value":"实现任务的添加与删除","url":"#实现任务的添加与删除","depth":3},{"value":"1. 创建基础 HTML 模板","url":"#1-创建基础-html-模板","depth":4},{"value":"2. 在 tasks.js 中编写任务相关逻辑","url":"#2-在-tasksjs-中编写任务相关逻辑","depth":4},{"value":"3. 在 app.js 中连接 HTML 与 JavaScript","url":"#3-在-appjs-中连接-html-与-javascript","depth":4},{"value":"实现任务的编辑与标记完成","url":"#实现任务的编辑与标记完成","depth":3},{"value":"1. 在 tasks.js 中添加编辑和标记完成的逻辑","url":"#1-在-tasksjs-中添加编辑和标记完成的逻辑","depth":4},{"value":"2. 在 tasks.js 中修改 renderTasks 函数以包含编辑和标记完成功能","url":"#2-在-tasksjs-中修改-rendertasks-函数以包含编辑和标记完成功能","depth":4},{"value":"实现任务的过滤与排序","url":"#实现任务的过滤与排序","depth":3},{"value":"1. 在 index.html 中添加过滤和排序的选项","url":"#1-在-indexhtml-中添加过滤和排序的选项","depth":4},{"value":"2. 在 tasks.js 中添加过滤和排序的逻辑","url":"#2-在-tasksjs-中添加过滤和排序的逻辑","depth":4},{"value":"项目总结与发布","url":"#项目总结与发布","depth":2},{"value":"代码优化与重构","url":"#代码优化与重构","depth":3},{"value":"部署应用到 GitHub Pages 或 Netlify","url":"#部署应用到-github-pages-或-netlify","depth":3},{"value":"部署到 GitHub Pages","url":"#部署到-github-pages-1","depth":3},{"value":"部署到 Netlify","url":"#部署到-netlify-1","depth":3},{"value":"项目总结","url":"#项目总结","depth":3},{"value":"进一步学习","url":"#进一步学习","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第九章：项目实战：创建一个任务管理应用","datePublished":"2024-06-07T02:38:06.000Z","dateModified":"2024-08-15T08:42:27.000Z","description":"在这一章中，我们将通过创建一个完整的任务管理应用，来综合运用前几章所学的知识。这个项目将涵盖需求分析、功能规划、开发实现以及项目部署等多个方面，帮助你掌握实际项目开发的流程。项目介绍与规划项目需求分析与功能规划在开发一个任务管理应用之前，我们需要首先明确应用的需求和功能。以下是对项目的需求分析...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/JavaScript/xwymt3c06amgkp2n"}},{"title":"第八章：浏览器 API 与本地存储","date":"2024-06-07T02:37:53.000Z","urlname":"fkoyngxgpmgaeg44","is_nav":false,"updated":"2024-08-15T08:41:58.000Z","not_show":false,"description":"1. 浏览器 API在现代 Web 开发中，浏览器为开发者提供了丰富的 API，用于处理各种任务，如网络请求、剪贴板操作等。本节将介绍一些常用的浏览器 API，并演示其使用方法。常用浏览器 API 介绍Fetch APIFetch API 用于执行网络请求，替代了老旧的 XMLHttpRequ...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1094,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/JavaScript/fkoyngxgpmgaeg44","path":"docs/doc/💻 编程语言/JavaScript/fkoyngxgpmgaeg44","filePath":"docs/doc/💻 编程语言/JavaScript/fkoyngxgpmgaeg44.md","toc":[{"value":"1. 浏览器 API","url":"#1-浏览器-api","depth":2},{"value":"常用浏览器 API 介绍","url":"#常用浏览器-api-介绍","depth":3},{"value":"Fetch API","url":"#fetch-api","depth":4},{"value":"操作剪贴板 API","url":"#操作剪贴板-api","depth":4},{"value":"2. 本地存储","url":"#2-本地存储","depth":2},{"value":"LocalStorage 的基本操作","url":"#localstorage-的基本操作","depth":3},{"value":"SessionStorage 的基本操作","url":"#sessionstorage-的基本操作","depth":3},{"value":"IndexedDB 的基本概念与使用","url":"#indexeddb-的基本概念与使用","depth":3},{"value":"3. 实战练习","url":"#3-实战练习","depth":2},{"value":"实现一个简单的记事本应用","url":"#实现一个简单的记事本应用","depth":3},{"value":"实现数据的持久化存储","url":"#实现数据的持久化存储","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第八章：浏览器 API 与本地存储","datePublished":"2024-06-07T02:37:53.000Z","dateModified":"2024-08-15T08:41:58.000Z","description":"1. 浏览器 API在现代 Web 开发中，浏览器为开发者提供了丰富的 API，用于处理各种任务，如网络请求、剪贴板操作等。本节将介绍一些常用的浏览器 API，并演示其使用方法。常用浏览器 API 介绍Fetch APIFetch API 用于执行网络请求，替代了老旧的 XMLHttpRequ...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/JavaScript/fkoyngxgpmgaeg44"}},{"title":"第七章：DOM 操作与事件处理","date":"2024-06-07T02:37:40.000Z","urlname":"bbsxpgzzhu3i88xy","is_nav":false,"updated":"2024-08-15T08:41:41.000Z","not_show":false,"description":"1. DOM 基本概念什么是 DOMDOM（Document Object Model）是 HTML 和 XML 文档的编程接口。它提供了一组标准的对象，使开发者能够动态访问和更新文档的内容、结构和样式。DOM 把文档表示为一个树结构，其中每个节点都是文档的一部分。DOM 树的结构DOM 树是...\r","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/15266c94d9ccd675f00027a43ab14bfe.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":861,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/JavaScript/bbsxpgzzhu3i88xy","path":"docs/doc/💻 编程语言/JavaScript/bbsxpgzzhu3i88xy","filePath":"docs/doc/💻 编程语言/JavaScript/bbsxpgzzhu3i88xy.md","toc":[{"value":"1. DOM 基本概念","url":"#1-dom-基本概念","depth":2},{"value":"什么是 DOM","url":"#什么是-dom","depth":3},{"value":"DOM 树的结构","url":"#dom-树的结构","depth":3},{"value":"常用 DOM 操作方法","url":"#常用-dom-操作方法","depth":3},{"value":"2. 事件处理","url":"#2-事件处理","depth":2},{"value":"事件的基本概念","url":"#事件的基本概念","depth":3},{"value":"添加与移除事件监听器","url":"#添加与移除事件监听器","depth":3},{"value":"事件冒泡与捕获","url":"#事件冒泡与捕获","depth":3},{"value":"3. 实战练习","url":"#3-实战练习-1","depth":2},{"value":"实现动态内容的添加与删除","url":"#实现动态内容的添加与删除","depth":3},{"value":"实现表单验证","url":"#实现表单验证","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第七章：DOM 操作与事件处理","datePublished":"2024-06-07T02:37:40.000Z","dateModified":"2024-08-15T08:41:41.000Z","description":"1. DOM 基本概念什么是 DOMDOM（Document Object Model）是 HTML 和 XML 文档的编程接口。它提供了一组标准的对象，使开发者能够动态访问和更新文档的内容、结构和样式。DOM 把文档表示为一个树结构，其中每个节点都是文档的一部分。DOM 树的结构DOM 树是...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/JavaScript/bbsxpgzzhu3i88xy"}},{"title":"第六章：异步编程","date":"2024-06-07T02:37:26.000Z","urlname":"xwdzodwra6u55sib","is_nav":false,"updated":"2024-08-15T08:41:05.000Z","not_show":false,"description":"1. 回调函数在 JavaScript 中，异步编程是处理时间消耗任务（如网络请求、文件读取等）的核心技术之一。回调函数是处理异步操作的最基本方式。什么是回调函数回调函数是作为参数传递给另一个函数的函数，当那个函数完成其任务后会调用这个回调函数。此模式常用于处理异步操作。以下是一个基本示例：f...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":809,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/JavaScript/xwdzodwra6u55sib","path":"docs/doc/💻 编程语言/JavaScript/xwdzodwra6u55sib","filePath":"docs/doc/💻 编程语言/JavaScript/xwdzodwra6u55sib.md","toc":[{"value":"1. 回调函数","url":"#1-回调函数","depth":2},{"value":"什么是回调函数","url":"#什么是回调函数","depth":3},{"value":"使用回调函数处理异步操作","url":"#使用回调函数处理异步操作","depth":3},{"value":"2. Promise","url":"#2-promise","depth":2},{"value":"Promise 的基本概念","url":"#promise-的基本概念","depth":3},{"value":"创建与使用 Promise","url":"#创建与使用-promise","depth":3},{"value":"Promise 链与错误处理","url":"#promise-链与错误处理","depth":3},{"value":"3. async/await","url":"#3-asyncawait","depth":2},{"value":"async/await 的基本概念","url":"#asyncawait-的基本概念","depth":3},{"value":"使用 async/await 简化异步代码","url":"#使用-asyncawait-简化异步代码","depth":3},{"value":"错误处理与同步风格","url":"#错误处理与同步风格","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第六章：异步编程","datePublished":"2024-06-07T02:37:26.000Z","dateModified":"2024-08-15T08:41:05.000Z","description":"1. 回调函数在 JavaScript 中，异步编程是处理时间消耗任务（如网络请求、文件读取等）的核心技术之一。回调函数是处理异步操作的最基本方式。什么是回调函数回调函数是作为参数传递给另一个函数的函数，当那个函数完成其任务后会调用这个回调函数。此模式常用于处理异步操作。以下是一个基本示例：f...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/JavaScript/xwdzodwra6u55sib"}},{"title":"第四章：函数与作用域","date":"2024-06-07T02:34:29.000Z","urlname":"yl3i2ox3zh528deh","is_nav":false,"updated":"2024-08-15T08:40:34.000Z","not_show":false,"description":"在这一章将深入探讨 JavaScript 中函数的各个方面，包括函数的定义与调用、参数与返回值、箭头函数与匿名函数。此外，我们还会探讨作用域的概念，以及如何利用闭包来创建更强大的代码。最后，我们将介绍高阶函数及其在简化代码方面的应用。1. 函数1.1 函数的定义与调用在 JavaScript ...\r","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/75959c4cecb87a93a3941a567ef66e9e.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1156,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/JavaScript/yl3i2ox3zh528deh","path":"docs/doc/💻 编程语言/JavaScript/yl3i2ox3zh528deh","filePath":"docs/doc/💻 编程语言/JavaScript/yl3i2ox3zh528deh.md","toc":[{"value":"1. 函数","url":"#1-函数","depth":2},{"value":"1.1 函数的定义与调用","url":"#11-函数的定义与调用","depth":3},{"value":"1.2 函数参数与返回值","url":"#12-函数参数与返回值","depth":3},{"value":"1.3 箭头函数与匿名函数","url":"#13-箭头函数与匿名函数","depth":3},{"value":"2. 作用域","url":"#2-作用域","depth":2},{"value":"2.1 作用域的基本概念","url":"#21-作用域的基本概念","depth":3},{"value":"2.2 全局作用域与局部作用域","url":"#22-全局作用域与局部作用域","depth":3},{"value":"2.3 闭包的概念与应用","url":"#23-闭包的概念与应用","depth":3},{"value":"3. 高阶函数","url":"#3-高阶函数","depth":2},{"value":"3.1 什么是高阶函数","url":"#31-什么是高阶函数","depth":3},{"value":"3.2 常见高阶函数示例","url":"#32-常见高阶函数示例","depth":3},{"value":"3.3 使用高阶函数简化代码","url":"#33-使用高阶函数简化代码","depth":3},{"value":"4. 图解函数与作用域","url":"#4-图解函数与作用域","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第四章：函数与作用域","datePublished":"2024-06-07T02:34:29.000Z","dateModified":"2024-08-15T08:40:34.000Z","description":"在这一章将深入探讨 JavaScript 中函数的各个方面，包括函数的定义与调用、参数与返回值、箭头函数与匿名函数。此外，我们还会探讨作用域的概念，以及如何利用闭包来创建更强大的代码。最后，我们将介绍高阶函数及其在简化代码方面的应用。1. 函数1.1 函数的定义与调用在 JavaScript ...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/JavaScript/yl3i2ox3zh528deh"}},{"title":"第三章：控制结构","date":"2024-06-07T02:34:15.000Z","urlname":"ced0rgbttkbm4gsn","is_nav":false,"updated":"2024-08-15T08:39:21.000Z","not_show":false,"description":"JavaScript 提供了丰富的控制结构，包括条件语句和循环语句。本章将详细介绍这些控制结构及其应用。1. 条件语句条件语句允许代码根据不同的条件执行不同的操作。这对于编写逻辑复杂的程序至关重要。if 语句if 语句是最基本的条件语句之一，通常用于在某个条件满足时执行代码块。其语法如下：if...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1286,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/JavaScript/ced0rgbttkbm4gsn","path":"docs/doc/💻 编程语言/JavaScript/ced0rgbttkbm4gsn","filePath":"docs/doc/💻 编程语言/JavaScript/ced0rgbttkbm4gsn.md","toc":[{"value":"1. 条件语句","url":"#1-条件语句","depth":2},{"value":"if 语句","url":"#if-语句","depth":3},{"value":"if-else 语句","url":"#if-else-语句","depth":3},{"value":"if-elseif-else 语句","url":"#if-elseif-else-语句","depth":3},{"value":"三元运算符","url":"#三元运算符","depth":3},{"value":"2. 循环语句","url":"#2-循环语句","depth":2},{"value":"for 循环","url":"#for-循环","depth":3},{"value":"while 循环","url":"#while-循环","depth":3},{"value":"do-while 循环","url":"#do-while-循环","depth":3},{"value":"循环中的 break 与 continue","url":"#循环中的-break-与-continue","depth":3},{"value":"3. 数组","url":"#3-数组","depth":2},{"value":"数组的定义与操作","url":"#数组的定义与操作","depth":3},{"value":"常用数组方法","url":"#常用数组方法","depth":3},{"value":"数组的迭代方法","url":"#数组的迭代方法","depth":3},{"value":"实战练习","url":"#实战练习","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第三章：控制结构","datePublished":"2024-06-07T02:34:15.000Z","dateModified":"2024-08-15T08:39:21.000Z","description":"JavaScript 提供了丰富的控制结构，包括条件语句和循环语句。本章将详细介绍这些控制结构及其应用。1. 条件语句条件语句允许代码根据不同的条件执行不同的操作。这对于编写逻辑复杂的程序至关重要。if 语句if 语句是最基本的条件语句之一，通常用于在某个条件满足时执行代码块。其语法如下：if...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/JavaScript/ced0rgbttkbm4gsn"}},{"title":"第二章：JavaScript 基础语法","date":"2024-06-07T02:33:50.000Z","urlname":"wyh4y9de5m1h1n0e","is_nav":false,"updated":"2024-08-15T08:39:00.000Z","not_show":false,"description":"1. 变量与数据类型变量的声明在 JavaScript 中，我们可以使用 var、let 和 const 这三种关键词来声明变量。下面是每种声明方式的详细解释和示例：var 关键词var 是 JavaScript 中最早用来声明变量的关键词。var name = \"Alice\"; consol...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1421,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/JavaScript/wyh4y9de5m1h1n0e","path":"docs/doc/💻 编程语言/JavaScript/wyh4y9de5m1h1n0e","filePath":"docs/doc/💻 编程语言/JavaScript/wyh4y9de5m1h1n0e.md","toc":[{"value":"1. 变量与数据类型","url":"#1-变量与数据类型","depth":2},{"value":"变量的声明","url":"#变量的声明","depth":3},{"value":"var 关键词","url":"#var-关键词","depth":4},{"value":"let 关键词","url":"#let-关键词","depth":4},{"value":"const 关键词","url":"#const-关键词","depth":4},{"value":"常见数据类型","url":"#常见数据类型","depth":3},{"value":"原始类型","url":"#原始类型","depth":4},{"value":"引用类型","url":"#引用类型","depth":4},{"value":"数据类型转换","url":"#数据类型转换","depth":3},{"value":"显式转换","url":"#显式转换","depth":4},{"value":"隐式转换","url":"#隐式转换","depth":4},{"value":"2. 运算符与表达式","url":"#2-运算符与表达式","depth":2},{"value":"算术运算符","url":"#算术运算符","depth":3},{"value":"比较运算符","url":"#比较运算符","depth":3},{"value":"逻辑运算符","url":"#逻辑运算符","depth":3},{"value":"3. 字符串操作","url":"#3-字符串操作","depth":2},{"value":"字符串的定义与操作","url":"#字符串的定义与操作","depth":3},{"value":"字符串连接与模板字符串","url":"#字符串连接与模板字符串","depth":3},{"value":"常用字符串方法","url":"#常用字符串方法","depth":3},{"value":"4. 数组","url":"#4-数组","depth":2},{"value":"数组的定义与操作","url":"#数组的定义与操作-1","depth":3},{"value":"常用数组方法","url":"#常用数组方法-1","depth":3},{"value":"数组的迭代方法","url":"#数组的迭代方法-1","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第二章：JavaScript 基础语法","datePublished":"2024-06-07T02:33:50.000Z","dateModified":"2024-08-15T08:39:00.000Z","description":"1. 变量与数据类型变量的声明在 JavaScript 中，我们可以使用 var、let 和 const 这三种关键词来声明变量。下面是每种声明方式的详细解释和示例：var 关键词var 是 JavaScript 中最早用来声明变量的关键词。var name = \"Alice\"; consol...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/JavaScript/wyh4y9de5m1h1n0e"}},{"title":"第一章：初识 JavaScript","date":"2024-06-07T02:32:26.000Z","urlname":"lzdv93b8t8soe0mn","is_nav":false,"updated":"2024-08-15T08:37:24.000Z","not_show":false,"description":"JavaScript 是现代 Web 开发的核心技术之一，任何想要成为全栈开发者的人都必须掌握它。这一章将带你初步了解 JavaScript，从其历史、发展到应用领域，再到实际的环境搭建和第一个 JavaScript 程序编写。1. JavaScript 简介1.1 JavaScript 的历...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1558,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/JavaScript/lzdv93b8t8soe0mn","path":"docs/doc/💻 编程语言/JavaScript/lzdv93b8t8soe0mn","filePath":"docs/doc/💻 编程语言/JavaScript/lzdv93b8t8soe0mn.md","toc":[{"value":"1. JavaScript 简介","url":"#1-javascript-简介","depth":2},{"value":"1.1 JavaScript 的历史与发展","url":"#11-javascript-的历史与发展","depth":3},{"value":"1.2 JavaScript 的应用领域","url":"#12-javascript-的应用领域","depth":3},{"value":"1.3 为什么选择 JavaScript","url":"#13-为什么选择-javascript","depth":3},{"value":"2. 安装与设置","url":"#2-安装与设置","depth":2},{"value":"2.1 浏览器自带的 JavaScript 环境","url":"#21-浏览器自带的-javascript-环境","depth":3},{"value":"2.2 安装 Node.js","url":"#22-安装-nodejs","depth":3},{"value":"安装步骤","url":"#安装步骤","depth":4},{"value":"2.3 配置开发环境","url":"#23-配置开发环境","depth":3},{"value":"安装 VS Code","url":"#安装-vs-code","depth":4},{"value":"3. 第一个 JavaScript 程序","url":"#3-第一个-javascript-程序","depth":2},{"value":"3.1 编写 Hello, World 程序","url":"#31-编写-hello-world-程序","depth":3},{"value":"步骤","url":"#步骤","depth":4},{"value":"3.2 在浏览器中运行 JavaScript","url":"#32-在浏览器中运行-javascript","depth":3},{"value":"示例","url":"#示例-6","depth":4},{"value":"3.3 基本的代码编辑与调试","url":"#33-基本的代码编辑与调试","depth":3},{"value":"设置断点","url":"#设置断点","depth":4},{"value":"调试代码","url":"#调试代码","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第一章：初识 JavaScript","datePublished":"2024-06-07T02:32:26.000Z","dateModified":"2024-08-15T08:37:24.000Z","description":"JavaScript 是现代 Web 开发的核心技术之一，任何想要成为全栈开发者的人都必须掌握它。这一章将带你初步了解 JavaScript，从其历史、发展到应用领域，再到实际的环境搭建和第一个 JavaScript 程序编写。1. JavaScript 简介1.1 JavaScript 的历...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/JavaScript/lzdv93b8t8soe0mn"}},{"title":"JavaScript","date":"2024-06-07T02:32:16.000Z","urlname":"offv8b28x2gp79gv","is_nav":true,"nav_path":"js","updated":"2024-09-28T04:05:15.000Z","not_show":false,"description":"---nav_path: jsis_nav: true---第一部分：JavaScript 入门第一章：初识 JavaScript JavaScript 简介 JavaScript 的历史与发展JavaScript 的应用领域为什么选择 JavaScript 安装与设置 浏览器自带的 Java...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1206,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/offv8b28x2gp79gv","path":"docs/doc/💻 编程语言/offv8b28x2gp79gv","filePath":"docs/doc/💻 编程语言/offv8b28x2gp79gv.md","toc":[{"value":"第一部分：JavaScript 入门","url":"#第一部分javascript-入门","depth":3},{"value":"第一章：初识 JavaScript","url":"#第一章初识-javascript","depth":4},{"value":"第二章：JavaScript 基础语法","url":"#第二章javascript-基础语法","depth":4},{"value":"第三章：控制结构","url":"#第三章控制结构-1","depth":4},{"value":"第二部分：JavaScript 进阶","url":"#第二部分javascript-进阶","depth":3},{"value":"第四章：函数与作用域","url":"#第四章函数与作用域","depth":4},{"value":"第五章：对象与面向对象编程","url":"#第五章对象与面向对象编程","depth":4},{"value":"第六章：异步编程","url":"#第六章异步编程","depth":4},{"value":"第三部分：实战与高级应用","url":"#第三部分实战与高级应用-2","depth":3},{"value":"第七章：DOM 操作与事件处理","url":"#第七章dom-操作与事件处理","depth":4},{"value":"第八章：浏览器 API 与本地存储","url":"#第八章浏览器-api-与本地存储","depth":4},{"value":"第九章：项目实战：创建一个任务管理应用","url":"#第九章项目实战创建一个任务管理应用","depth":4},{"value":"第十章：测试与调试","url":"#第十章测试与调试-1","depth":4},{"value":"第十一章：现代 JavaScript 工具链","url":"#第十一章现代-javascript-工具链","depth":4},{"value":"第十二章：高级应用与最佳实践","url":"#第十二章高级应用与最佳实践","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"JavaScript","datePublished":"2024-06-07T02:32:16.000Z","dateModified":"2024-09-28T04:05:15.000Z","description":"---nav_path: jsis_nav: true---第一部分：JavaScript 入门第一章：初识 JavaScript JavaScript 简介 JavaScript 的历史与发展JavaScript 的应用领域为什么选择 JavaScript 安装与设置 浏览器自带的 Java...","url":"https://offernow.cn/docs/doc/💻 编程语言/offv8b28x2gp79gv"}},{"title":"第十二章：实用技巧与资源","date":"2024-06-06T13:24:40.000Z","urlname":"rhsc97ze4klle0mw","is_nav":false,"updated":"2024-06-27T13:05:35.000Z","not_show":false,"description":"在前面的章节中，我们已经详细讲解了 Docker 的各个方面，从基础概念到进阶应用，再到实战项目。这一章我们将总结一些实用技巧，推荐一些学习资源，并讨论 Docker 相关的职业发展和面试指南。这些内容将帮助你在实际工作中更好地运用 Docker，也为你的职业生涯提供方向。常用 Docker ...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2417,"minutes":8,"text":"8 分钟"},"slug":"doc/📚 计算机基础/Docker/rhsc97ze4klle0mw","path":"docs/doc/📚 计算机基础/Docker/rhsc97ze4klle0mw","filePath":"docs/doc/📚 计算机基础/Docker/rhsc97ze4klle0mw.md","toc":[{"value":"常用 Docker 工具","url":"#常用-docker-工具","depth":2},{"value":"Docker CLI 的使用技巧","url":"#docker-cli-的使用技巧","depth":3},{"value":"常用快捷命令","url":"#常用快捷命令","depth":4},{"value":"使用别名简化命令","url":"#使用别名简化命令","depth":4},{"value":"Docker Compose 高级用法","url":"#docker-compose-高级用法","depth":3},{"value":"使用环境变量","url":"#使用环境变量","depth":4},{"value":"多个 Compose 文件","url":"#多个-compose-文件","depth":4},{"value":"Docker Swarm 与集群管理工具","url":"#docker-swarm-与集群管理工具","depth":3},{"value":"初始化 Swarm","url":"#初始化-swarm","depth":4},{"value":"添加节点到 Swarm","url":"#添加节点到-swarm","depth":4},{"value":"部署服务到 Swarm","url":"#部署服务到-swarm","depth":4},{"value":"学习资源与社区","url":"#学习资源与社区","depth":2},{"value":"常用的 Docker 学习资源","url":"#常用的-docker-学习资源","depth":3},{"value":"参与 Docker 社区与开源项目","url":"#参与-docker-社区与开源项目","depth":3},{"value":"Docker 的最佳实践与案例分享","url":"#docker-的最佳实践与案例分享","depth":3},{"value":"职业发展与面试指南","url":"#职业发展与面试指南","depth":2},{"value":"Docker 开发者的职业发展路径","url":"#docker-开发者的职业发展路径","depth":3},{"value":"常见的 Docker 面试题与解答","url":"#常见的-docker-面试题与解答","depth":3},{"value":"技术面试的技巧与准备","url":"#技术面试的技巧与准备-1","depth":3},{"value":"技术博客和分享","url":"#技术博客和分享","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十二章：实用技巧与资源","datePublished":"2024-06-06T13:24:40.000Z","dateModified":"2024-06-27T13:05:35.000Z","description":"在前面的章节中，我们已经详细讲解了 Docker 的各个方面，从基础概念到进阶应用，再到实战项目。这一章我们将总结一些实用技巧，推荐一些学习资源，并讨论 Docker 相关的职业发展和面试指南。这些内容将帮助你在实际工作中更好地运用 Docker，也为你的职业生涯提供方向。常用 Docker ...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Docker/rhsc97ze4klle0mw"}},{"title":"第十一章：Docker 最佳实践","date":"2024-06-06T13:23:41.000Z","urlname":"yz1cy1d2qb01sfwr","is_nav":false,"updated":"2024-06-27T13:05:25.000Z","not_show":false,"description":"在构建 Docker 镜像的过程中，Dockerfile 是一个非常关键的文件。它定义了镜像的构建过程和内容。为了确保 Dockerfile 的高效性，以下是一些编写规范： 分层构建：利用 Docker 的分层存储机制，每一个指令（如 RUN, CMD, COPY 等）都会创建一个新的层。尽量...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1227,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/Docker/yz1cy1d2qb01sfwr","path":"docs/doc/📚 计算机基础/Docker/yz1cy1d2qb01sfwr","filePath":"docs/doc/📚 计算机基础/Docker/yz1cy1d2qb01sfwr.md","toc":[{"value":"多阶段构建与镜像优化","url":"#多阶段构建与镜像优化","depth":3},{"value":"使用 Dockerfile 模板","url":"#使用-dockerfile-模板","depth":3},{"value":"1. 容器化应用的性能优化","url":"#1-容器化应用的性能优化","depth":2},{"value":"容器资源限制与分配","url":"#容器资源限制与分配","depth":3},{"value":"使用 cgroups 管理资源","url":"#使用-cgroups-管理资源","depth":3},{"value":"容器的性能监控与分析","url":"#容器的性能监控与分析","depth":3},{"value":"2. 开发与生产环境的管理","url":"#2-开发与生产环境的管理","depth":2},{"value":"区分开发与生产环境","url":"#区分开发与生产环境-1","depth":3},{"value":"使用 Docker Swarm 进行集群管理","url":"#使用-docker-swarm-进行集群管理","depth":3},{"value":"部署策略与滚动更新","url":"#部署策略与滚动更新-1","depth":3},{"value":"3. 容器化应用的性能优化","url":"#3-容器化应用的性能优化","depth":2},{"value":"监控与故障排除","url":"#监控与故障排除","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十一章：Docker 最佳实践","datePublished":"2024-06-06T13:23:41.000Z","dateModified":"2024-06-27T13:05:25.000Z","description":"在构建 Docker 镜像的过程中，Dockerfile 是一个非常关键的文件。它定义了镜像的构建过程和内容。为了确保 Dockerfile 的高效性，以下是一些编写规范： 分层构建：利用 Docker 的分层存储机制，每一个指令（如 RUN, CMD, COPY 等）都会创建一个新的层。尽量...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Docker/yz1cy1d2qb01sfwr"}},{"title":"第十章：Docker 与 Kubernetes","date":"2024-06-06T13:23:21.000Z","urlname":"fgd4f06xqeq9mx27","is_nav":false,"updated":"2024-06-27T13:04:53.000Z","not_show":false,"description":"Kubernetes（简称 K8s）是一个开源的容器编排平台，用于自动化部署、扩展和管理容器化应用。Kubernetes 最初由 Google 开发，现在由云原生计算基金会（CNCF）维护。Kubernetes 提供了一种将多个容器应用以集群方式管理的方式，使得应用的高可用性、扩展性和可维护性...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":985,"minutes":3,"text":"3 分钟"},"slug":"doc/📚 计算机基础/Docker/fgd4f06xqeq9mx27","path":"docs/doc/📚 计算机基础/Docker/fgd4f06xqeq9mx27","filePath":"docs/doc/📚 计算机基础/Docker/fgd4f06xqeq9mx27.md","toc":[{"value":"","url":"#-11","depth":3},{"value":"1. 使用 Kubernetes 管理容器","url":"#1-使用-kubernetes-管理容器","depth":2},{"value":"1.1 创建与管理 Pod","url":"#11-创建与管理-pod","depth":3},{"value":"创建 Pod","url":"#创建-pod","depth":4},{"value":"查看 Pod 状态","url":"#查看-pod-状态","depth":4},{"value":"1.2 使用 Deployment 部署应用","url":"#12-使用-deployment-部署应用","depth":3},{"value":"创建 Deployment","url":"#创建-deployment","depth":4},{"value":"查看 Deployment 状态","url":"#查看-deployment-状态","depth":4},{"value":"1.3 配置服务与负载均衡","url":"#13-配置服务与负载均衡","depth":3},{"value":"创建服务","url":"#创建服务","depth":4},{"value":"查看服务状态","url":"#查看服务状态","depth":4},{"value":"2. Docker 与 Kubernetes 的结合","url":"#2-docker-与-kubernetes-的结合","depth":2},{"value":"2.1 将 Docker 应用迁移到 Kubernetes","url":"#21-将-docker-应用迁移到-kubernetes","depth":3},{"value":"2.2 使用 Helm 管理 Kubernetes 应用","url":"#22-使用-helm-管理-kubernetes-应用","depth":3},{"value":"安装 Helm","url":"#安装-helm","depth":4},{"value":"使用 Helm 部署应用","url":"#使用-helm-部署应用","depth":4},{"value":"2.3 Kubernetes 的高级配置与优化","url":"#23-kubernetes-的高级配置与优化","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十章：Docker 与 Kubernetes","datePublished":"2024-06-06T13:23:21.000Z","dateModified":"2024-06-27T13:04:53.000Z","description":"Kubernetes（简称 K8s）是一个开源的容器编排平台，用于自动化部署、扩展和管理容器化应用。Kubernetes 最初由 Google 开发，现在由云原生计算基金会（CNCF）维护。Kubernetes 提供了一种将多个容器应用以集群方式管理的方式，使得应用的高可用性、扩展性和可维护性...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Docker/fgd4f06xqeq9mx27"}},{"title":"第九章：项目实战：构建一个微服务应用","date":"2024-06-06T13:23:03.000Z","urlname":"gs32fkerb7qam3z5","is_nav":false,"updated":"2024-06-06T13:23:20.000Z","not_show":false,"description":"1. 项目介绍与规划在本章节中，我们将通过一个实际项目来展示如何使用 Docker 构建和部署一个微服务应用。我们将从需求分析开始，逐步进行开发、容器化、编排和部署，最终实现一个完整的微服务架构。项目需求分析与功能规划我们将构建一个简单的电商平台，包括以下微服务：用户服务：处理用户注册、登录和...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":691,"minutes":2,"text":"2 分钟"},"slug":"doc/📚 计算机基础/Docker/gs32fkerb7qam3z5","path":"docs/doc/📚 计算机基础/Docker/gs32fkerb7qam3z5","filePath":"docs/doc/📚 计算机基础/Docker/gs32fkerb7qam3z5.md","toc":[{"value":"1. 项目介绍与规划","url":"#1-项目介绍与规划-2","depth":2},{"value":"项目需求分析与功能规划","url":"#项目需求分析与功能规划-3","depth":3},{"value":"项目目录结构的设计","url":"#项目目录结构的设计-4","depth":3},{"value":"2. 微服务的开发与容器化","url":"#2-微服务的开发与容器化","depth":2},{"value":"开发微服务应用","url":"#开发微服务应用","depth":3},{"value":"使用 Dockerfile 容器化微服务","url":"#使用-dockerfile-容器化微服务","depth":3},{"value":"3. 微服务的编排与部署","url":"#3-微服务的编排与部署","depth":2},{"value":"使用 Docker Compose 编排微服务","url":"#使用-docker-compose-编排微服务","depth":3},{"value":"部署微服务应用到 Kubernetes","url":"#部署微服务应用到-kubernetes","depth":3},{"value":"4. 项目总结与优化","url":"#4-项目总结与优化","depth":2},{"value":"性能优化与监控","url":"#性能优化与监控","depth":3},{"value":"日志管理与故障排除","url":"#日志管理与故障排除","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第九章：项目实战：构建一个微服务应用","datePublished":"2024-06-06T13:23:03.000Z","dateModified":"2024-06-06T13:23:20.000Z","description":"1. 项目介绍与规划在本章节中，我们将通过一个实际项目来展示如何使用 Docker 构建和部署一个微服务应用。我们将从需求分析开始，逐步进行开发、容器化、编排和部署，最终实现一个完整的微服务架构。项目需求分析与功能规划我们将构建一个简单的电商平台，包括以下微服务：用户服务：处理用户注册、登录和...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Docker/gs32fkerb7qam3z5"}},{"title":"第八章：CI/CD 与自动化","date":"2024-06-06T13:22:48.000Z","urlname":"zska461892z4wyv9","is_nav":false,"updated":"2024-06-06T13:23:02.000Z","not_show":false,"description":"持续集成（CI）和持续部署（CD）是现代软件开发和运维中不可或缺的部分。通过 CI/CD，我们可以实现代码的自动化测试、构建、部署和发布，大大提高开发效率和代码质量。1. 持续集成与持续部署（CI/CD）什么是 CI/CD持续集成（CI） 是指在代码变更后，自动进行构建和测试，以确保新代码不会...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":930,"minutes":3,"text":"3 分钟"},"slug":"doc/📚 计算机基础/Docker/zska461892z4wyv9","path":"docs/doc/📚 计算机基础/Docker/zska461892z4wyv9","filePath":"docs/doc/📚 计算机基础/Docker/zska461892z4wyv9.md","toc":[{"value":"1. 持续集成与持续部署（CI/CD）","url":"#1-持续集成与持续部署cicd","depth":2},{"value":"什么是 CI/CD","url":"#什么是-cicd","depth":3},{"value":"使用 Jenkins 实现 CI/CD","url":"#使用-jenkins-实现-cicd","depth":3},{"value":"使用 GitLab CI 实现 CI/CD","url":"#使用-gitlab-ci-实现-cicd","depth":3},{"value":"2. 自动化构建与部署","url":"#2-自动化构建与部署","depth":2},{"value":"使用 Docker Hub 自动构建镜像","url":"#使用-docker-hub-自动构建镜像","depth":3},{"value":"自动化测试与部署","url":"#自动化测试与部署","depth":3},{"value":"使用 Webhooks 触发自动化流程","url":"#使用-webhooks-触发自动化流程","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第八章：CI/CD 与自动化","datePublished":"2024-06-06T13:22:48.000Z","dateModified":"2024-06-06T13:23:02.000Z","description":"持续集成（CI）和持续部署（CD）是现代软件开发和运维中不可或缺的部分。通过 CI/CD，我们可以实现代码的自动化测试、构建、部署和发布，大大提高开发效率和代码质量。1. 持续集成与持续部署（CI/CD）什么是 CI/CD持续集成（CI） 是指在代码变更后，自动进行构建和测试，以确保新代码不会...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Docker/zska461892z4wyv9"}},{"title":"第七章：网络与安全","date":"2024-06-06T13:22:33.000Z","urlname":"gf2abf0roxptg3gm","is_nav":false,"updated":"2024-06-27T13:03:41.000Z","not_show":false,"description":"Docker 在网络和安全方面提供了丰富的功能，帮助开发者构建隔离且安全的应用环境。本章节将深入探讨 Docker 网络的基本概念、网络模式以及容器安全的最佳实践。1. Docker 网络1.1 Docker 网络的基本概念Docker 提供了多种网络模式以满足不同场景下的需求。理解这些网络模...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/3ed1c1f05a2a59d1e8a9d308405b3260.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":812,"minutes":3,"text":"3 分钟"},"slug":"doc/📚 计算机基础/Docker/gf2abf0roxptg3gm","path":"docs/doc/📚 计算机基础/Docker/gf2abf0roxptg3gm","filePath":"docs/doc/📚 计算机基础/Docker/gf2abf0roxptg3gm.md","toc":[{"value":"1. Docker 网络","url":"#1-docker-网络","depth":2},{"value":"1.1 Docker 网络的基本概念","url":"#11-docker-网络的基本概念","depth":3},{"value":"1.2 创建与管理 Docker 网络","url":"#12-创建与管理-docker-网络","depth":3},{"value":"1.3 容器间通信","url":"#13-容器间通信","depth":3},{"value":"2. Docker 网络模式","url":"#2-docker-网络模式","depth":2},{"value":"2.1 Bridge 网络模式","url":"#21-bridge-网络模式","depth":3},{"value":"2.2 Host 网络模式","url":"#22-host-网络模式","depth":3},{"value":"2.3 Overlay 网络模式","url":"#23-overlay-网络模式","depth":3},{"value":"3. Docker 安全","url":"#3-docker-安全","depth":2},{"value":"3.1 容器安全最佳实践","url":"#31-容器安全最佳实践","depth":3},{"value":"3.2 使用 Docker 安全扫描工具","url":"#32-使用-docker-安全扫描工具","depth":3},{"value":"3.3 配置 Docker 的安全设置","url":"#33-配置-docker-的安全设置","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第七章：网络与安全","datePublished":"2024-06-06T13:22:33.000Z","dateModified":"2024-06-27T13:03:41.000Z","description":"Docker 在网络和安全方面提供了丰富的功能，帮助开发者构建隔离且安全的应用环境。本章节将深入探讨 Docker 网络的基本概念、网络模式以及容器安全的最佳实践。1. Docker 网络1.1 Docker 网络的基本概念Docker 提供了多种网络模式以满足不同场景下的需求。理解这些网络模...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Docker/gf2abf0roxptg3gm"}},{"title":"第六章：数据管理与持久化","date":"2024-06-06T13:22:19.000Z","urlname":"mny88bf7pkzlwcpe","is_nav":false,"updated":"2024-06-06T13:22:32.000Z","not_show":false,"description":"在现代应用程序中，数据的管理和持久化是至关重要的。Docker 提供了多种机制来确保数据在容器生命周期内外的持久性和可用性。在本章中，我们将深入探讨数据卷、绑定挂载以及数据备份与恢复的相关知识。1. 数据卷什么是数据卷数据卷（Volume）是 Docker 提供的一种用于持久化数据的机制。与容...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1125,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/Docker/mny88bf7pkzlwcpe","path":"docs/doc/📚 计算机基础/Docker/mny88bf7pkzlwcpe","filePath":"docs/doc/📚 计算机基础/Docker/mny88bf7pkzlwcpe.md","toc":[{"value":"1. 数据卷","url":"#1-数据卷","depth":2},{"value":"什么是数据卷","url":"#什么是数据卷","depth":3},{"value":"创建与管理数据卷","url":"#创建与管理数据卷","depth":3},{"value":"挂载数据卷到容器","url":"#挂载数据卷到容器","depth":3},{"value":"2. 绑定挂载","url":"#2-绑定挂载","depth":2},{"value":"什么是绑定挂载","url":"#什么是绑定挂载","depth":3},{"value":"使用绑定挂载共享主机数据","url":"#使用绑定挂载共享主机数据","depth":3},{"value":"绑定挂载与数据卷的区别","url":"#绑定挂载与数据卷的区别","depth":3},{"value":"3. 数据备份与恢复","url":"#3-数据备份与恢复","depth":2},{"value":"备份数据卷","url":"#备份数据卷","depth":3},{"value":"恢复数据卷","url":"#恢复数据卷","depth":3},{"value":"数据卷的迁移","url":"#数据卷的迁移","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第六章：数据管理与持久化","datePublished":"2024-06-06T13:22:19.000Z","dateModified":"2024-06-06T13:22:32.000Z","description":"在现代应用程序中，数据的管理和持久化是至关重要的。Docker 提供了多种机制来确保数据在容器生命周期内外的持久性和可用性。在本章中，我们将深入探讨数据卷、绑定挂载以及数据备份与恢复的相关知识。1. 数据卷什么是数据卷数据卷（Volume）是 Docker 提供的一种用于持久化数据的机制。与容...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Docker/mny88bf7pkzlwcpe"}},{"title":"第五章：Docker Compose","date":"2024-06-06T13:22:00.000Z","urlname":"ghwoip0fbd0hzxyi","is_nav":false,"updated":"2024-06-27T13:03:25.000Z","not_show":false,"description":"Docker Compose 是用于定义和运行多容器 Docker 应用程序的一种工具。通过使用一个 YAML 文件来配置应用程序的服务，您可以使用一个单一的命令来创建和启动所有的服务。Docker Compose 解决了以下问题：多容器应用的管理：当一个应用程序需要多个容器时，手动管理这些容...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1138,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/Docker/ghwoip0fbd0hzxyi","path":"docs/doc/📚 计算机基础/Docker/ghwoip0fbd0hzxyi","filePath":"docs/doc/📚 计算机基础/Docker/ghwoip0fbd0hzxyi.md","toc":[{"value":"安装与配置 Docker Compose","url":"#安装与配置-docker-compose","depth":3},{"value":"在 Windows 上安装 Docker Compose","url":"#在-windows-上安装-docker-compose","depth":4},{"value":"在 macOS 上安装 Docker Compose","url":"#在-macos-上安装-docker-compose","depth":4},{"value":"在 Linux 上安装 Docker Compose","url":"#在-linux-上安装-docker-compose","depth":4},{"value":"验证 Docker Compose 安装","url":"#验证-docker-compose-安装","depth":3},{"value":"创建第一个 Docker Compose 文件","url":"#创建第一个-docker-compose-文件","depth":3},{"value":"编排多容器应用","url":"#编排多容器应用","depth":2},{"value":"定义服务","url":"#定义服务","depth":3},{"value":"使用 docker-compose up 启动应用","url":"#使用-docker-compose-up-启动应用","depth":3},{"value":"使用 docker-compose down 停止应用","url":"#使用-docker-compose-down-停止应用","depth":3},{"value":"Docker Compose 实践","url":"#docker-compose-实践","depth":2},{"value":"使用 Docker Compose 部署 LAMP 环境","url":"#使用-docker-compose-部署-lamp-环境","depth":3},{"value":"使用 Docker Compose 部署微服务架构","url":"#使用-docker-compose-部署微服务架构","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第五章：Docker Compose","datePublished":"2024-06-06T13:22:00.000Z","dateModified":"2024-06-27T13:03:25.000Z","description":"Docker Compose 是用于定义和运行多容器 Docker 应用程序的一种工具。通过使用一个 YAML 文件来配置应用程序的服务，您可以使用一个单一的命令来创建和启动所有的服务。Docker Compose 解决了以下问题：多容器应用的管理：当一个应用程序需要多个容器时，手动管理这些容...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Docker/ghwoip0fbd0hzxyi"}},{"title":"第四章：Dockerfile 与镜像构建","date":"2024-06-06T13:21:45.000Z","urlname":"lbhwlgqkvk3gfyui","is_nav":false,"updated":"2024-06-06T13:22:00.000Z","not_show":false,"description":"Dockerfile 是 Docker 的核心功能之一，通过它我们能够自动化地构建自定义镜像。在这一章，我们将深入探讨 Dockerfile 的基本语法和使用方法，并通过实际案例展示如何构建自定义镜像。1. Dockerfile 基础什么是 DockerfileDockerfile 是一个文本...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":983,"minutes":3,"text":"3 分钟"},"slug":"doc/📚 计算机基础/Docker/lbhwlgqkvk3gfyui","path":"docs/doc/📚 计算机基础/Docker/lbhwlgqkvk3gfyui","filePath":"docs/doc/📚 计算机基础/Docker/lbhwlgqkvk3gfyui.md","toc":[{"value":"1. Dockerfile 基础","url":"#1-dockerfile-基础","depth":2},{"value":"什么是 Dockerfile","url":"#什么是-dockerfile","depth":3},{"value":"Dockerfile 的基本语法","url":"#dockerfile-的基本语法","depth":3},{"value":"编写第一个 Dockerfile","url":"#编写第一个-dockerfile","depth":3},{"value":"2. 构建自定义镜像","url":"#2-构建自定义镜像","depth":2},{"value":"使用 docker build 构建镜像","url":"#使用-docker-build-构建镜像","depth":3},{"value":"多阶段构建","url":"#多阶段构建","depth":3},{"value":"镜像优化与缓存机制","url":"#镜像优化与缓存机制","depth":3},{"value":"3. Dockerfile 实践","url":"#3-dockerfile-实践","depth":2},{"value":"使用 Dockerfile 构建 Web 应用镜像","url":"#使用-dockerfile-构建-web-应用镜像","depth":3},{"value":"使用 Dockerfile 构建数据库镜像","url":"#使用-dockerfile-构建数据库镜像","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第四章：Dockerfile 与镜像构建","datePublished":"2024-06-06T13:21:45.000Z","dateModified":"2024-06-06T13:22:00.000Z","description":"Dockerfile 是 Docker 的核心功能之一，通过它我们能够自动化地构建自定义镜像。在这一章，我们将深入探讨 Dockerfile 的基本语法和使用方法，并通过实际案例展示如何构建自定义镜像。1. Dockerfile 基础什么是 DockerfileDockerfile 是一个文本...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Docker/lbhwlgqkvk3gfyui"}},{"title":"第三章：Docker 命令详解","date":"2024-06-06T13:21:29.000Z","urlname":"mylthedoavc4zlah","is_nav":false,"updated":"2024-06-27T13:02:51.000Z","not_show":false,"description":"在这一章中，我们将深入探讨 Docker 的常用命令，帮助你掌握如何高效地管理 Docker 镜像和容器。理解这些命令将使你能够更加自如地使用 Docker 进行开发和部署。1. 镜像管理命令Docker 镜像是容器的基础，每个容器都是由镜像创建的。以下是一些常用的镜像管理命令：docker ...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":678,"minutes":2,"text":"2 分钟"},"slug":"doc/📚 计算机基础/Docker/mylthedoavc4zlah","path":"docs/doc/📚 计算机基础/Docker/mylthedoavc4zlah","filePath":"docs/doc/📚 计算机基础/Docker/mylthedoavc4zlah.md","toc":[{"value":"1. 镜像管理命令","url":"#1-镜像管理命令","depth":2},{"value":"docker pull","url":"#docker-pull","depth":3},{"value":"docker push","url":"#docker-push","depth":3},{"value":"docker images","url":"#docker-images","depth":3},{"value":"docker rmi","url":"#docker-rmi","depth":3},{"value":"2. 容器管理命令","url":"#2-容器管理命令","depth":2},{"value":"docker run","url":"#docker-run","depth":3},{"value":"docker start / docker stop","url":"#docker-start--docker-stop","depth":3},{"value":"docker rm","url":"#docker-rm","depth":3},{"value":"docker ps","url":"#docker-ps","depth":3},{"value":"docker exec","url":"#docker-exec","depth":3},{"value":"docker logs","url":"#docker-logs","depth":3},{"value":"3. 网络与存储命令","url":"#3-网络与存储命令","depth":2},{"value":"网络命令","url":"#网络命令","depth":3},{"value":"docker network create","url":"#docker-network-create","depth":4},{"value":"docker network ls","url":"#docker-network-ls","depth":4},{"value":"docker network rm","url":"#docker-network-rm","depth":4},{"value":"存储命令","url":"#存储命令","depth":3},{"value":"docker volume create","url":"#docker-volume-create","depth":4},{"value":"docker volume ls","url":"#docker-volume-ls","depth":4},{"value":"docker volume rm","url":"#docker-volume-rm","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第三章：Docker 命令详解","datePublished":"2024-06-06T13:21:29.000Z","dateModified":"2024-06-27T13:02:51.000Z","description":"在这一章中，我们将深入探讨 Docker 的常用命令，帮助你掌握如何高效地管理 Docker 镜像和容器。理解这些命令将使你能够更加自如地使用 Docker 进行开发和部署。1. 镜像管理命令Docker 镜像是容器的基础，每个容器都是由镜像创建的。以下是一些常用的镜像管理命令：docker ...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Docker/mylthedoavc4zlah"}},{"title":"第二章：Docker 基础概念","date":"2024-06-06T13:21:13.000Z","urlname":"og4m0zpmpo6fmymk","is_nav":false,"updated":"2024-06-27T13:02:33.000Z","not_show":false,"description":"Docker 的基本概念是理解和有效使用 Docker 的关键。本章将深入探讨 Docker 的基本架构、镜像和容器等核心概念。通过学习这些内容，读者将能够更好地理解 Docker 的工作原理，并为后续的高级应用打下坚实的基础。1. Docker 的基本架构Docker 的架构由多个组件组成，...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/b6d4bf09062680801c45a137f691c2c1.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1132,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/Docker/og4m0zpmpo6fmymk","path":"docs/doc/📚 计算机基础/Docker/og4m0zpmpo6fmymk","filePath":"docs/doc/📚 计算机基础/Docker/og4m0zpmpo6fmymk.md","toc":[{"value":"1. Docker 的基本架构","url":"#1-docker-的基本架构","depth":2},{"value":"Docker 引擎","url":"#docker-引擎","depth":3},{"value":"Docker 镜像","url":"#docker-镜像","depth":3},{"value":"Docker 容器","url":"#docker-容器","depth":3},{"value":"Docker 仓库","url":"#docker-仓库","depth":3},{"value":"2. Docker 镜像","url":"#2-docker-镜像","depth":2},{"value":"镜像的构成与层次","url":"#镜像的构成与层次","depth":3},{"value":"获取与管理镜像","url":"#获取与管理镜像","depth":3},{"value":"创建自定义镜像","url":"#创建自定义镜像","depth":3},{"value":"3. Docker 容器","url":"#3-docker-容器","depth":2},{"value":"容器的生命周期","url":"#容器的生命周期","depth":3},{"value":"启动与停止容器","url":"#启动与停止容器","depth":3},{"value":"容器的网络与存储","url":"#容器的网络与存储","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第二章：Docker 基础概念","datePublished":"2024-06-06T13:21:13.000Z","dateModified":"2024-06-27T13:02:33.000Z","description":"Docker 的基本概念是理解和有效使用 Docker 的关键。本章将深入探讨 Docker 的基本架构、镜像和容器等核心概念。通过学习这些内容，读者将能够更好地理解 Docker 的工作原理，并为后续的高级应用打下坚实的基础。1. Docker 的基本架构Docker 的架构由多个组件组成，...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Docker/og4m0zpmpo6fmymk"}},{"title":"第一章：初识 Docker","date":"2024-06-06T13:20:13.000Z","urlname":"wxfb81i787twwg1d","is_nav":false,"updated":"2024-06-27T13:01:50.000Z","not_show":false,"description":"1. Docker 简介Docker 的历史与发展Docker 是由 Solomon Hykes 于 2013 年在 Python 语言会议 PyCon 上首次推出的。它从此改变了软件开发和部署的方式，推动了容器化技术的发展。最初，Docker 是 dotCloud 公司（现称为 Docker...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1700,"minutes":6,"text":"6 分钟"},"slug":"doc/📚 计算机基础/Docker/wxfb81i787twwg1d","path":"docs/doc/📚 计算机基础/Docker/wxfb81i787twwg1d","filePath":"docs/doc/📚 计算机基础/Docker/wxfb81i787twwg1d.md","toc":[{"value":"1. Docker 简介","url":"#1-docker-简介","depth":3},{"value":"Docker 的历史与发展","url":"#docker-的历史与发展","depth":4},{"value":"Docker 的应用场景","url":"#docker-的应用场景","depth":4},{"value":"为什么选择 Docker","url":"#为什么选择-docker","depth":4},{"value":"2. 安装与设置","url":"#2-安装与设置-2","depth":3},{"value":"安装 Docker（Windows、macOS、Linux）","url":"#安装-dockerwindowsmacoslinux","depth":4},{"value":"Windows","url":"#windows","depth":5},{"value":"macOS","url":"#macos","depth":5},{"value":"Linux","url":"#linux","depth":5},{"value":"配置 Docker 环境","url":"#配置-docker-环境","depth":4},{"value":"验证 Docker 安装","url":"#验证-docker-安装","depth":4},{"value":"3. 第一个 Docker 容器","url":"#3-第一个-docker-容器","depth":3},{"value":"编写 Hello, World 程序","url":"#编写-hello-world-程序-1","depth":4},{"value":"运行 Docker 容器","url":"#运行-docker-容器","depth":4},{"value":"基本的 Docker 命令","url":"#基本的-docker-命令","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第一章：初识 Docker","datePublished":"2024-06-06T13:20:13.000Z","dateModified":"2024-06-27T13:01:50.000Z","description":"1. Docker 简介Docker 的历史与发展Docker 是由 Solomon Hykes 于 2013 年在 Python 语言会议 PyCon 上首次推出的。它从此改变了软件开发和部署的方式，推动了容器化技术的发展。最初，Docker 是 dotCloud 公司（现称为 Docker...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Docker/wxfb81i787twwg1d"}},{"title":"Docker","date":"2024-06-06T13:19:40.000Z","urlname":"sohzx6ofbqpb4kz2","is_nav":true,"nav_path":"Docker","updated":"2024-09-28T04:35:21.000Z","not_show":false,"description":"探索Docker的世界，从容器技术到自动化部署，了解最新的Docker发展动态和应用方案。","tags":[],"keywords":"Docker, 容器技术, 软件部署, 自动化部署","authors":["whitedew"],"type":"Post","readingTime":{"words":592,"minutes":2,"text":"2 分钟"},"slug":"doc/📚 计算机基础/sohzx6ofbqpb4kz2","path":"docs/doc/📚 计算机基础/sohzx6ofbqpb4kz2","filePath":"docs/doc/📚 计算机基础/sohzx6ofbqpb4kz2.md","toc":[{"value":"Docker 栏目介绍","url":"#docker-栏目介绍","depth":1},{"value":"一、学习知识","url":"#一学习知识","depth":3},{"value":"二、思考","url":"#二思考","depth":3},{"value":"三、面试题","url":"#三面试题","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Docker","datePublished":"2024-06-06T13:19:40.000Z","dateModified":"2024-09-28T04:35:21.000Z","description":"探索Docker的世界，从容器技术到自动化部署，了解最新的Docker发展动态和应用方案。","url":"https://offernow.cn/docs/doc/📚 计算机基础/sohzx6ofbqpb4kz2"}},{"title":"第十三章：实用技巧与资源","date":"2024-06-06T13:17:13.000Z","urlname":"ot0ouhqynyuy3ovi","is_nav":false,"updated":"2024-06-06T13:17:32.000Z","not_show":false,"description":"1. 代码管理与版本控制在开发过程中，代码管理与版本控制是保持项目有序、高效开发的重要手段。尤其是在团队协作中，版本控制工具如 Git 更是不可或缺。使用 Git 进行版本控制Git 是一个分布式版本控制系统，能够记录文件的变化历史，并允许多人协作开发。下面是 Git 的一些基本概念和操作：G...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1464,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/Python/ot0ouhqynyuy3ovi","path":"docs/doc/💻 编程语言/Python/ot0ouhqynyuy3ovi","filePath":"docs/doc/💻 编程语言/Python/ot0ouhqynyuy3ovi.md","toc":[{"value":"1. 代码管理与版本控制","url":"#1-代码管理与版本控制-1","depth":2},{"value":"使用 Git 进行版本控制","url":"#使用-git-进行版本控制","depth":3},{"value":"Git 安装与配置","url":"#git-安装与配置","depth":4},{"value":"Git 的基本命令与工作流程","url":"#git-的基本命令与工作流程","depth":3},{"value":"GitHub 的使用与项目托管","url":"#github-的使用与项目托管","depth":3},{"value":"创建远程仓库","url":"#创建远程仓库","depth":4},{"value":"推送代码到 GitHub","url":"#推送代码到-github","depth":4},{"value":"拉取远程代码","url":"#拉取远程代码","depth":4},{"value":"处理冲突","url":"#处理冲突","depth":4},{"value":"2. Python 的常用工具与资源","url":"#2-python-的常用工具与资源","depth":2},{"value":"常用的 Python 库与工具","url":"#常用的-python-库与工具","depth":3},{"value":"Python 学习资源推荐","url":"#python-学习资源推荐","depth":3},{"value":"3. 职业发展与面试指南","url":"#3-职业发展与面试指南-1","depth":2},{"value":"Python 开发者的职业发展路径","url":"#python-开发者的职业发展路径","depth":3},{"value":"常见的 Python 面试题与解答","url":"#常见的-python-面试题与解答","depth":3},{"value":"技术面试的技巧与准备","url":"#技术面试的技巧与准备","depth":3},{"value":"致谢","url":"#致谢-1","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十三章：实用技巧与资源","datePublished":"2024-06-06T13:17:13.000Z","dateModified":"2024-06-06T13:17:32.000Z","description":"1. 代码管理与版本控制在开发过程中，代码管理与版本控制是保持项目有序、高效开发的重要手段。尤其是在团队协作中，版本控制工具如 Git 更是不可或缺。使用 Git 进行版本控制Git 是一个分布式版本控制系统，能够记录文件的变化历史，并允许多人协作开发。下面是 Git 的一些基本概念和操作：G...","url":"https://offernow.cn/docs/doc/💻 编程语言/Python/ot0ouhqynyuy3ovi"}},{"title":"第十二章：项目实战：数据分析与可视化","date":"2024-06-06T13:16:51.000Z","urlname":"atlossyzyv61l9mv","is_nav":false,"updated":"2024-06-06T13:17:12.000Z","not_show":false,"description":"项目介绍与规划数据分析项目的需求分析与功能规划在本章节中，我们将通过一个完整的数据分析与可视化项目来实践前面所学的知识。项目的目标是通过对某数据集进行深入分析，提取有用的信息并展示结果。具体需求包括：数据的导入与预处理数据清洗与缺失值处理数据的归一化与标准化数据的统计分析与建模数据的可视化展示...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1211,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Python/atlossyzyv61l9mv","path":"docs/doc/💻 编程语言/Python/atlossyzyv61l9mv","filePath":"docs/doc/💻 编程语言/Python/atlossyzyv61l9mv.md","toc":[{"value":"项目介绍与规划","url":"#项目介绍与规划-2","depth":2},{"value":"数据分析项目的需求分析与功能规划","url":"#数据分析项目的需求分析与功能规划","depth":3},{"value":"项目目录结构的设计","url":"#项目目录结构的设计-2","depth":3},{"value":"数据处理与清洗","url":"#数据处理与清洗","depth":2},{"value":"使用 Pandas 进行数据导入与处理","url":"#使用-pandas-进行数据导入与处理","depth":3},{"value":"数据清洗与缺失值处理","url":"#数据清洗与缺失值处理","depth":3},{"value":"数据的归一化与标准化","url":"#数据的归一化与标准化","depth":3},{"value":"数据分析与建模","url":"#数据分析与建模","depth":2},{"value":"基本的统计分析与数据探索","url":"#基本的统计分析与数据探索","depth":3},{"value":"使用 NumPy 进行数值计算","url":"#使用-numpy-进行数值计算","depth":3},{"value":"使用 Scikit-learn 进行简单的机器学习建模","url":"#使用-scikit-learn-进行简单的机器学习建模","depth":3},{"value":"数据可视化","url":"#数据可视化","depth":2},{"value":"使用 Matplotlib 创建基本图表","url":"#使用-matplotlib-创建基本图表","depth":3},{"value":"使用 Seaborn 进行高级可视化","url":"#使用-seaborn-进行高级可视化","depth":3},{"value":"交互式数据可视化工具（如 Plotly）","url":"#交互式数据可视化工具如-plotly","depth":3},{"value":"项目总结与报告","url":"#项目总结与报告","depth":2},{"value":"数据分析结果的总结","url":"#数据分析结果的总结","depth":3},{"value":"编写数据分析报告","url":"#编写数据分析报告","depth":3},{"value":"数据分析项目的发布","url":"#数据分析项目的发布","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十二章：项目实战：数据分析与可视化","datePublished":"2024-06-06T13:16:51.000Z","dateModified":"2024-06-06T13:17:12.000Z","description":"项目介绍与规划数据分析项目的需求分析与功能规划在本章节中，我们将通过一个完整的数据分析与可视化项目来实践前面所学的知识。项目的目标是通过对某数据集进行深入分析，提取有用的信息并展示结果。具体需求包括：数据的导入与预处理数据清洗与缺失值处理数据的归一化与标准化数据的统计分析与建模数据的可视化展示...","url":"https://offernow.cn/docs/doc/💻 编程语言/Python/atlossyzyv61l9mv"}},{"title":"第十一章：高级应用与最佳实践","date":"2024-06-06T13:16:06.000Z","urlname":"uiupdyiivfsu881e","is_nav":false,"updated":"2024-06-06T13:16:50.000Z","not_show":false,"description":"在本章中，我们将探讨一些 Python 编程中的高级应用和最佳实践。这些内容对于提升你的编程技巧和代码质量至关重要，不仅能让你写出更高效的代码，还能增强代码的可维护性和可读性。网络编程网络编程是现代编程的重要组成部分。通过网络编程，我们可以实现客户端与服务器之间的数据通信，处理 HTTP 请求...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2382,"minutes":8,"text":"8 分钟"},"slug":"doc/💻 编程语言/Python/uiupdyiivfsu881e","path":"docs/doc/💻 编程语言/Python/uiupdyiivfsu881e","filePath":"docs/doc/💻 编程语言/Python/uiupdyiivfsu881e.md","toc":[{"value":"网络编程","url":"#网络编程","depth":2},{"value":"使用 socket 模块进行网络编程","url":"#使用-socket-模块进行网络编程","depth":3},{"value":"创建客户端与服务器","url":"#创建客户端与服务器","depth":4},{"value":"数据的发送与接收","url":"#数据的发送与接收","depth":4},{"value":"HTTP 请求与响应","url":"#http-请求与响应","depth":3},{"value":"使用 requests 库进行 HTTP 请求","url":"#使用-requests-库进行-http-请求","depth":4},{"value":"解析 HTTP 响应","url":"#解析-http-响应","depth":4},{"value":"装饰器与上下文管理器","url":"#装饰器与上下文管理器","depth":2},{"value":"装饰器的基本概念","url":"#装饰器的基本概念","depth":3},{"value":"函数装饰器与类装饰器","url":"#函数装饰器与类装饰器","depth":4},{"value":"使用装饰器简化代码","url":"#使用装饰器简化代码","depth":4},{"value":"上下文管理器","url":"#上下文管理器","depth":3},{"value":"with 语句与上下文管理器","url":"#with-语句与上下文管理器","depth":4},{"value":"自定义上下文管理器","url":"#自定义上下文管理器","depth":4},{"value":"生成器与迭代器","url":"#生成器与迭代器","depth":2},{"value":"生成器的定义与使用","url":"#生成器的定义与使用","depth":3},{"value":"使用 yield 关键字创建生成器","url":"#使用-yield-关键字创建生成器","depth":4},{"value":"生成器的应用场景","url":"#生成器的应用场景","depth":4},{"value":"迭代器的基本概念","url":"#迭代器的基本概念","depth":3},{"value":"实现自定义迭代器","url":"#实现自定义迭代器","depth":4},{"value":"数据的发送与接收","url":"#数据的发送与接收-1","depth":4},{"value":"HTTP 请求与响应","url":"#http-请求与响应-1","depth":3},{"value":"使用 requests 库进行 HTTP 请求","url":"#使用-requests-库进行-http-请求-1","depth":4},{"value":"解析 HTTP 响应","url":"#解析-http-响应-1","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十一章：高级应用与最佳实践","datePublished":"2024-06-06T13:16:06.000Z","dateModified":"2024-06-06T13:16:50.000Z","description":"在本章中，我们将探讨一些 Python 编程中的高级应用和最佳实践。这些内容对于提升你的编程技巧和代码质量至关重要，不仅能让你写出更高效的代码，还能增强代码的可维护性和可读性。网络编程网络编程是现代编程的重要组成部分。通过网络编程，我们可以实现客户端与服务器之间的数据通信，处理 HTTP 请求...","url":"https://offernow.cn/docs/doc/💻 编程语言/Python/uiupdyiivfsu881e"}},{"title":"第十章：测试与调试","date":"2024-06-06T13:15:46.000Z","urlname":"pm63yobk1ogyquuo","is_nav":false,"updated":"2024-06-06T13:16:05.000Z","not_show":false,"description":"在开发软件时，确保代码的正确性和性能是至关重要的。本章将介绍如何进行单元测试、调试以及性能优化的方法。通过这些技巧，你将能够编写更加健壮和高效的代码。单元测试什么是单元测试单元测试是指对软件中的最小可测试单元进行验证，以确保其行为符合预期。在 Python 中，unittest 模块是一个强大...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1053,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Python/pm63yobk1ogyquuo","path":"docs/doc/💻 编程语言/Python/pm63yobk1ogyquuo","filePath":"docs/doc/💻 编程语言/Python/pm63yobk1ogyquuo.md","toc":[{"value":"单元测试","url":"#单元测试","depth":2},{"value":"什么是单元测试","url":"#什么是单元测试-1","depth":3},{"value":"使用 unittest 编写单元测试","url":"#使用-unittest-编写单元测试","depth":3},{"value":"运行与调试单元测试","url":"#运行与调试单元测试-1","depth":3},{"value":"调试技巧","url":"#调试技巧","depth":2},{"value":"常用调试工具与方法","url":"#常用调试工具与方法-1","depth":3},{"value":"使用断点与调试器","url":"#使用断点与调试器","depth":3},{"value":"性能优化","url":"#性能优化-1","depth":2},{"value":"常见的性能瓶颈与优化方法","url":"#常见的性能瓶颈与优化方法-1","depth":3},{"value":"使用 cProfile 进行性能分析","url":"#使用-cprofile-进行性能分析","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十章：测试与调试","datePublished":"2024-06-06T13:15:46.000Z","dateModified":"2024-06-06T13:16:05.000Z","description":"在开发软件时，确保代码的正确性和性能是至关重要的。本章将介绍如何进行单元测试、调试以及性能优化的方法。通过这些技巧，你将能够编写更加健壮和高效的代码。单元测试什么是单元测试单元测试是指对软件中的最小可测试单元进行验证，以确保其行为符合预期。在 Python 中，unittest 模块是一个强大...","url":"https://offernow.cn/docs/doc/💻 编程语言/Python/pm63yobk1ogyquuo"}},{"title":"第九章：项目实战：创建一个 Web 应用","date":"2024-06-06T13:13:39.000Z","urlname":"shm1q3eulqyv9rtv","is_nav":false,"updated":"2024-06-06T13:15:44.000Z","not_show":false,"description":"项目介绍与规划在本章中，我们将带领大家创建一个简单但功能齐全的 Web 应用，通过实践来巩固前面的学习内容。我们将使用 Flask 框架，逐步实现用户注册与登录功能，以及数据展示与交互功能。最后，我们讨论如何将应用部署到云平台。项目需求分析与功能规划在开始编码之前，我们需要对项目进行需求分析和...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1610,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/Python/shm1q3eulqyv9rtv","path":"docs/doc/💻 编程语言/Python/shm1q3eulqyv9rtv","filePath":"docs/doc/💻 编程语言/Python/shm1q3eulqyv9rtv.md","toc":[{"value":"项目介绍与规划","url":"#项目介绍与规划-3","depth":2},{"value":"项目需求分析与功能规划","url":"#项目需求分析与功能规划-2","depth":3},{"value":"项目目录结构的设计","url":"#项目目录结构的设计-3","depth":3},{"value":"","url":"#-10","depth":2},{"value":"开发与实现","url":"#开发与实现","depth":2},{"value":"使用 Flask 创建 Web 应用","url":"#使用-flask-创建-web-应用","depth":3},{"value":"项目初始化","url":"#项目初始化","depth":3},{"value":"实现用户注册与登录功能","url":"#实现用户注册与登录功能","depth":3},{"value":"创建数据库模型","url":"#创建数据库模型","depth":4},{"value":"创建注册与登录路由","url":"#创建注册与登录路由","depth":4},{"value":"创建模板文件","url":"#创建模板文件","depth":4},{"value":"实现数据展示与交互功能","url":"#实现数据展示与交互功能","depth":3},{"value":"更新用户信息","url":"#更新用户信息","depth":4},{"value":"创建更新用户信息模板","url":"#创建更新用户信息模板","depth":4},{"value":"部署与发布","url":"#部署与发布","depth":3},{"value":"部署到 Heroku","url":"#部署到-heroku","depth":4},{"value":"使用 Docker 进行容器化部署","url":"#使用-docker-进行容器化部署-1","depth":4},{"value":"实现数据展示与交互功能","url":"#实现数据展示与交互功能-1","depth":3},{"value":"更新用户信息","url":"#更新用户信息-1","depth":4},{"value":"创建更新用户信息模板","url":"#创建更新用户信息模板-1","depth":4},{"value":"结论","url":"#结论-5","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第九章：项目实战：创建一个 Web 应用","datePublished":"2024-06-06T13:13:39.000Z","dateModified":"2024-06-06T13:15:44.000Z","description":"项目介绍与规划在本章中，我们将带领大家创建一个简单但功能齐全的 Web 应用，通过实践来巩固前面的学习内容。我们将使用 Flask 框架，逐步实现用户注册与登录功能，以及数据展示与交互功能。最后，我们讨论如何将应用部署到云平台。项目需求分析与功能规划在开始编码之前，我们需要对项目进行需求分析和...","url":"https://offernow.cn/docs/doc/💻 编程语言/Python/shm1q3eulqyv9rtv"}},{"title":"第八章：常用库与框架","date":"2024-06-06T13:13:22.000Z","urlname":"woggg82kv2g6l9yk","is_nav":false,"updated":"2024-06-06T13:13:38.000Z","not_show":false,"description":"在这一章，我们将深入探讨 Python 中一些常用的库和框架，这些工具能帮助你更高效地进行数据处理、数据可视化以及 Web 开发。掌握这些库和框架，将大大提升你的编程效率和开发能力。数据处理库NumPyNumPy 是一个强大的数值计算库，提供了对大型多维数组和矩阵的支持，除此之外还提供了大量的...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":724,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/Python/woggg82kv2g6l9yk","path":"docs/doc/💻 编程语言/Python/woggg82kv2g6l9yk","filePath":"docs/doc/💻 编程语言/Python/woggg82kv2g6l9yk.md","toc":[{"value":"数据处理库","url":"#数据处理库","depth":2},{"value":"NumPy","url":"#numpy","depth":3},{"value":"安装 NumPy","url":"#安装-numpy","depth":4},{"value":"使用 NumPy","url":"#使用-numpy","depth":4},{"value":"Pandas","url":"#pandas","depth":3},{"value":"安装 Pandas","url":"#安装-pandas","depth":4},{"value":"使用 Pandas","url":"#使用-pandas","depth":4},{"value":"数据可视化库","url":"#数据可视化库","depth":2},{"value":"Matplotlib","url":"#matplotlib","depth":3},{"value":"安装 Matplotlib","url":"#安装-matplotlib","depth":4},{"value":"使用 Matplotlib","url":"#使用-matplotlib","depth":4},{"value":"Seaborn","url":"#seaborn","depth":3},{"value":"安装 Seaborn","url":"#安装-seaborn","depth":4},{"value":"使用 Seaborn","url":"#使用-seaborn","depth":4},{"value":"Web 框架","url":"#web-框架","depth":2},{"value":"Flask","url":"#flask","depth":3},{"value":"安装 Flask","url":"#安装-flask","depth":4},{"value":"使用 Flask","url":"#使用-flask","depth":4},{"value":"Django","url":"#django","depth":3},{"value":"安装 Django","url":"#安装-django","depth":4},{"value":"使用 Django","url":"#使用-django","depth":4},{"value":"总结","url":"#总结-11","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第八章：常用库与框架","datePublished":"2024-06-06T13:13:22.000Z","dateModified":"2024-06-06T13:13:38.000Z","description":"在这一章，我们将深入探讨 Python 中一些常用的库和框架，这些工具能帮助你更高效地进行数据处理、数据可视化以及 Web 开发。掌握这些库和框架，将大大提升你的编程效率和开发能力。数据处理库NumPyNumPy 是一个强大的数值计算库，提供了对大型多维数组和矩阵的支持，除此之外还提供了大量的...","url":"https://offernow.cn/docs/doc/💻 编程语言/Python/woggg82kv2g6l9yk"}},{"title":"第七章：面向对象编程","date":"2024-06-06T13:12:36.000Z","urlname":"guvhggxqlp5q5310","is_nav":false,"updated":"2024-06-06T13:13:21.000Z","not_show":false,"description":"面向对象编程（Object-Oriented Programming，简称 OOP）是一种编程范式，它将程序结构化为对象的集合，每个对象包含数据和操作这些数据的方法。本章将介绍 Python 中的面向对象编程，包括类与对象、继承与多态、特殊方法与运算符重载等内容。1. 类与对象1.1 类的定义...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":908,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Python/guvhggxqlp5q5310","path":"docs/doc/💻 编程语言/Python/guvhggxqlp5q5310","filePath":"docs/doc/💻 编程语言/Python/guvhggxqlp5q5310.md","toc":[{"value":"1. 类与对象","url":"#1-类与对象-1","depth":2},{"value":"1.1 类的定义与实例化","url":"#11-类的定义与实例化","depth":3},{"value":"1.2 类的属性与方法","url":"#12-类的属性与方法","depth":3},{"value":"1.3 self 参数的使用","url":"#13-self-参数的使用","depth":3},{"value":"2. 继承与多态","url":"#2-继承与多态-1","depth":2},{"value":"2.1 继承的基本概念","url":"#21-继承的基本概念","depth":3},{"value":"2.2 方法重写与多态","url":"#22-方法重写与多态","depth":3},{"value":"2.3 使用 super() 函数","url":"#23-使用-super-函数","depth":3},{"value":"3. 特殊方法与运算符重载","url":"#3-特殊方法与运算符重载","depth":2},{"value":"3.1 常见的特殊方法","url":"#31-常见的特殊方法","depth":3},{"value":"3.2 运算符重载的实现","url":"#32-运算符重载的实现","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第七章：面向对象编程","datePublished":"2024-06-06T13:12:36.000Z","dateModified":"2024-06-06T13:13:21.000Z","description":"面向对象编程（Object-Oriented Programming，简称 OOP）是一种编程范式，它将程序结构化为对象的集合，每个对象包含数据和操作这些数据的方法。本章将介绍 Python 中的面向对象编程，包括类与对象、继承与多态、特殊方法与运算符重载等内容。1. 类与对象1.1 类的定义...","url":"https://offernow.cn/docs/doc/💻 编程语言/Python/guvhggxqlp5q5310"}},{"title":"第六章：异常处理","date":"2024-06-06T13:12:18.000Z","urlname":"nf1psgb7aploi6sy","is_nav":false,"updated":"2024-06-06T13:12:36.000Z","not_show":false,"description":"在编程过程中，错误和异常是不可避免的。处理这些异常可以提高程序的稳定性和用户体验。本章将详细介绍 Python 中异常处理的基本概念、常见的异常类型、处理异常的方法以及如何自定义异常。1. 异常的基本概念什么是异常？异常是程序执行过程中，出现的一种非正常情况。它会中断程序的正常流转。Pytho...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":834,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Python/nf1psgb7aploi6sy","path":"docs/doc/💻 编程语言/Python/nf1psgb7aploi6sy","filePath":"docs/doc/💻 编程语言/Python/nf1psgb7aploi6sy.md","toc":[{"value":"1. 异常的基本概念","url":"#1-异常的基本概念","depth":2},{"value":"什么是异常？","url":"#什么是异常","depth":3},{"value":"常见的异常类型","url":"#常见的异常类型","depth":3},{"value":"2. 异常处理","url":"#2-异常处理","depth":2},{"value":"try-except 语句","url":"#try-except-语句","depth":3},{"value":"try-except-else 语句","url":"#try-except-else-语句","depth":3},{"value":"try-except-finally 语句","url":"#try-except-finally-语句","depth":3},{"value":"3. 自定义异常","url":"#3-自定义异常","depth":2},{"value":"创建自定义异常类","url":"#创建自定义异常类","depth":3},{"value":"在代码中使用自定义异常","url":"#在代码中使用自定义异常","depth":3},{"value":"小结","url":"#小结-4","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第六章：异常处理","datePublished":"2024-06-06T13:12:18.000Z","dateModified":"2024-06-06T13:12:36.000Z","description":"在编程过程中，错误和异常是不可避免的。处理这些异常可以提高程序的稳定性和用户体验。本章将详细介绍 Python 中异常处理的基本概念、常见的异常类型、处理异常的方法以及如何自定义异常。1. 异常的基本概念什么是异常？异常是程序执行过程中，出现的一种非正常情况。它会中断程序的正常流转。Pytho...","url":"https://offernow.cn/docs/doc/💻 编程语言/Python/nf1psgb7aploi6sy"}},{"title":"第五章：文件操作","date":"2024-06-06T13:11:57.000Z","urlname":"en013flx6b8gtvyi","is_nav":false,"updated":"2024-10-23T06:21:33.000Z","not_show":false,"description":"文件操作是编程中的一个重要部分，通过文件操作，我们可以将数据持久化存储在磁盘上，便于后续的读取与处理。本章将介绍如何在 Python 中进行文件的读写与操作。1. 文件读写1.1 打开与关闭文件在 Python 中，使用 open() 函数可以打开文件，使用 close() 函数可以关闭文件。...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":931,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Python/en013flx6b8gtvyi","path":"docs/doc/💻 编程语言/Python/en013flx6b8gtvyi","filePath":"docs/doc/💻 编程语言/Python/en013flx6b8gtvyi.md","toc":[{"value":"1. 文件读写","url":"#1-文件读写","depth":2},{"value":"1.1 打开与关闭文件","url":"#11-打开与关闭文件","depth":3},{"value":"1.2 读取文件内容","url":"#12-读取文件内容","depth":3},{"value":"1.3 写入文件内容","url":"#13-写入文件内容","depth":3},{"value":"2. 文件与目录操作","url":"#2-文件与目录操作","depth":2},{"value":"2.1 文件与目录的创建、删除与重命名","url":"#21-文件与目录的创建删除与重命名","depth":3},{"value":"2.2 路径操作与文件检查","url":"#22-路径操作与文件检查","depth":3},{"value":"2.3 示例：读取配置文件","url":"#23-示例读取配置文件","depth":3},{"value":"总结","url":"#总结-10","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第五章：文件操作","datePublished":"2024-06-06T13:11:57.000Z","dateModified":"2024-10-23T06:21:33.000Z","description":"文件操作是编程中的一个重要部分，通过文件操作，我们可以将数据持久化存储在磁盘上，便于后续的读取与处理。本章将介绍如何在 Python 中进行文件的读写与操作。1. 文件读写1.1 打开与关闭文件在 Python 中，使用 open() 函数可以打开文件，使用 close() 函数可以关闭文件。...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Python/en013flx6b8gtvyi"}},{"title":"第四章：函数与模块","date":"2024-06-06T13:11:18.000Z","urlname":"iktx8rplvlb9evix","is_nav":false,"updated":"2024-06-06T13:11:56.000Z","not_show":false,"description":"函数和模块是 Python 编程中的两个核心概念。通过掌握它们，你可以显著提高代码的可重用性和组织性。在这一章中，我们将深入探讨函数的定义、调用、参数与返回值，匿名函数，以及模块和包的使用。1. 函数1.1 函数的定义与调用函数是组织好的、可重复使用的、用于实现单一或相关联功能的代码块。Pyt...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":831,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Python/iktx8rplvlb9evix","path":"docs/doc/💻 编程语言/Python/iktx8rplvlb9evix","filePath":"docs/doc/💻 编程语言/Python/iktx8rplvlb9evix.md","toc":[{"value":"1. 函数","url":"#1-函数-1","depth":2},{"value":"1.1 函数的定义与调用","url":"#11-函数的定义与调用-1","depth":3},{"value":"1.2 函数参数与返回值","url":"#12-函数参数与返回值-1","depth":3},{"value":"可选参数和默认值","url":"#可选参数和默认值","depth":4},{"value":"1.3 匿名函数（lambda 表达式）","url":"#13-匿名函数lambda-表达式","depth":3},{"value":"2. 模块与包","url":"#2-模块与包","depth":2},{"value":"2.1 模块的导入与使用","url":"#21-模块的导入与使用","depth":3},{"value":"2.2 常用标准库模块","url":"#22-常用标准库模块","depth":3},{"value":"math 模块","url":"#math-模块","depth":4},{"value":"random 模块","url":"#random-模块","depth":4},{"value":"time 模块","url":"#time-模块","depth":4},{"value":"2.3 自定义模块与包","url":"#23-自定义模块与包","depth":3},{"value":"创建模块","url":"#创建模块","depth":4},{"value":"创建包","url":"#创建包","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第四章：函数与模块","datePublished":"2024-06-06T13:11:18.000Z","dateModified":"2024-06-06T13:11:56.000Z","description":"函数和模块是 Python 编程中的两个核心概念。通过掌握它们，你可以显著提高代码的可重用性和组织性。在这一章中，我们将深入探讨函数的定义、调用、参数与返回值，匿名函数，以及模块和包的使用。1. 函数1.1 函数的定义与调用函数是组织好的、可重复使用的、用于实现单一或相关联功能的代码块。Pyt...","url":"https://offernow.cn/docs/doc/💻 编程语言/Python/iktx8rplvlb9evix"}},{"title":"第三章：控制结构","date":"2024-06-06T13:10:33.000Z","urlname":"mrlpifpqy4nyfcl1","is_nav":false,"updated":"2024-06-06T13:11:16.000Z","not_show":false,"description":"1. 条件语句在编程中，条件语句用于根据不同的条件执行不同的代码片段。Python 提供了多种条件语句，使得程序能够根据判断结果选择性地执行代码。1.1 if 语句if 语句用于判断一个条件是否为真，如果为真，则执行相应的代码块。# 示例：判断一个数字是否为正数 num = 10  if nu...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1002,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Python/mrlpifpqy4nyfcl1","path":"docs/doc/💻 编程语言/Python/mrlpifpqy4nyfcl1","filePath":"docs/doc/💻 编程语言/Python/mrlpifpqy4nyfcl1.md","toc":[{"value":"1. 条件语句","url":"#1-条件语句-2","depth":2},{"value":"1.1 if 语句","url":"#11-if-语句","depth":3},{"value":"1.2 if-else 语句","url":"#12-if-else-语句","depth":3},{"value":"1.3 if-elif-else 语句","url":"#13-if-elif-else-语句","depth":3},{"value":"2. 循环语句","url":"#2-循环语句-2","depth":2},{"value":"2.1 for 循环","url":"#21-for-循环","depth":3},{"value":"2.2 while 循环","url":"#22-while-循环","depth":3},{"value":"2.3 循环中的 break 与 continue","url":"#23-循环中的-break-与-continue","depth":3},{"value":"3. 列表与字典","url":"#3-列表与字典","depth":2},{"value":"3.1 列表的定义与操作","url":"#31-列表的定义与操作","depth":3},{"value":"3.2 字典的定义与操作","url":"#32-字典的定义与操作","depth":3},{"value":"3.3 列表与字典的常用方法","url":"#33-列表与字典的常用方法","depth":3},{"value":"列表的常用方法","url":"#列表的常用方法","depth":4},{"value":"字典的常用方法","url":"#字典的常用方法","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第三章：控制结构","datePublished":"2024-06-06T13:10:33.000Z","dateModified":"2024-06-06T13:11:16.000Z","description":"1. 条件语句在编程中，条件语句用于根据不同的条件执行不同的代码片段。Python 提供了多种条件语句，使得程序能够根据判断结果选择性地执行代码。1.1 if 语句if 语句用于判断一个条件是否为真，如果为真，则执行相应的代码块。# 示例：判断一个数字是否为正数 num = 10  if nu...","url":"https://offernow.cn/docs/doc/💻 编程语言/Python/mrlpifpqy4nyfcl1"}},{"title":"第二章：Python 基础语法","date":"2024-06-06T13:10:05.000Z","urlname":"obdb3gm7ffdg1yho","is_nav":false,"updated":"2024-06-06T13:10:32.000Z","not_show":false,"description":"在这一章中，我们将深入学习 Python 的基础语法，包括变量与数据类型、运算符与表达式以及字符串操作。这些是编写 Python 程序最基本的知识点，掌握它们将为你后续的学习打下坚实的基础。1. 变量与数据类型1.1 变量的定义与使用变量是存储数据的容器。你可以将不同类型的数据赋值给变量，并随...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":930,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Python/obdb3gm7ffdg1yho","path":"docs/doc/💻 编程语言/Python/obdb3gm7ffdg1yho","filePath":"docs/doc/💻 编程语言/Python/obdb3gm7ffdg1yho.md","toc":[{"value":"1. 变量与数据类型","url":"#1-变量与数据类型-1","depth":2},{"value":"1.1 变量的定义与使用","url":"#11-变量的定义与使用","depth":3},{"value":"1.2 常见数据类型","url":"#12-常见数据类型","depth":3},{"value":"1.3 数据类型转换","url":"#13-数据类型转换","depth":3},{"value":"2. 运算符与表达式","url":"#2-运算符与表达式-1","depth":2},{"value":"2.1 算术运算符","url":"#21-算术运算符","depth":3},{"value":"2.2 比较运算符","url":"#22-比较运算符","depth":3},{"value":"2.3 逻辑运算符","url":"#23-逻辑运算符","depth":3},{"value":"3. 字符串操作","url":"#3-字符串操作-1","depth":2},{"value":"3.1 字符串的定义与操作","url":"#31-字符串的定义与操作","depth":3},{"value":"3.2 字符串切片与拼接","url":"#32-字符串切片与拼接","depth":3},{"value":"3.3 常用字符串方法","url":"#33-常用字符串方法","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第二章：Python 基础语法","datePublished":"2024-06-06T13:10:05.000Z","dateModified":"2024-06-06T13:10:32.000Z","description":"在这一章中，我们将深入学习 Python 的基础语法，包括变量与数据类型、运算符与表达式以及字符串操作。这些是编写 Python 程序最基本的知识点，掌握它们将为你后续的学习打下坚实的基础。1. 变量与数据类型1.1 变量的定义与使用变量是存储数据的容器。你可以将不同类型的数据赋值给变量，并随...","url":"https://offernow.cn/docs/doc/💻 编程语言/Python/obdb3gm7ffdg1yho"}},{"title":"第一章：初识 Python","date":"2024-06-06T13:08:59.000Z","urlname":"bg7zrrbwsud3n0ns","is_nav":false,"updated":"2024-06-06T13:10:04.000Z","not_show":false,"description":"1.1 Python 简介1.1.1 Python 的历史与发展Python 由 Guido van Rossum 于 1991 年首次发布，至今已有三十多年的历史。其名称灵感来源于英国的喜剧团体 \"Monty Python\"。Python 设计之初，就以简洁、易读和可扩展性为目标，逐渐发展成...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1529,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/Python/bg7zrrbwsud3n0ns","path":"docs/doc/💻 编程语言/Python/bg7zrrbwsud3n0ns","filePath":"docs/doc/💻 编程语言/Python/bg7zrrbwsud3n0ns.md","toc":[{"value":"1.1 Python 简介","url":"#11-python-简介","depth":2},{"value":"1.1.1 Python 的历史与发展","url":"#111-python-的历史与发展","depth":3},{"value":"1.1.2 Python 的应用领域","url":"#112-python-的应用领域","depth":3},{"value":"1.1.3 为什么选择 Python","url":"#113-为什么选择-python","depth":3},{"value":"1.2 安装与设置","url":"#12-安装与设置","depth":2},{"value":"1.2.1 安装 Python","url":"#121-安装-python","depth":3},{"value":"Windows 安装 Python","url":"#windows-安装-python","depth":4},{"value":"macOS 安装 Python","url":"#macos-安装-python","depth":4},{"value":"Linux 安装 Python","url":"#linux-安装-python","depth":4},{"value":"1.2.2 配置环境变量","url":"#122-配置环境变量","depth":3},{"value":"1.2.3 安装 IDE","url":"#123-安装-ide","depth":3},{"value":"PyCharm","url":"#pycharm","depth":4},{"value":"Visual Studio Code","url":"#visual-studio-code","depth":4},{"value":"1.3 第一个 Python 程序","url":"#13-第一个-python-程序","depth":2},{"value":"1.3.1 编写 Hello, World 程序","url":"#131-编写-hello-world-程序","depth":3},{"value":"1.3.2 运行 Python 程序","url":"#132-运行-python-程序","depth":3},{"value":"1.3.3 基本的代码编辑与调试","url":"#133-基本的代码编辑与调试","depth":3},{"value":"代码编辑","url":"#代码编辑","depth":4},{"value":"调试","url":"#调试","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第一章：初识 Python","datePublished":"2024-06-06T13:08:59.000Z","dateModified":"2024-06-06T13:10:04.000Z","description":"1.1 Python 简介1.1.1 Python 的历史与发展Python 由 Guido van Rossum 于 1991 年首次发布，至今已有三十多年的历史。其名称灵感来源于英国的喜剧团体 \"Monty Python\"。Python 设计之初，就以简洁、易读和可扩展性为目标，逐渐发展成...","url":"https://offernow.cn/docs/doc/💻 编程语言/Python/bg7zrrbwsud3n0ns"}},{"title":"Python","date":"2024-06-06T13:08:48.000Z","urlname":"zhq6gocbicvee96s","is_nav":true,"nav_path":"python","updated":"2024-09-28T04:05:02.000Z","not_show":false,"description":"---nav_path: pythonis_nav: true---第一部分：Python 入门第一章：初识 Python Python 简介 Python 的历史与发展Python 的应用领域为什么选择 Python 安装与设置 安装 Python（Windows、macOS、Linux）配...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1389,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/zhq6gocbicvee96s","path":"docs/doc/💻 编程语言/zhq6gocbicvee96s","filePath":"docs/doc/💻 编程语言/zhq6gocbicvee96s.md","toc":[{"value":"第一部分：Python 入门","url":"#第一部分python-入门","depth":3},{"value":"第一章：初识 Python","url":"#第一章初识-python","depth":4},{"value":"第二章：Python 基础语法","url":"#第二章python-基础语法","depth":4},{"value":"第三章：控制结构","url":"#第三章控制结构-2","depth":4},{"value":"第二部分：Python 进阶","url":"#第二部分python-进阶","depth":3},{"value":"第四章：函数与模块","url":"#第四章函数与模块-1","depth":4},{"value":"第五章：文件操作","url":"#第五章文件操作-1","depth":4},{"value":"第六章：异常处理","url":"#第六章异常处理","depth":4},{"value":"第七章：面向对象编程","url":"#第七章面向对象编程-1","depth":4},{"value":"第三部分：实战与高级应用","url":"#第三部分实战与高级应用-3","depth":3},{"value":"第八章：常用库与框架","url":"#第八章常用库与框架","depth":4},{"value":"第九章：项目实战：创建一个 Web 应用","url":"#第九章项目实战创建一个-web-应用","depth":4},{"value":"第十章：测试与调试","url":"#第十章测试与调试-2","depth":4},{"value":"第十一章：高级应用与最佳实践","url":"#第十一章高级应用与最佳实践-1","depth":4},{"value":"第十一章：高级应用与最佳实践（续）","url":"#第十一章高级应用与最佳实践续","depth":3},{"value":"第十二章：项目实战：数据分析与可视化","url":"#第十二章项目实战数据分析与可视化","depth":3},{"value":"第十三章：实用技巧与资源","url":"#第十三章实用技巧与资源","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Python","datePublished":"2024-06-06T13:08:48.000Z","dateModified":"2024-09-28T04:05:02.000Z","description":"---nav_path: pythonis_nav: true---第一部分：Python 入门第一章：初识 Python Python 简介 Python 的历史与发展Python 的应用领域为什么选择 Python 安装与设置 安装 Python（Windows、macOS、Linux）配...","url":"https://offernow.cn/docs/doc/💻 编程语言/zhq6gocbicvee96s"}},{"title":"第十二章：实用技巧与资源","date":"2024-06-06T13:06:06.000Z","urlname":"cw7dt4tdo1btwg5f","is_nav":false,"updated":"2024-06-06T13:06:28.000Z","not_show":false,"description":"1. 代码管理与版本控制1.1 使用 Git 进行版本控制Git 是当今软件开发中最流行的版本控制系统之一。它允许我们跟踪代码的更改，协作开发，并保存历史记录。下面是如何在项目中使用 Git 的基本指南。安装 Git首先，你需要在你的系统上安装 Git。你可以从 Git 官方网站 下载并安装适...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1550,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/PHP/cw7dt4tdo1btwg5f","path":"docs/doc/💻 编程语言/PHP/cw7dt4tdo1btwg5f","filePath":"docs/doc/💻 编程语言/PHP/cw7dt4tdo1btwg5f.md","toc":[{"value":"1. 代码管理与版本控制","url":"#1-代码管理与版本控制","depth":2},{"value":"1.1 使用 Git 进行版本控制","url":"#11-使用-git-进行版本控制","depth":3},{"value":"安装 Git","url":"#安装-git","depth":4},{"value":"初始化 Git 仓库","url":"#初始化-git-仓库","depth":4},{"value":"配置用户信息","url":"#配置用户信息","depth":4},{"value":"1.2 Git 的基本命令与工作流程","url":"#12-git-的基本命令与工作流程","depth":3},{"value":"克隆远程仓库","url":"#克隆远程仓库","depth":4},{"value":"查看状态","url":"#查看状态","depth":4},{"value":"添加文件到暂存区","url":"#添加文件到暂存区","depth":4},{"value":"提交更改","url":"#提交更改","depth":4},{"value":"查看提交历史","url":"#查看提交历史","depth":4},{"value":"推送更改到远程仓库","url":"#推送更改到远程仓库","depth":4},{"value":"1.3 GitHub 的使用与项目托管","url":"#13-github-的使用与项目托管","depth":3},{"value":"创建 GitHub 仓库","url":"#创建-github-仓库","depth":4},{"value":"关联本地与远程仓库","url":"#关联本地与远程仓库","depth":4},{"value":"推送到 GitHub","url":"#推送到-github","depth":4},{"value":"2. PHP 的常用工具与资源","url":"#2-php-的常用工具与资源","depth":2},{"value":"2.1 常用的 PHP 库与工具","url":"#21-常用的-php-库与工具","depth":3},{"value":"Composer","url":"#composer","depth":4},{"value":"PHPUnit","url":"#phpunit","depth":4},{"value":"Laravel","url":"#laravel","depth":4},{"value":"2.2 PHP 学习资源推荐","url":"#22-php-学习资源推荐","depth":3},{"value":"书籍","url":"#书籍","depth":4},{"value":"网站","url":"#网站","depth":4},{"value":"视频课程","url":"#视频课程","depth":4},{"value":"3. 职业发展与面试指南","url":"#3-职业发展与面试指南","depth":2},{"value":"3.1 PHP 开发者的职业发展路径","url":"#31-php-开发者的职业发展路径","depth":3},{"value":"3.2 常见的 PHP 面试题与解答","url":"#32-常见的-php-面试题与解答","depth":3},{"value":"1. 什么是 PHP？","url":"#1-什么是-php","depth":4},{"value":"2. 如何连接 MySQL 数据库？","url":"#2-如何连接-mysql-数据库","depth":4},{"value":"3. 解释一下 MVC 模式","url":"#3-解释一下-mvc-模式","depth":4},{"value":"3.3 技术面试的技巧与准备","url":"#33-技术面试的技巧与准备","depth":3},{"value":"1. 熟悉基础知识","url":"#1-熟悉基础知识","depth":4},{"value":"2. 编写代码","url":"#2-编写代码","depth":4},{"value":"3. 项目经验","url":"#3-项目经验","depth":4},{"value":"4. 面试礼仪","url":"#4-面试礼仪","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十二章：实用技巧与资源","datePublished":"2024-06-06T13:06:06.000Z","dateModified":"2024-06-06T13:06:28.000Z","description":"1. 代码管理与版本控制1.1 使用 Git 进行版本控制Git 是当今软件开发中最流行的版本控制系统之一。它允许我们跟踪代码的更改，协作开发，并保存历史记录。下面是如何在项目中使用 Git 的基本指南。安装 Git首先，你需要在你的系统上安装 Git。你可以从 Git 官方网站 下载并安装适...","url":"https://offernow.cn/docs/doc/💻 编程语言/PHP/cw7dt4tdo1btwg5f"}},{"title":"第十一章：高级应用与最佳实践","date":"2024-06-06T13:05:50.000Z","urlname":"txfcgfsfxdhd7sxm","is_nav":false,"updated":"2024-06-06T13:06:05.000Z","not_show":false,"description":"在本章中，我们将探讨一些高级应用和最佳实践。这些技术和概念不仅能够帮助你编写更高效、更安全的代码，还能提升你的开发水平，让你在职业生涯中更具竞争力。11.1 错误处理与异常11.1.1 错误处理机制错误处理是编写健壮应用程序的关键部分。PHP 提供了多种错误处理机制，包括内置的错误处理函数和异...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":932,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/PHP/txfcgfsfxdhd7sxm","path":"docs/doc/💻 编程语言/PHP/txfcgfsfxdhd7sxm","filePath":"docs/doc/💻 编程语言/PHP/txfcgfsfxdhd7sxm.md","toc":[{"value":"11.1 错误处理与异常","url":"#111-错误处理与异常","depth":2},{"value":"11.1.1 错误处理机制","url":"#1111-错误处理机制","depth":3},{"value":"内置错误处理函数","url":"#内置错误处理函数","depth":4},{"value":"11.1.2 使用 try-catch 处理异常","url":"#1112-使用-try-catch-处理异常","depth":3},{"value":"11.1.3 自定义异常类","url":"#1113-自定义异常类","depth":3},{"value":"11.2 多线程与异步编程","url":"#112-多线程与异步编程","depth":2},{"value":"11.2.1 基本的多线程概念","url":"#1121-基本的多线程概念","depth":3},{"value":"11.2.2 使用 pthreads 实现多线程","url":"#1122-使用-pthreads-实现多线程","depth":3},{"value":"11.2.3 异步编程与并行处理","url":"#1123-异步编程与并行处理","depth":3},{"value":"11.3 安全编程","url":"#113-安全编程","depth":2},{"value":"11.3.1 常见的安全漏洞","url":"#1131-常见的安全漏洞","depth":3},{"value":"XSS（跨站脚本攻击）","url":"#xss跨站脚本攻击","depth":4},{"value":"CSRF（跨站请求伪造）","url":"#csrf跨站请求伪造","depth":4},{"value":"11.3.2 安全编程的最佳实践","url":"#1132-安全编程的最佳实践","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十一章：高级应用与最佳实践","datePublished":"2024-06-06T13:05:50.000Z","dateModified":"2024-06-06T13:06:05.000Z","description":"在本章中，我们将探讨一些高级应用和最佳实践。这些技术和概念不仅能够帮助你编写更高效、更安全的代码，还能提升你的开发水平，让你在职业生涯中更具竞争力。11.1 错误处理与异常11.1.1 错误处理机制错误处理是编写健壮应用程序的关键部分。PHP 提供了多种错误处理机制，包括内置的错误处理函数和异...","url":"https://offernow.cn/docs/doc/💻 编程语言/PHP/txfcgfsfxdhd7sxm"}},{"title":"第十章：测试与调试","date":"2024-06-06T13:05:23.000Z","urlname":"bh6bor1mf0ylvx5k","is_nav":false,"updated":"2024-06-06T13:05:49.000Z","not_show":false,"description":"1. 单元测试什么是单元测试单元测试是对软件中的最小可测试部分进行验证的一种测试方法。通常，这些最小单元是函数或方法。通过单元测试，我们可以确保每个独立的部分都能按照预期工作，从而提高整个系统的可靠性和可维护性。使用 PHPUnit 编写单元测试PHPUnit 是 PHP 的一个单元测试框架，...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1298,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/PHP/bh6bor1mf0ylvx5k","path":"docs/doc/💻 编程语言/PHP/bh6bor1mf0ylvx5k","filePath":"docs/doc/💻 编程语言/PHP/bh6bor1mf0ylvx5k.md","toc":[{"value":"1. 单元测试","url":"#1-单元测试-1","depth":2},{"value":"什么是单元测试","url":"#什么是单元测试","depth":3},{"value":"使用 PHPUnit 编写单元测试","url":"#使用-phpunit-编写单元测试","depth":3},{"value":"安装 PHPUnit","url":"#安装-phpunit","depth":4},{"value":"编写第一个测试用例","url":"#编写第一个测试用例","depth":4},{"value":"运行单元测试","url":"#运行单元测试","depth":4},{"value":"运行与调试单元测试","url":"#运行与调试单元测试","depth":3},{"value":"使用断点调试","url":"#使用断点调试","depth":4},{"value":"2. 调试技巧","url":"#2-调试技巧-1","depth":2},{"value":"常用调试工具与方法","url":"#常用调试工具与方法","depth":3},{"value":"var_dump 和 print_r","url":"#var_dump-和-print_r","depth":4},{"value":"error_log","url":"#error_log","depth":4},{"value":"Xdebug","url":"#xdebug","depth":4},{"value":"使用 Xdebug 进行调试","url":"#使用-xdebug-进行调试","depth":3},{"value":"安装 Xdebug","url":"#安装-xdebug","depth":4},{"value":"配置 Xdebug","url":"#配置-xdebug","depth":4},{"value":"使用 IDE 进行调试","url":"#使用-ide-进行调试","depth":4},{"value":"3. 性能优化","url":"#3-性能优化-2","depth":2},{"value":"常见的性能瓶颈与优化方法","url":"#常见的性能瓶颈与优化方法","depth":3},{"value":"数据库查询优化","url":"#数据库查询优化","depth":4},{"value":"使用缓存","url":"#使用缓存","depth":4},{"value":"代码优化","url":"#代码优化","depth":4},{"value":"使用 Blackfire 进行性能分析","url":"#使用-blackfire-进行性能分析","depth":3},{"value":"安装 Blackfire","url":"#安装-blackfire","depth":4},{"value":"配置 Blackfire","url":"#配置-blackfire","depth":4},{"value":"运行性能分析","url":"#运行性能分析","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十章：测试与调试","datePublished":"2024-06-06T13:05:23.000Z","dateModified":"2024-06-06T13:05:49.000Z","description":"1. 单元测试什么是单元测试单元测试是对软件中的最小可测试部分进行验证的一种测试方法。通常，这些最小单元是函数或方法。通过单元测试，我们可以确保每个独立的部分都能按照预期工作，从而提高整个系统的可靠性和可维护性。使用 PHPUnit 编写单元测试PHPUnit 是 PHP 的一个单元测试框架，...","url":"https://offernow.cn/docs/doc/💻 编程语言/PHP/bh6bor1mf0ylvx5k"}},{"title":"第九章：项目实战：创建一个博客系统","date":"2024-06-06T13:04:15.000Z","urlname":"nqpe5cnq7c60rcfv","is_nav":false,"updated":"2024-06-06T13:05:23.000Z","not_show":false,"description":"这一章将带领你从零开始，逐步创建一个功能完备的博客系统。这不仅是对前面章节所学内容的实践和巩固，也是一次宝贵的项目经验积累。通过这个项目，你将深入理解 PHP 的应用，并掌握开发一个完整项目的流程和技巧。项目介绍与规划项目需求分析与功能规划在开始编码之前，明确项目的需求和功能非常重要。我们将实...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":4209,"minutes":14,"text":"14 分钟"},"slug":"doc/💻 编程语言/PHP/nqpe5cnq7c60rcfv","path":"docs/doc/💻 编程语言/PHP/nqpe5cnq7c60rcfv","filePath":"docs/doc/💻 编程语言/PHP/nqpe5cnq7c60rcfv.md","toc":[{"value":"项目介绍与规划","url":"#项目介绍与规划-1","depth":2},{"value":"项目需求分析与功能规划","url":"#项目需求分析与功能规划-1","depth":3},{"value":"项目目录结构的设计","url":"#项目目录结构的设计-1","depth":3},{"value":"用户注册与登录","url":"#用户注册与登录","depth":2},{"value":"实现用户注册功能","url":"#实现用户注册功能","depth":3},{"value":"数据库设计","url":"#数据库设计","depth":4},{"value":"用户注册表单","url":"#用户注册表单","depth":4},{"value":"处理用户注册请求","url":"#处理用户注册请求","depth":4},{"value":"用户模型","url":"#用户模型","depth":4},{"value":"实现用户登录功能","url":"#实现用户登录功能","depth":3},{"value":"用户登录表单","url":"#用户登录表单","depth":4},{"value":"处理用户登录请求","url":"#处理用户登录请求","depth":4},{"value":"用户认证与权限管理","url":"#用户认证与权限管理","depth":4},{"value":"文章管理","url":"#文章管理","depth":2},{"value":"创建与编辑文章","url":"#创建与编辑文章","depth":3},{"value":"数据库设计","url":"#数据库设计-1","depth":4},{"value":"文章创建表单","url":"#文章创建表单","depth":4},{"value":"处理文章创建请求","url":"#处理文章创建请求","depth":4},{"value":"文章模型","url":"#文章模型","depth":4},{"value":"编辑文章功能","url":"#编辑文章功能","depth":3},{"value":"文章编辑表单","url":"#文章编辑表单","depth":4},{"value":"处理文章编辑请求","url":"#处理文章编辑请求","depth":4},{"value":"文章的展示与分页","url":"#文章的展示与分页","depth":3},{"value":"文章展示页面","url":"#文章展示页面","depth":4},{"value":"处理文章展示请求","url":"#处理文章展示请求","depth":4},{"value":"文章分页","url":"#文章分页","depth":4},{"value":"评论功能的实现","url":"#评论功能的实现","depth":3},{"value":"数据库设计","url":"#数据库设计-2","depth":4},{"value":"评论表单","url":"#评论表单","depth":4},{"value":"处理评论创建请求","url":"#处理评论创建请求","depth":4},{"value":"编辑文章功能","url":"#编辑文章功能-1","depth":3},{"value":"文章编辑表单","url":"#文章编辑表单-1","depth":4},{"value":"处理文章编辑请求","url":"#处理文章编辑请求-1","depth":4},{"value":"文章的展示与分页","url":"#文章的展示与分页-1","depth":3},{"value":"文章展示页面","url":"#文章展示页面-1","depth":4},{"value":"处理文章展示请求","url":"#处理文章展示请求-1","depth":4},{"value":"文章分页","url":"#文章分页-1","depth":4},{"value":"评论功能的实现","url":"#评论功能的实现-1","depth":3},{"value":"数据库设计","url":"#数据库设计-3","depth":4},{"value":"评论表单","url":"#评论表单-1","depth":4},{"value":"处理评论创建请求","url":"#处理评论创建请求-1","depth":4},{"value":"评论模型","url":"#评论模型","depth":3},{"value":"文章详情页面","url":"#文章详情页面","depth":3},{"value":"项目部署","url":"#项目部署","depth":2},{"value":"部署博客系统到服务器","url":"#部署博客系统到服务器","depth":3},{"value":"使用 Docker 进行容器化部署","url":"#使用-docker-进行容器化部署","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第九章：项目实战：创建一个博客系统","datePublished":"2024-06-06T13:04:15.000Z","dateModified":"2024-06-06T13:05:23.000Z","description":"这一章将带领你从零开始，逐步创建一个功能完备的博客系统。这不仅是对前面章节所学内容的实践和巩固，也是一次宝贵的项目经验积累。通过这个项目，你将深入理解 PHP 的应用，并掌握开发一个完整项目的流程和技巧。项目介绍与规划项目需求分析与功能规划在开始编码之前，明确项目的需求和功能非常重要。我们将实...","url":"https://offernow.cn/docs/doc/💻 编程语言/PHP/nqpe5cnq7c60rcfv"}},{"title":"第八章：数据库操作","date":"2024-06-06T13:03:45.000Z","urlname":"mgr9vbx84mhwrztw","is_nav":false,"updated":"2024-06-06T13:04:14.000Z","not_show":false,"description":"在现代 Web 开发中，数据库是存储和管理数据的核心组件。PHP 作为一种服务器端脚本语言，提供了强大的数据库操作功能。本章将详细介绍数据库的基础知识以及如何使用 PHP 与数据库进行交互。数据库基础数据库与表的概念数据库是一个组织化的数据集合，用于存储和管理数据。数据库由表组成，每个表包含若...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":721,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/PHP/mgr9vbx84mhwrztw","path":"docs/doc/💻 编程语言/PHP/mgr9vbx84mhwrztw","filePath":"docs/doc/💻 编程语言/PHP/mgr9vbx84mhwrztw.md","toc":[{"value":"数据库基础","url":"#数据库基础","depth":2},{"value":"数据库与表的概念","url":"#数据库与表的概念","depth":3},{"value":"SQL 基本语法","url":"#sql-基本语法","depth":3},{"value":"示例：","url":"#示例-7","depth":4},{"value":"使用 PHP 进行数据库操作","url":"#使用-php-进行数据库操作","depth":2},{"value":"使用 PDO 连接数据库","url":"#使用-pdo-连接数据库","depth":3},{"value":"连接数据库","url":"#连接数据库","depth":4},{"value":"执行 SQL 查询","url":"#执行-sql-查询","depth":3},{"value":"插入数据","url":"#插入数据","depth":4},{"value":"查询数据","url":"#查询数据","depth":4},{"value":"数据库的安全与优化","url":"#数据库的安全与优化","depth":2},{"value":"防止 SQL 注入","url":"#防止-sql-注入","depth":3},{"value":"使用预处理语句","url":"#使用预处理语句","depth":4},{"value":"数据库优化技巧","url":"#数据库优化技巧","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第八章：数据库操作","datePublished":"2024-06-06T13:03:45.000Z","dateModified":"2024-06-06T13:04:14.000Z","description":"在现代 Web 开发中，数据库是存储和管理数据的核心组件。PHP 作为一种服务器端脚本语言，提供了强大的数据库操作功能。本章将详细介绍数据库的基础知识以及如何使用 PHP 与数据库进行交互。数据库基础数据库与表的概念数据库是一个组织化的数据集合，用于存储和管理数据。数据库由表组成，每个表包含若...","url":"https://offernow.cn/docs/doc/💻 编程语言/PHP/mgr9vbx84mhwrztw"}},{"title":"第七章：面向对象编程","date":"2024-06-06T13:03:27.000Z","urlname":"tbm5xx6o52l7wl3q","is_nav":false,"updated":"2024-06-06T13:03:44.000Z","not_show":false,"description":"面向对象编程（OOP）是一种程序设计范式，它将程序结构化为由数据和行为组成的对象。PHP 支持面向对象编程，这使得代码更加模块化、易于维护和重用。在这一章中，我们将深入探讨 PHP 中的 OOP 概念及其应用。1. 类与对象类的定义与实例化类是对象的蓝图，定义了对象的属性和方法。对象是类的实例...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":780,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/PHP/tbm5xx6o52l7wl3q","path":"docs/doc/💻 编程语言/PHP/tbm5xx6o52l7wl3q","filePath":"docs/doc/💻 编程语言/PHP/tbm5xx6o52l7wl3q.md","toc":[{"value":"1. 类与对象","url":"#1-类与对象","depth":2},{"value":"类的定义与实例化","url":"#类的定义与实例化","depth":3},{"value":"类的属性与方法","url":"#类的属性与方法","depth":3},{"value":"构造函数与析构函数","url":"#构造函数与析构函数","depth":3},{"value":"2. 继承与多态","url":"#2-继承与多态","depth":2},{"value":"继承的基本概念","url":"#继承的基本概念","depth":3},{"value":"方法重写与多态","url":"#方法重写与多态","depth":3},{"value":"使用 parent 关键字","url":"#使用-parent-关键字","depth":3},{"value":"3. 接口与抽象类","url":"#3-接口与抽象类","depth":2},{"value":"接口的定义与实现","url":"#接口的定义与实现","depth":3},{"value":"抽象类的定义与使用","url":"#抽象类的定义与使用","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第七章：面向对象编程","datePublished":"2024-06-06T13:03:27.000Z","dateModified":"2024-06-06T13:03:44.000Z","description":"面向对象编程（OOP）是一种程序设计范式，它将程序结构化为由数据和行为组成的对象。PHP 支持面向对象编程，这使得代码更加模块化、易于维护和重用。在这一章中，我们将深入探讨 PHP 中的 OOP 概念及其应用。1. 类与对象类的定义与实例化类是对象的蓝图，定义了对象的属性和方法。对象是类的实例...","url":"https://offernow.cn/docs/doc/💻 编程语言/PHP/tbm5xx6o52l7wl3q"}},{"title":"第六章：会话与状态管理","date":"2024-06-06T13:03:08.000Z","urlname":"uccxksbim9tw9ex5","is_nav":false,"updated":"2024-06-06T13:03:24.000Z","not_show":false,"description":"在现代的 web 开发中，管理用户的会话和状态是必不可少的一部分。PHP 提供了多种工具和方法来处理会话和状态管理。本章将介绍如何使用 Cookie 和 Session 来管理用户的会话和状态。6.1 CookieCookie 是服务器发送到用户浏览器并存储在本地的一小段数据，浏览器会在每次请...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":817,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/PHP/uccxksbim9tw9ex5","path":"docs/doc/💻 编程语言/PHP/uccxksbim9tw9ex5","filePath":"docs/doc/💻 编程语言/PHP/uccxksbim9tw9ex5.md","toc":[{"value":"6.1 Cookie","url":"#61-cookie","depth":2},{"value":"6.1.1 设置与获取 Cookie","url":"#611-设置与获取-cookie","depth":3},{"value":"6.1.2 Cookie 的使用场景与安全性","url":"#612-cookie-的使用场景与安全性","depth":3},{"value":"6.2 Session","url":"#62-session","depth":2},{"value":"6.2.1 会话的概念","url":"#621-会话的概念","depth":3},{"value":"6.2.2 启动与销毁会话","url":"#622-启动与销毁会话","depth":3},{"value":"6.2.3 会话中的数据存储","url":"#623-会话中的数据存储","depth":3},{"value":"总结","url":"#总结-9","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第六章：会话与状态管理","datePublished":"2024-06-06T13:03:08.000Z","dateModified":"2024-06-06T13:03:24.000Z","description":"在现代的 web 开发中，管理用户的会话和状态是必不可少的一部分。PHP 提供了多种工具和方法来处理会话和状态管理。本章将介绍如何使用 Cookie 和 Session 来管理用户的会话和状态。6.1 CookieCookie 是服务器发送到用户浏览器并存储在本地的一小段数据，浏览器会在每次请...","url":"https://offernow.cn/docs/doc/💻 编程语言/PHP/uccxksbim9tw9ex5"}},{"title":"第五章：文件操作","date":"2024-06-06T13:02:22.000Z","urlname":"qws9bios7wl3p9rf","is_nav":false,"updated":"2024-07-05T08:11:13.000Z","not_show":false,"description":"在本章中，我们将深入探讨 PHP 中的文件操作。这是一个非常重要的主题，因为许多应用程序需要处理文件输入和输出。我们将学习如何打开和关闭文件、读取和写入文件内容，以及进行文件和目录的操作。文件读写在 PHP 中，处理文件的基本步骤是打开文件、读取或写入内容，然后关闭文件。让我们详细了解这些步骤...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":908,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/PHP/qws9bios7wl3p9rf","path":"docs/doc/💻 编程语言/PHP/qws9bios7wl3p9rf","filePath":"docs/doc/💻 编程语言/PHP/qws9bios7wl3p9rf.md","toc":[{"value":"文件读写","url":"#文件读写","depth":2},{"value":"打开与关闭文件","url":"#打开与关闭文件","depth":3},{"value":"读取文件内容","url":"#读取文件内容","depth":3},{"value":"使用 fread()","url":"#使用-fread","depth":4},{"value":"使用 fgets()","url":"#使用-fgets","depth":4},{"value":"使用 file_get_contents()","url":"#使用-file_get_contents","depth":4},{"value":"写入文件内容","url":"#写入文件内容","depth":3},{"value":"使用 fwrite() 和 fputs()","url":"#使用-fwrite-和-fputs","depth":4},{"value":"使用 file_put_contents()","url":"#使用-file_put_contents","depth":4},{"value":"文件与目录操作","url":"#文件与目录操作","depth":2},{"value":"创建、删除与重命名文件","url":"#创建删除与重命名文件","depth":3},{"value":"创建文件","url":"#创建文件","depth":4},{"value":"删除文件","url":"#删除文件","depth":4},{"value":"重命名文件","url":"#重命名文件","depth":4},{"value":"文件与目录的创建、删除与重命名","url":"#文件与目录的创建删除与重命名","depth":3},{"value":"创建目录","url":"#创建目录","depth":4},{"value":"删除目录","url":"#删除目录","depth":4},{"value":"重命名目录","url":"#重命名目录","depth":4},{"value":"路径操作与文件检查","url":"#路径操作与文件检查","depth":3},{"value":"获取文件路径","url":"#获取文件路径","depth":4},{"value":"检查文件是否存在","url":"#检查文件是否存在","depth":4},{"value":"检查是否为文件或目录","url":"#检查是否为文件或目录","depth":4},{"value":"文件大小和最后修改时间","url":"#文件大小和最后修改时间","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第五章：文件操作","datePublished":"2024-06-06T13:02:22.000Z","dateModified":"2024-07-05T08:11:13.000Z","description":"在本章中，我们将深入探讨 PHP 中的文件操作。这是一个非常重要的主题，因为许多应用程序需要处理文件输入和输出。我们将学习如何打开和关闭文件、读取和写入文件内容，以及进行文件和目录的操作。文件读写在 PHP 中，处理文件的基本步骤是打开文件、读取或写入内容，然后关闭文件。让我们详细了解这些步骤...","url":"https://offernow.cn/docs/doc/💻 编程语言/PHP/qws9bios7wl3p9rf"}},{"title":"第四章：函数与模块","date":"2024-06-06T13:02:01.000Z","urlname":"xtwxxkkcg4k5714x","is_nav":false,"updated":"2024-06-06T13:02:17.000Z","not_show":false,"description":"在本章中，我们将深入探讨 PHP 中的函数和模块化开发。函数是代码复用的基础，而模块化开发可以帮助我们组织和管理代码，使其更加清晰和易于维护。函数函数的定义与调用在 PHP 中，函数通过 function 关键字定义。以下是一个简单的函数示例：<?php function greet($nam...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":621,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/PHP/xtwxxkkcg4k5714x","path":"docs/doc/💻 编程语言/PHP/xtwxxkkcg4k5714x","filePath":"docs/doc/💻 编程语言/PHP/xtwxxkkcg4k5714x.md","toc":[{"value":"函数","url":"#函数-1","depth":2},{"value":"函数的定义与调用","url":"#函数的定义与调用","depth":3},{"value":"函数参数与返回值","url":"#函数参数与返回值","depth":3},{"value":"可变函数与匿名函数","url":"#可变函数与匿名函数","depth":3},{"value":"可变函数","url":"#可变函数","depth":4},{"value":"匿名函数","url":"#匿名函数-1","depth":4},{"value":"模块化开发","url":"#模块化开发","depth":2},{"value":"include 和 require 语句","url":"#include-和-require-语句","depth":3},{"value":"include 示例","url":"#include-示例","depth":4},{"value":"require 示例","url":"#require-示例","depth":4},{"value":"文件包含与重用代码","url":"#文件包含与重用代码","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第四章：函数与模块","datePublished":"2024-06-06T13:02:01.000Z","dateModified":"2024-06-06T13:02:17.000Z","description":"在本章中，我们将深入探讨 PHP 中的函数和模块化开发。函数是代码复用的基础，而模块化开发可以帮助我们组织和管理代码，使其更加清晰和易于维护。函数函数的定义与调用在 PHP 中，函数通过 function 关键字定义。以下是一个简单的函数示例：<?php function greet($nam...","url":"https://offernow.cn/docs/doc/💻 编程语言/PHP/xtwxxkkcg4k5714x"}},{"title":"第三章：控制结构","date":"2024-06-06T12:56:08.000Z","urlname":"xr7ke859gt93r6b1","is_nav":false,"updated":"2024-06-06T12:58:02.000Z","not_show":false,"description":"1. 条件语句if 语句在 PHP 编程中，条件语句是控制代码流的重要工具。if 语句用于根据特定条件执行代码块。其基本语法如下：if (条件) {     // 当条件为真时执行的代码 }示例：$score = 85;  if ($score >= 60) {     echo \"你通过了考...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1005,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/PHP/xr7ke859gt93r6b1","path":"docs/doc/💻 编程语言/PHP/xr7ke859gt93r6b1","filePath":"docs/doc/💻 编程语言/PHP/xr7ke859gt93r6b1.md","toc":[{"value":"1. 条件语句","url":"#1-条件语句-1","depth":2},{"value":"if 语句","url":"#if-语句-1","depth":3},{"value":"if-else 语句","url":"#if-else-语句-1","depth":3},{"value":"if-elseif-else 语句","url":"#if-elseif-else-语句-1","depth":3},{"value":"2. 循环语句","url":"#2-循环语句-1","depth":2},{"value":"for 循环","url":"#for-循环-1","depth":3},{"value":"while 循环","url":"#while-循环-1","depth":3},{"value":"do-while 循环","url":"#do-while-循环-1","depth":3},{"value":"循环中的 break 与 continue","url":"#循环中的-break-与-continue-1","depth":3},{"value":"3. 数组","url":"#3-数组-1","depth":2},{"value":"数组的定义与操作","url":"#数组的定义与操作-2","depth":3},{"value":"关联数组与多维数组","url":"#关联数组与多维数组","depth":3},{"value":"数组的常用函数","url":"#数组的常用函数","depth":3},{"value":"数组遍历","url":"#数组遍历","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第三章：控制结构","datePublished":"2024-06-06T12:56:08.000Z","dateModified":"2024-06-06T12:58:02.000Z","description":"1. 条件语句if 语句在 PHP 编程中，条件语句是控制代码流的重要工具。if 语句用于根据特定条件执行代码块。其基本语法如下：if (条件) {     // 当条件为真时执行的代码 }示例：$score = 85;  if ($score >= 60) {     echo \"你通过了考...","url":"https://offernow.cn/docs/doc/💻 编程语言/PHP/xr7ke859gt93r6b1"}},{"title":"第二章：PHP 基础语法","date":"2024-06-06T12:55:36.000Z","urlname":"gs8hg3gxeuo5fk6s","is_nav":false,"updated":"2024-06-06T12:56:07.000Z","not_show":false,"description":"变量与数据类型变量的定义与使用在 PHP 中，变量是临时存储数据的容器。变量的定义非常简单，使用 $ 符号加上变量的名称即可。变量名称必须以字母或下划线开头，后面可以跟字母、数字或下划线。示例：定义变量<?php $name = \"John\"; // 字符串类型 $age = 25; // 整...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":863,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/PHP/gs8hg3gxeuo5fk6s","path":"docs/doc/💻 编程语言/PHP/gs8hg3gxeuo5fk6s","filePath":"docs/doc/💻 编程语言/PHP/gs8hg3gxeuo5fk6s.md","toc":[{"value":"变量与数据类型","url":"#变量与数据类型","depth":3},{"value":"变量的定义与使用","url":"#变量的定义与使用","depth":4},{"value":"常见数据类型","url":"#常见数据类型-1","depth":4},{"value":"数据类型转换","url":"#数据类型转换-1","depth":4},{"value":"运算符与表达式","url":"#运算符与表达式","depth":3},{"value":"算术运算符","url":"#算术运算符-1","depth":4},{"value":"比较运算符","url":"#比较运算符-1","depth":4},{"value":"逻辑运算符","url":"#逻辑运算符-1","depth":4},{"value":"字符串操作","url":"#字符串操作","depth":3},{"value":"字符串的定义与操作","url":"#字符串的定义与操作-1","depth":4},{"value":"字符串连接与插值","url":"#字符串连接与插值","depth":4},{"value":"常用字符串函数","url":"#常用字符串函数","depth":4},{"value":"总结","url":"#总结-8","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第二章：PHP 基础语法","datePublished":"2024-06-06T12:55:36.000Z","dateModified":"2024-06-06T12:56:07.000Z","description":"变量与数据类型变量的定义与使用在 PHP 中，变量是临时存储数据的容器。变量的定义非常简单，使用 $ 符号加上变量的名称即可。变量名称必须以字母或下划线开头，后面可以跟字母、数字或下划线。示例：定义变量<?php $name = \"John\"; // 字符串类型 $age = 25; // 整...","url":"https://offernow.cn/docs/doc/💻 编程语言/PHP/gs8hg3gxeuo5fk6s"}},{"title":"第一章：初识 PHP","date":"2024-06-06T12:55:01.000Z","urlname":"gbs82nup9mi8b74t","is_nav":false,"updated":"2024-06-06T12:55:35.000Z","not_show":false,"description":"1. PHP 简介PHP 的历史与发展PHP（Hypertext Preprocessor）最初由 Rasmus Lerdorf 于 1994 年创建。最初的版本被称为“Personal Home Page Tools”，主要用于追踪访问自己网页的访问者。随着时间的推移，PHP 逐步演变为一种...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1391,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/PHP/gbs82nup9mi8b74t","path":"docs/doc/💻 编程语言/PHP/gbs82nup9mi8b74t","filePath":"docs/doc/💻 编程语言/PHP/gbs82nup9mi8b74t.md","toc":[{"value":"1. PHP 简介","url":"#1-php-简介","depth":4},{"value":"PHP 的历史与发展","url":"#php-的历史与发展","depth":5},{"value":"PHP 的应用领域","url":"#php-的应用领域","depth":5},{"value":"为什么选择 PHP","url":"#为什么选择-php","depth":5},{"value":"2. 安装与设置","url":"#2-安装与设置-1","depth":4},{"value":"安装 PHP（Windows、macOS、Linux）","url":"#安装-phpwindowsmacoslinux","depth":5},{"value":"配置环境变量","url":"#配置环境变量","depth":5},{"value":"安装 Web 服务器（如 Apache、Nginx）","url":"#安装-web-服务器如-apachenginx","depth":5},{"value":"安装 IDE（如 PhpStorm、VS Code）","url":"#安装-ide如-phpstormvs-code","depth":5},{"value":"3. 第一个 PHP 程序","url":"#3-第一个-php-程序","depth":4},{"value":"编写 Hello, World 程序","url":"#编写-hello-world-程序","depth":5},{"value":"运行 PHP 程序","url":"#运行-php-程序","depth":5},{"value":"基本的代码编辑与调试","url":"#基本的代码编辑与调试","depth":5}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第一章：初识 PHP","datePublished":"2024-06-06T12:55:01.000Z","dateModified":"2024-06-06T12:55:35.000Z","description":"1. PHP 简介PHP 的历史与发展PHP（Hypertext Preprocessor）最初由 Rasmus Lerdorf 于 1994 年创建。最初的版本被称为“Personal Home Page Tools”，主要用于追踪访问自己网页的访问者。随着时间的推移，PHP 逐步演变为一种...","url":"https://offernow.cn/docs/doc/💻 编程语言/PHP/gbs82nup9mi8b74t"}},{"title":"PHP","date":"2024-06-06T12:54:53.000Z","urlname":"czngzmnckwyp8lff","is_nav":false,"nav_path":"php","updated":"2024-06-06T13:07:48.000Z","not_show":false,"description":"---nav_path: php---第一部分：PHP 入门第一章：初识 PHP PHP 简介 PHP 的历史与发展PHP 的应用领域为什么选择 PHP 安装与设置 安装 PHP（Windows、macOS、Linux）配置环境变量安装 Web 服务器（如 Apache、Nginx）安装 ID...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1062,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/czngzmnckwyp8lff","path":"docs/doc/💻 编程语言/czngzmnckwyp8lff","filePath":"docs/doc/💻 编程语言/czngzmnckwyp8lff.md","toc":[{"value":"第一部分：PHP 入门","url":"#第一部分php-入门","depth":3},{"value":"第一章：初识 PHP","url":"#第一章初识-php","depth":4},{"value":"第二章：PHP 基础语法","url":"#第二章php-基础语法","depth":4},{"value":"第三章：控制结构","url":"#第三章控制结构","depth":4},{"value":"第二部分：PHP 进阶","url":"#第二部分php-进阶","depth":3},{"value":"第四章：函数与模块","url":"#第四章函数与模块","depth":4},{"value":"第五章：文件操作","url":"#第五章文件操作","depth":4},{"value":"第六章：会话与状态管理","url":"#第六章会话与状态管理","depth":4},{"value":"第七章：面向对象编程","url":"#第七章面向对象编程","depth":4},{"value":"第三部分：实战与高级应用","url":"#第三部分实战与高级应用-1","depth":3},{"value":"第八章：数据库操作","url":"#第八章数据库操作","depth":4},{"value":"第九章：项目实战：创建一个博客系统","url":"#第九章项目实战创建一个博客系统","depth":4},{"value":"第十章：测试与调试","url":"#第十章测试与调试","depth":4},{"value":"第十一章：高级应用与最佳实践","url":"#第十一章高级应用与最佳实践","depth":4},{"value":"第十二章：实用技巧与资源","url":"#第十二章实用技巧与资源","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"PHP","datePublished":"2024-06-06T12:54:53.000Z","dateModified":"2024-06-06T13:07:48.000Z","description":"---nav_path: php---第一部分：PHP 入门第一章：初识 PHP PHP 简介 PHP 的历史与发展PHP 的应用领域为什么选择 PHP 安装与设置 安装 PHP（Windows、macOS、Linux）配置环境变量安装 Web 服务器（如 Apache、Nginx）安装 ID...","url":"https://offernow.cn/docs/doc/💻 编程语言/czngzmnckwyp8lff"}},{"title":"第十三章：前沿技术与工具","date":"2024-06-06T12:54:08.000Z","urlname":"qmskxpgo0gepy3as","is_nav":false,"updated":"2024-06-06T12:54:30.000Z","not_show":false,"description":"在本章中，我们将探讨一些最新的 CSS 技术和工具，这些工具可以大大提升你在开发中的效率和能力。我们将主要关注 CSS 预处理器、CSS 框架以及一些现代 CSS 功能。CSS 预处理器CSS 预处理器是使 CSS 代码更高效和可维护的工具。它们提供了变量、嵌套规则、混入（mixins）等功能...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":968,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/CSS/qmskxpgo0gepy3as","path":"docs/doc/💻 编程语言/CSS/qmskxpgo0gepy3as","filePath":"docs/doc/💻 编程语言/CSS/qmskxpgo0gepy3as.md","toc":[{"value":"CSS 预处理器","url":"#css-预处理器","depth":2},{"value":"Sass 的基本语法与使用","url":"#sass-的基本语法与使用","depth":3},{"value":"安装 Sass","url":"#安装-sass","depth":4},{"value":"使用 Sass","url":"#使用-sass","depth":4},{"value":"编译 Sass","url":"#编译-sass","depth":4},{"value":"Less 的基本语法与使用","url":"#less-的基本语法与使用","depth":3},{"value":"安装 Less","url":"#安装-less","depth":4},{"value":"使用 Less","url":"#使用-less","depth":4},{"value":"编译 Less","url":"#编译-less","depth":4},{"value":"CSS 框架","url":"#css-框架","depth":2},{"value":"Bootstrap 的基本概念与使用","url":"#bootstrap-的基本概念与使用","depth":3},{"value":"安装 Bootstrap","url":"#安装-bootstrap","depth":4},{"value":"使用 Bootstrap","url":"#使用-bootstrap","depth":4},{"value":"Tailwind CSS 的基本概念与使用","url":"#tailwind-css-的基本概念与使用","depth":3},{"value":"安装 Tailwind CSS","url":"#安装-tailwind-css","depth":4},{"value":"配置 Tailwind CSS","url":"#配置-tailwind-css","depth":4},{"value":"使用 Tailwind CSS","url":"#使用-tailwind-css","depth":4},{"value":"现代 CSS 功能","url":"#现代-css-功能","depth":2},{"value":"CSS 变量（Custom Properties）","url":"#css-变量custom-properties","depth":3},{"value":"定义 CSS 变量","url":"#定义-css-变量","depth":4},{"value":"使用 CSS 变量","url":"#使用-css-变量","depth":4},{"value":"CSS Houdini","url":"#css-houdini","depth":3},{"value":"安装 CSS Houdini","url":"#安装-css-houdini","depth":4},{"value":"使用 CSS Houdini","url":"#使用-css-houdini","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十三章：前沿技术与工具","datePublished":"2024-06-06T12:54:08.000Z","dateModified":"2024-06-06T12:54:30.000Z","description":"在本章中，我们将探讨一些最新的 CSS 技术和工具，这些工具可以大大提升你在开发中的效率和能力。我们将主要关注 CSS 预处理器、CSS 框架以及一些现代 CSS 功能。CSS 预处理器CSS 预处理器是使 CSS 代码更高效和可维护的工具。它们提供了变量、嵌套规则、混入（mixins）等功能...","url":"https://offernow.cn/docs/doc/💻 编程语言/CSS/qmskxpgo0gepy3as"}},{"title":"第十二章：CSS 最佳实践","date":"2024-06-06T12:53:50.000Z","urlname":"vdk10lu3bumgg45z","is_nav":false,"updated":"2024-06-06T12:54:07.000Z","not_show":false,"description":"在本章中，我们将探讨编写高质量 CSS 代码的最佳实践，帮助你在实际开发中编写更易读、易维护且高效率的 CSS 代码。这些最佳实践涵盖了代码风格与规范、可维护性与模块化，以及性能优化等方面。掌握这些内容，将让你在 CSS 开发的道路上如虎添翼。1. CSS 代码风格与规范编写高质量 CSS 代...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":860,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/CSS/vdk10lu3bumgg45z","path":"docs/doc/💻 编程语言/CSS/vdk10lu3bumgg45z","filePath":"docs/doc/💻 编程语言/CSS/vdk10lu3bumgg45z.md","toc":[{"value":"1. CSS 代码风格与规范","url":"#1-css-代码风格与规范","depth":2},{"value":"编写高质量 CSS 代码的原则","url":"#编写高质量-css-代码的原则","depth":3},{"value":"常见的 CSS 编码规范","url":"#常见的-css-编码规范","depth":3},{"value":"2. 可维护性与模块化","url":"#2-可维护性与模块化","depth":2},{"value":"使用 BEM 命名法","url":"#使用-bem-命名法","depth":3},{"value":"CSS 预处理器（如 Sass, Less）","url":"#css-预处理器如-sass-less","depth":3},{"value":"使用 Sass 示例","url":"#使用-sass-示例","depth":4},{"value":"3. 性能优化","url":"#3-性能优化","depth":2},{"value":"减少重排与重绘","url":"#减少重排与重绘","depth":3},{"value":"使用 CSS 压缩工具","url":"#使用-css-压缩工具","depth":3},{"value":"使用 CSSnano 示例","url":"#使用-cssnano-示例","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十二章：CSS 最佳实践","datePublished":"2024-06-06T12:53:50.000Z","dateModified":"2024-06-06T12:54:07.000Z","description":"在本章中，我们将探讨编写高质量 CSS 代码的最佳实践，帮助你在实际开发中编写更易读、易维护且高效率的 CSS 代码。这些最佳实践涵盖了代码风格与规范、可维护性与模块化，以及性能优化等方面。掌握这些内容，将让你在 CSS 开发的道路上如虎添翼。1. CSS 代码风格与规范编写高质量 CSS 代...","url":"https://offernow.cn/docs/doc/💻 编程语言/CSS/vdk10lu3bumgg45z"}},{"title":"第十一章：项目实战：创建个人作品集网站","date":"2024-06-06T12:50:53.000Z","urlname":"lq2tb7mgzm32zafs","is_nav":false,"updated":"2024-06-06T12:51:15.000Z","not_show":false,"description":"1. 项目介绍与规划1.1 项目需求分析与功能规划在本章节中，我们将通过创建一个个人作品集网站来实践我们所学的 CSS 技巧。一个典型的个人作品集网站应包含以下功能：主页：展示个人简介、照片和主要作品。关于我：详细介绍你的背景、技能和经历。作品集：展示你的项目和作品，每个作品包含图片、描述和链...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1054,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/CSS/lq2tb7mgzm32zafs","path":"docs/doc/💻 编程语言/CSS/lq2tb7mgzm32zafs","filePath":"docs/doc/💻 编程语言/CSS/lq2tb7mgzm32zafs.md","toc":[{"value":"1. 项目介绍与规划","url":"#1-项目介绍与规划","depth":2},{"value":"1.1 项目需求分析与功能规划","url":"#11-项目需求分析与功能规划","depth":3},{"value":"1.2 项目目录结构的设计","url":"#12-项目目录结构的设计","depth":3},{"value":"2. 页面结构与布局","url":"#2-页面结构与布局","depth":2},{"value":"2.1 使用 HTML 构建页面结构","url":"#21-使用-html-构建页面结构","depth":3},{"value":"2.2 使用 CSS 进行布局与样式美化","url":"#22-使用-css-进行布局与样式美化","depth":3},{"value":"3. 互动与特效","url":"#3-互动与特效","depth":2},{"value":"3.1 实现导航栏的交互效果","url":"#31-实现导航栏的交互效果","depth":3},{"value":"3.2 添加动画与过渡效果","url":"#32-添加动画与过渡效果","depth":3},{"value":"3.3 创建响应式设计","url":"#33-创建响应式设计","depth":3},{"value":"4. 项目总结与发布","url":"#4-项目总结与发布","depth":2},{"value":"4.1 项目优化与测试","url":"#41-项目优化与测试","depth":3},{"value":"4.2 部署网站到 GitHub Pages 或 Netlify","url":"#42-部署网站到-github-pages-或-netlify","depth":3},{"value":"部署到 GitHub Pages","url":"#部署到-github-pages","depth":4},{"value":"部署到 Netlify","url":"#部署到-netlify","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十一章：项目实战：创建个人作品集网站","datePublished":"2024-06-06T12:50:53.000Z","dateModified":"2024-06-06T12:51:15.000Z","description":"1. 项目介绍与规划1.1 项目需求分析与功能规划在本章节中，我们将通过创建一个个人作品集网站来实践我们所学的 CSS 技巧。一个典型的个人作品集网站应包含以下功能：主页：展示个人简介、照片和主要作品。关于我：详细介绍你的背景、技能和经历。作品集：展示你的项目和作品，每个作品包含图片、描述和链...","url":"https://offernow.cn/docs/doc/💻 编程语言/CSS/lq2tb7mgzm32zafs"}},{"title":"第十章：变换与特效","date":"2024-06-06T12:50:27.000Z","urlname":"tdk1gwkigaz5pu7d","is_nav":false,"updated":"2024-06-06T12:50:52.000Z","not_show":false,"description":"在这一章中，我们将探讨 CSS 中的变换（Transform）和滤镜效果（Filter）。这些技术可以帮助我们创建更加生动和引人注目的网页效果。1. 变换（Transform）CSS 变换属性允许您对元素进行平移、缩放、旋转和倾斜。变换应用于元素时，不会影响到文档流，而只是改变元素的呈现方式。...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":843,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/CSS/tdk1gwkigaz5pu7d","path":"docs/doc/💻 编程语言/CSS/tdk1gwkigaz5pu7d","filePath":"docs/doc/💻 编程语言/CSS/tdk1gwkigaz5pu7d.md","toc":[{"value":"1. 变换（Transform）","url":"#1-变换transform","depth":2},{"value":"1.1 平移（translate）","url":"#11-平移translate","depth":3},{"value":"1.2 缩放（scale）","url":"#12-缩放scale","depth":3},{"value":"1.3 旋转（rotate）","url":"#13-旋转rotate","depth":3},{"value":"1.4 倾斜（skew）","url":"#14-倾斜skew","depth":3},{"value":"1.5 组合变换","url":"#15-组合变换","depth":3},{"value":"2. 滤镜效果（Filter）","url":"#2-滤镜效果filter","depth":2},{"value":"2.1 常见滤镜效果","url":"#21-常见滤镜效果","depth":3},{"value":"模糊（blur）","url":"#模糊blur","depth":4},{"value":"亮度（brightness）","url":"#亮度brightness","depth":4},{"value":"对比度（contrast）","url":"#对比度contrast","depth":4},{"value":"2.2 组合滤镜效果","url":"#22-组合滤镜效果","depth":3},{"value":"3. 实例应用","url":"#3-实例应用","depth":2},{"value":"3.1 创建悬浮变换效果","url":"#31-创建悬浮变换效果","depth":3},{"value":"3.2 创建模糊背景效果","url":"#32-创建模糊背景效果","depth":3},{"value":"总结","url":"#总结","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十章：变换与特效","datePublished":"2024-06-06T12:50:27.000Z","dateModified":"2024-06-06T12:50:52.000Z","description":"在这一章中，我们将探讨 CSS 中的变换（Transform）和滤镜效果（Filter）。这些技术可以帮助我们创建更加生动和引人注目的网页效果。1. 变换（Transform）CSS 变换属性允许您对元素进行平移、缩放、旋转和倾斜。变换应用于元素时，不会影响到文档流，而只是改变元素的呈现方式。...","url":"https://offernow.cn/docs/doc/💻 编程语言/CSS/tdk1gwkigaz5pu7d"}},{"title":"第九章：过渡与动画","date":"2024-06-06T12:50:03.000Z","urlname":"ddgrqxv0hf72h2s1","is_nav":false,"updated":"2024-06-06T12:50:26.000Z","not_show":false,"description":"1. CSS 过渡1.1 过渡的基本概念CSS 过渡（Transitions）是一种可以让属性值在一定时间内平滑过渡的技术。它能增强用户体验，增加页面的动态效果。1.2 过渡属性与过渡效果CSS 提供了几个专用属性来定义过渡效果：transition-property：指定要添加过渡效果的 C...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":730,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/CSS/ddgrqxv0hf72h2s1","path":"docs/doc/💻 编程语言/CSS/ddgrqxv0hf72h2s1","filePath":"docs/doc/💻 编程语言/CSS/ddgrqxv0hf72h2s1.md","toc":[{"value":"1. CSS 过渡","url":"#1-css-过渡","depth":2},{"value":"1.1 过渡的基本概念","url":"#11-过渡的基本概念","depth":3},{"value":"1.2 过渡属性与过渡效果","url":"#12-过渡属性与过渡效果","depth":3},{"value":"示例代码","url":"#示例代码","depth":4},{"value":"解释","url":"#解释-1","depth":4},{"value":"2. CSS 动画","url":"#2-css-动画","depth":2},{"value":"2.1 动画的基本概念","url":"#21-动画的基本概念","depth":3},{"value":"2.2 关键帧动画（@keyframes）","url":"#22-关键帧动画keyframes","depth":3},{"value":"示例代码","url":"#示例代码-1","depth":4},{"value":"解释","url":"#解释-2","depth":4},{"value":"2.3 动画属性与动画效果","url":"#23-动画属性与动画效果","depth":3},{"value":"动画属性","url":"#动画属性","depth":4},{"value":"动画效果","url":"#动画效果","depth":4},{"value":"示例代码","url":"#示例代码-2","depth":4},{"value":"解释","url":"#解释-3","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第九章：过渡与动画","datePublished":"2024-06-06T12:50:03.000Z","dateModified":"2024-06-06T12:50:26.000Z","description":"1. CSS 过渡1.1 过渡的基本概念CSS 过渡（Transitions）是一种可以让属性值在一定时间内平滑过渡的技术。它能增强用户体验，增加页面的动态效果。1.2 过渡属性与过渡效果CSS 提供了几个专用属性来定义过渡效果：transition-property：指定要添加过渡效果的 C...","url":"https://offernow.cn/docs/doc/💻 编程语言/CSS/ddgrqxv0hf72h2s1"}},{"title":"第八章：响应式设计","date":"2024-06-06T12:49:41.000Z","urlname":"ka3v1d0ucgf0qxf9","is_nav":false,"updated":"2024-06-06T12:50:02.000Z","not_show":false,"description":"响应式设计是一种网页设计理念，使网页在不同设备和屏幕尺寸上都能够有良好的显示效果。通过响应式设计，网站能够自动调整布局和样式，以适应用户的设备，提供最佳的用户体验。1. 媒体查询1.1 媒体查询的基本语法媒体查询（Media Queries）是响应式设计的核心技术之一。它允许我们根据设备的特性...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":876,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/CSS/ka3v1d0ucgf0qxf9","path":"docs/doc/💻 编程语言/CSS/ka3v1d0ucgf0qxf9","filePath":"docs/doc/💻 编程语言/CSS/ka3v1d0ucgf0qxf9.md","toc":[{"value":"1. 媒体查询","url":"#1-媒体查询","depth":2},{"value":"1.1 媒体查询的基本语法","url":"#11-媒体查询的基本语法","depth":3},{"value":"1.2 常见媒体查询示例","url":"#12-常见媒体查询示例","depth":3},{"value":"1.2.1 针对不同设备宽度的媒体查询","url":"#121-针对不同设备宽度的媒体查询","depth":4},{"value":"1.2.2 针对设备方向的媒体查询","url":"#122-针对设备方向的媒体查询","depth":4},{"value":"2. 流式布局与弹性布局","url":"#2-流式布局与弹性布局","depth":2},{"value":"2.1 流式布局的定义与应用","url":"#21-流式布局的定义与应用","depth":3},{"value":"2.2 弹性布局在响应式设计中的应用","url":"#22-弹性布局在响应式设计中的应用","depth":3},{"value":"2.3 示例：响应式导航菜单","url":"#23-示例响应式导航菜单","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第八章：响应式设计","datePublished":"2024-06-06T12:49:41.000Z","dateModified":"2024-06-06T12:50:02.000Z","description":"响应式设计是一种网页设计理念，使网页在不同设备和屏幕尺寸上都能够有良好的显示效果。通过响应式设计，网站能够自动调整布局和样式，以适应用户的设备，提供最佳的用户体验。1. 媒体查询1.1 媒体查询的基本语法媒体查询（Media Queries）是响应式设计的核心技术之一。它允许我们根据设备的特性...","url":"https://offernow.cn/docs/doc/💻 编程语言/CSS/ka3v1d0ucgf0qxf9"}},{"title":"第七章：网格布局（Grid）","date":"2024-06-06T12:49:21.000Z","urlname":"ugcqxf30k12gdkic","is_nav":false,"updated":"2024-06-06T12:49:37.000Z","not_show":false,"description":"1. Grid 的基本概念Grid 容器与 Grid 项目在 CSS Grid 布局中，主要有两个重要的角色：Grid 容器和 Grid 项目。Grid 容器是包含了所有 Grid 项目的元素，而 Grid 项目则是 Grid 容器内部的直接子元素。Grid 容器：通过设置 display: ...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":788,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/CSS/ugcqxf30k12gdkic","path":"docs/doc/💻 编程语言/CSS/ugcqxf30k12gdkic","filePath":"docs/doc/💻 编程语言/CSS/ugcqxf30k12gdkic.md","toc":[{"value":"1. Grid 的基本概念","url":"#1-grid-的基本概念","depth":2},{"value":"Grid 容器与 Grid 项目","url":"#grid-容器与-grid-项目","depth":3},{"value":"定义网格行与列","url":"#定义网格行与列","depth":3},{"value":"网格线与网格区域","url":"#网格线与网格区域","depth":3},{"value":"2. 网格布局的应用","url":"#2-网格布局的应用","depth":2},{"value":"创建复杂布局","url":"#创建复杂布局","depth":3},{"value":"网格对齐与间距","url":"#网格对齐与间距","depth":3},{"value":"响应式网格布局","url":"#响应式网格布局","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第七章：网格布局（Grid）","datePublished":"2024-06-06T12:49:21.000Z","dateModified":"2024-06-06T12:49:37.000Z","description":"1. Grid 的基本概念Grid 容器与 Grid 项目在 CSS Grid 布局中，主要有两个重要的角色：Grid 容器和 Grid 项目。Grid 容器是包含了所有 Grid 项目的元素，而 Grid 项目则是 Grid 容器内部的直接子元素。Grid 容器：通过设置 display: ...","url":"https://offernow.cn/docs/doc/💻 编程语言/CSS/ugcqxf30k12gdkic"}},{"title":"第六章：弹性布局（Flexbox）","date":"2024-06-06T12:48:01.000Z","urlname":"hymkly476a5278g0","is_nav":false,"updated":"2024-06-06T12:49:20.000Z","not_show":false,"description":"1. Flexbox 的基本概念弹性布局（Flexbox）是一种用于设计复杂布局的 CSS 模块。它特别适合用于需要灵活响应各种屏幕尺寸和方向的布局。Flexbox 通过使用容器和项目的概念，使得布局变得更加容易和直观。Flex 容器与 Flex 项目Flex 容器一个 Flex 容器是包含 ...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1216,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/CSS/hymkly476a5278g0","path":"docs/doc/💻 编程语言/CSS/hymkly476a5278g0","filePath":"docs/doc/💻 编程语言/CSS/hymkly476a5278g0.md","toc":[{"value":"1. Flexbox 的基本概念","url":"#1-flexbox-的基本概念","depth":2},{"value":"Flex 容器与 Flex 项目","url":"#flex-容器与-flex-项目","depth":3},{"value":"Flex 容器","url":"#flex-容器","depth":4},{"value":"Flex 项目","url":"#flex-项目","depth":4},{"value":"Flex 容器属性","url":"#flex-容器属性","depth":3},{"value":"主轴和交叉轴","url":"#主轴和交叉轴","depth":4},{"value":"flex-direction","url":"#flex-direction","depth":4},{"value":"justify-content","url":"#justify-content","depth":4},{"value":"align-items","url":"#align-items","depth":4},{"value":"flex-wrap","url":"#flex-wrap","depth":4},{"value":"Flex 项目属性","url":"#flex-项目属性","depth":3},{"value":"order","url":"#order","depth":4},{"value":"flex-grow","url":"#flex-grow","depth":4},{"value":"flex-shrink","url":"#flex-shrink","depth":4},{"value":"flex-basis","url":"#flex-basis","depth":4},{"value":"align-self","url":"#align-self","depth":4},{"value":"2. 弹性布局的应用","url":"#2-弹性布局的应用","depth":2},{"value":"水平居中与垂直居中","url":"#水平居中与垂直居中","depth":3},{"value":"多列布局与均分布局","url":"#多列布局与均分布局","depth":3},{"value":"响应式布局的实现","url":"#响应式布局的实现","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第六章：弹性布局（Flexbox）","datePublished":"2024-06-06T12:48:01.000Z","dateModified":"2024-06-06T12:49:20.000Z","description":"1. Flexbox 的基本概念弹性布局（Flexbox）是一种用于设计复杂布局的 CSS 模块。它特别适合用于需要灵活响应各种屏幕尺寸和方向的布局。Flexbox 通过使用容器和项目的概念，使得布局变得更加容易和直观。Flex 容器与 Flex 项目Flex 容器一个 Flex 容器是包含 ...","url":"https://offernow.cn/docs/doc/💻 编程语言/CSS/hymkly476a5278g0"}},{"title":"第五章：布局基础","date":"2024-06-06T12:47:01.000Z","urlname":"wofgtfxighsrilqr","is_nav":false,"updated":"2024-06-06T12:48:00.000Z","not_show":false,"description":"1. 流动布局块级元素与内联元素在CSS中，HTML元素可以分为块级元素（Block-level Element）和内联元素（Inline Element）。了解它们的不同特性对于布局设计至关重要。块级元素块级元素总是从新行开始，并且会独占一行。常见的块级元素包括 <div>、<h1> 至 <...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2378,"minutes":8,"text":"8 分钟"},"slug":"doc/💻 编程语言/CSS/wofgtfxighsrilqr","path":"docs/doc/💻 编程语言/CSS/wofgtfxighsrilqr","filePath":"docs/doc/💻 编程语言/CSS/wofgtfxighsrilqr.md","toc":[{"value":"1. 流动布局","url":"#1-流动布局","depth":2},{"value":"块级元素与内联元素","url":"#块级元素与内联元素","depth":3},{"value":"块级元素","url":"#块级元素","depth":4},{"value":"内联元素","url":"#内联元素","depth":4},{"value":"标准文档流","url":"#标准文档流","depth":3},{"value":"2. 浮动布局","url":"#2-浮动布局","depth":2},{"value":"浮动的基本概念","url":"#浮动的基本概念","depth":3},{"value":"清除浮动","url":"#清除浮动","depth":3},{"value":"浮动布局的实例应用","url":"#浮动布局的实例应用","depth":3},{"value":"3. 定位布局","url":"#3-定位布局","depth":2},{"value":"定位的基本概念","url":"#定位的基本概念","depth":3},{"value":"相对定位","url":"#相对定位","depth":4},{"value":"绝对定位","url":"#绝对定位","depth":4},{"value":"固定定位","url":"#固定定位","depth":4},{"value":"粘性定位","url":"#粘性定位","depth":4},{"value":"定位布局的实例应用","url":"#定位布局的实例应用","depth":3},{"value":"粘性定位的场景应用","url":"#粘性定位的场景应用","depth":3},{"value":"实现复杂布局","url":"#实现复杂布局","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第五章：布局基础","datePublished":"2024-06-06T12:47:01.000Z","dateModified":"2024-06-06T12:48:00.000Z","description":"1. 流动布局块级元素与内联元素在CSS中，HTML元素可以分为块级元素（Block-level Element）和内联元素（Inline Element）。了解它们的不同特性对于布局设计至关重要。块级元素块级元素总是从新行开始，并且会独占一行。常见的块级元素包括 <div>、<h1> 至 <...","url":"https://offernow.cn/docs/doc/💻 编程语言/CSS/wofgtfxighsrilqr"}},{"title":"第四章：盒模型","date":"2024-06-06T12:46:35.000Z","urlname":"gpi033cgll2yqupy","is_nav":false,"updated":"2024-06-06T12:46:59.000Z","not_show":false,"description":"盒模型是 CSS 中一个非常重要的概念，理解盒模型对于掌握 CSS 布局和样式设计至关重要。本章将详细介绍盒模型的基本概念和各种属性的使用方法。盒模型的基本概念盒模型是 CSS 中用来描述元素如何占据空间以及如何与其他元素进行交互的模型。每个 HTML 元素都被视为一个矩形盒子，这个盒子由内容...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":923,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/CSS/gpi033cgll2yqupy","path":"docs/doc/💻 编程语言/CSS/gpi033cgll2yqupy","filePath":"docs/doc/💻 编程语言/CSS/gpi033cgll2yqupy.md","toc":[{"value":"盒模型的基本概念","url":"#盒模型的基本概念","depth":2},{"value":"内容区域","url":"#内容区域","depth":3},{"value":"内边距（padding）","url":"#内边距padding","depth":3},{"value":"边框（border）","url":"#边框border","depth":3},{"value":"外边距（margin）","url":"#外边距margin","depth":3},{"value":"盒模型属性","url":"#盒模型属性","depth":2},{"value":"box-sizing 属性","url":"#box-sizing-属性","depth":3},{"value":"盒模型的尺寸计算","url":"#盒模型的尺寸计算","depth":3},{"value":"内边距与外边距的折叠","url":"#内边距与外边距的折叠","depth":2},{"value":"内边距的应用","url":"#内边距的应用","depth":3},{"value":"外边距的折叠与影响","url":"#外边距的折叠与影响","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第四章：盒模型","datePublished":"2024-06-06T12:46:35.000Z","dateModified":"2024-06-06T12:46:59.000Z","description":"盒模型是 CSS 中一个非常重要的概念，理解盒模型对于掌握 CSS 布局和样式设计至关重要。本章将详细介绍盒模型的基本概念和各种属性的使用方法。盒模型的基本概念盒模型是 CSS 中用来描述元素如何占据空间以及如何与其他元素进行交互的模型。每个 HTML 元素都被视为一个矩形盒子，这个盒子由内容...","url":"https://offernow.cn/docs/doc/💻 编程语言/CSS/gpi033cgll2yqupy"}},{"title":"第三章：文本与字体","date":"2024-06-06T12:46:14.000Z","urlname":"ldegf1cokbeqxaz6","is_nav":false,"updated":"2024-06-06T12:46:34.000Z","not_show":false,"description":"在网页设计中，文本的展示和排版是至关重要的。本章将详细介绍 CSS 中如何处理文本样式、文本对齐与装饰、行高与字间距等内容。通过学习本章，你将能够灵活运用 CSS 对文本进行美化和优化，从而提升网页的视觉效果和用户体验。1. 文本样式字体系列（font-family）CSS 提供了 font-...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":773,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/CSS/ldegf1cokbeqxaz6","path":"docs/doc/💻 编程语言/CSS/ldegf1cokbeqxaz6","filePath":"docs/doc/💻 编程语言/CSS/ldegf1cokbeqxaz6.md","toc":[{"value":"1. 文本样式","url":"#1-文本样式","depth":2},{"value":"字体系列（font-family）","url":"#字体系列font-family","depth":3},{"value":"字体大小（font-size）","url":"#字体大小font-size","depth":3},{"value":"字体样式（font-style）","url":"#字体样式font-style","depth":3},{"value":"字体粗细（font-weight）","url":"#字体粗细font-weight","depth":3},{"value":"2. 文本对齐与装饰","url":"#2-文本对齐与装饰","depth":2},{"value":"文本对齐（text-align）","url":"#文本对齐text-align","depth":3},{"value":"文本装饰（text-decoration）","url":"#文本装饰text-decoration","depth":3},{"value":"文本缩进（text-indent）","url":"#文本缩进text-indent","depth":3},{"value":"3. 行高与字间距","url":"#3-行高与字间距","depth":2},{"value":"行高（line-height）","url":"#行高line-height","depth":3},{"value":"字母间距（letter-spacing）","url":"#字母间距letter-spacing","depth":3},{"value":"单词间距（word-spacing）","url":"#单词间距word-spacing","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第三章：文本与字体","datePublished":"2024-06-06T12:46:14.000Z","dateModified":"2024-06-06T12:46:34.000Z","description":"在网页设计中，文本的展示和排版是至关重要的。本章将详细介绍 CSS 中如何处理文本样式、文本对齐与装饰、行高与字间距等内容。通过学习本章，你将能够灵活运用 CSS 对文本进行美化和优化，从而提升网页的视觉效果和用户体验。1. 文本样式字体系列（font-family）CSS 提供了 font-...","url":"https://offernow.cn/docs/doc/💻 编程语言/CSS/ldegf1cokbeqxaz6"}},{"title":"第二章：选择器与规则","date":"2024-06-06T12:45:29.000Z","urlname":"eliv1b998cgcev7b","is_nav":false,"updated":"2024-06-06T12:46:11.000Z","not_show":false,"description":"基础选择器在这一章中，我们将深入探讨 CSS 中的基础选择器以及它们的使用方法。选择器是 CSS 的基础，通过选择器，我们可以灵活地选择和定义我们希望样式化的 HTML 元素。元素选择器元素选择器用于选择 HTML 文档中的所有某一类型的元素。例如，下面的 CSS 规则将应用于所有的 <p> ...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1445,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/CSS/eliv1b998cgcev7b","path":"docs/doc/💻 编程语言/CSS/eliv1b998cgcev7b","filePath":"docs/doc/💻 编程语言/CSS/eliv1b998cgcev7b.md","toc":[{"value":"基础选择器","url":"#基础选择器","depth":2},{"value":"元素选择器","url":"#元素选择器","depth":3},{"value":"类选择器","url":"#类选择器","depth":3},{"value":"ID 选择器","url":"#id-选择器","depth":3},{"value":"组合选择器","url":"#组合选择器","depth":2},{"value":"后代选择器","url":"#后代选择器","depth":3},{"value":"子选择器","url":"#子选择器","depth":3},{"value":"相邻兄弟选择器","url":"#相邻兄弟选择器","depth":3},{"value":"通用兄弟选择器","url":"#通用兄弟选择器","depth":3},{"value":"伪类与伪元素","url":"#伪类与伪元素","depth":2},{"value":"常见伪类","url":"#常见伪类","depth":3},{"value":":hover","url":"#hover","depth":4},{"value":":active","url":"#active","depth":4},{"value":":focus","url":"#focus","depth":4},{"value":"常见伪元素","url":"#常见伪元素","depth":3},{"value":"::before","url":"#before","depth":4},{"value":"::after","url":"#after","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第二章：选择器与规则","datePublished":"2024-06-06T12:45:29.000Z","dateModified":"2024-06-06T12:46:11.000Z","description":"基础选择器在这一章中，我们将深入探讨 CSS 中的基础选择器以及它们的使用方法。选择器是 CSS 的基础，通过选择器，我们可以灵活地选择和定义我们希望样式化的 HTML 元素。元素选择器元素选择器用于选择 HTML 文档中的所有某一类型的元素。例如，下面的 CSS 规则将应用于所有的 <p> ...","url":"https://offernow.cn/docs/doc/💻 编程语言/CSS/eliv1b998cgcev7b"}},{"title":"第一章：初识 CSS","date":"2024-06-06T12:45:15.000Z","urlname":"puuvedqp2wzlc9hi","is_nav":false,"updated":"2024-06-06T12:45:28.000Z","not_show":false,"description":"1.1 CSS 简介1.1.1 CSS 的历史与发展CSS（Cascading Style Sheets，层叠样式表）是一种用于描述 HTML 或 XML（包括各种 XML 和 HTML 派生文档如 SVG 和 XHTML）文档外观和格式的样式表语言。CSS 的诞生可以追溯到 1996 年，当...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1136,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/CSS/puuvedqp2wzlc9hi","path":"docs/doc/💻 编程语言/CSS/puuvedqp2wzlc9hi","filePath":"docs/doc/💻 编程语言/CSS/puuvedqp2wzlc9hi.md","toc":[{"value":"1.1 CSS 简介","url":"#11-css-简介","depth":2},{"value":"1.1.1 CSS 的历史与发展","url":"#111-css-的历史与发展","depth":3},{"value":"1.1.2 CSS 的应用领域","url":"#112-css-的应用领域","depth":3},{"value":"1.1.3 为什么选择 CSS","url":"#113-为什么选择-css","depth":3},{"value":"1.2 CSS 基础","url":"#12-css-基础","depth":2},{"value":"1.2.1 CSS 的基本概念","url":"#121-css-的基本概念","depth":3},{"value":"1.2.2 CSS 的层叠与继承","url":"#122-css-的层叠与继承","depth":3},{"value":"1.2.3 CSS 的语法与结构","url":"#123-css-的语法与结构","depth":3},{"value":"1.3 CSS 的引入方式","url":"#13-css-的引入方式","depth":2},{"value":"1.3.1 内联样式","url":"#131-内联样式","depth":3},{"value":"1.3.2 内部样式表","url":"#132-内部样式表","depth":3},{"value":"1.3.3 外部样式表","url":"#133-外部样式表","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第一章：初识 CSS","datePublished":"2024-06-06T12:45:15.000Z","dateModified":"2024-06-06T12:45:28.000Z","description":"1.1 CSS 简介1.1.1 CSS 的历史与发展CSS（Cascading Style Sheets，层叠样式表）是一种用于描述 HTML 或 XML（包括各种 XML 和 HTML 派生文档如 SVG 和 XHTML）文档外观和格式的样式表语言。CSS 的诞生可以追溯到 1996 年，当...","url":"https://offernow.cn/docs/doc/💻 编程语言/CSS/puuvedqp2wzlc9hi"}},{"title":"第十五章：Web Components 与 Shadow DOM","date":"2024-06-06T12:35:36.000Z","urlname":"yfa0upx1bro31vok","is_nav":false,"updated":"2024-06-06T12:36:01.000Z","not_show":false,"description":"随着 Web 技术的不断发展，构建可重用的 UI 组件变得越来越重要。Web Components 和 Shadow DOM 作为 HTML5 的新特性，为开发者提供了创建封装良好、可重用的组件的能力。 本章将详细介绍 Web Components 和 Shadow DOM 的概念及其实际应用...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":922,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/HTML/yfa0upx1bro31vok","path":"docs/doc/💻 编程语言/HTML/yfa0upx1bro31vok","filePath":"docs/doc/💻 编程语言/HTML/yfa0upx1bro31vok.md","toc":[{"value":"什么是 Web Components？","url":"#什么是-web-components","depth":2},{"value":"Custom Elements","url":"#custom-elements","depth":3},{"value":"Shadow DOM","url":"#shadow-dom","depth":3},{"value":"HTML Templates","url":"#html-templates","depth":3},{"value":"使用 Shadow DOM 封装组件","url":"#使用-shadow-dom-封装组件","depth":2},{"value":"总结","url":"#总结-5","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十五章：Web Components 与 Shadow DOM","datePublished":"2024-06-06T12:35:36.000Z","dateModified":"2024-06-06T12:36:01.000Z","description":"随着 Web 技术的不断发展，构建可重用的 UI 组件变得越来越重要。Web Components 和 Shadow DOM 作为 HTML5 的新特性，为开发者提供了创建封装良好、可重用的组件的能力。 本章将详细介绍 Web Components 和 Shadow DOM 的概念及其实际应用...","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/yfa0upx1bro31vok"}},{"title":"第十四章：跨浏览器与设备兼容","date":"2024-06-06T12:35:13.000Z","urlname":"afdbqhveh0wdig9d","is_nav":false,"updated":"2024-06-06T12:35:31.000Z","not_show":false,"description":"在今天的网络开发中，确保你的网站在各种浏览器和设备上都能够良好运行至关重要。无论你的用户使用的是桌面、平板还是手机，他们都期望有一致而顺畅的体验。本章将带你深入了解如何实现跨浏览器与设备兼容，并介绍响应式设计和媒体查询的概念与实践。响应式设计什么是响应式设计？响应式设计是一种 Web 设计方法...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1806,"minutes":6,"text":"6 分钟"},"slug":"doc/💻 编程语言/HTML/afdbqhveh0wdig9d","path":"docs/doc/💻 编程语言/HTML/afdbqhveh0wdig9d","filePath":"docs/doc/💻 编程语言/HTML/afdbqhveh0wdig9d.md","toc":[{"value":"响应式设计","url":"#响应式设计","depth":2},{"value":"什么是响应式设计？","url":"#什么是响应式设计","depth":3},{"value":"灵活的网格布局","url":"#灵活的网格布局","depth":3},{"value":"媒体查询","url":"#媒体查询","depth":2},{"value":"什么是媒体查询？","url":"#什么是媒体查询","depth":3},{"value":"示例","url":"#示例","depth":4},{"value":"如何使用媒体查询？","url":"#如何使用媒体查询","depth":3},{"value":"实践：创建一个响应式网页","url":"#实践创建一个响应式网页","depth":2},{"value":"跨浏览器兼容","url":"#跨浏览器兼容","depth":2},{"value":"跨浏览器兼容的重要性","url":"#跨浏览器兼容的重要性","depth":3},{"value":"常见的跨浏览器兼容问题","url":"#常见的跨浏览器兼容问题","depth":3},{"value":"使用工具进行兼容性测试","url":"#使用工具进行兼容性测试","depth":3},{"value":"示例：使用 normalize.css","url":"#示例使用-normalizecss","depth":3},{"value":"设备兼容","url":"#设备兼容","depth":2},{"value":"移动设备优化","url":"#移动设备优化","depth":3},{"value":"使用视口标签优化移动体验","url":"#使用视口标签优化移动体验","depth":3},{"value":"结论","url":"#结论","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十四章：跨浏览器与设备兼容","datePublished":"2024-06-06T12:35:13.000Z","dateModified":"2024-06-06T12:35:31.000Z","description":"在今天的网络开发中，确保你的网站在各种浏览器和设备上都能够良好运行至关重要。无论你的用户使用的是桌面、平板还是手机，他们都期望有一致而顺畅的体验。本章将带你深入了解如何实现跨浏览器与设备兼容，并介绍响应式设计和媒体查询的概念与实践。响应式设计什么是响应式设计？响应式设计是一种 Web 设计方法...","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/afdbqhveh0wdig9d"}},{"title":"第十三章：SEO 与元数据","date":"2024-06-06T12:34:49.000Z","urlname":"qdbx2gsk1ueungnm","is_nav":false,"updated":"2024-06-06T12:35:05.000Z","not_show":false,"description":"搜索引擎优化（SEO）和元数据是任何网站成功的关键组成部分。搜索引擎优化可以帮助你的网站在搜索引擎结果中获得更高的排名，而元数据则提供了有关网页的信息，帮助搜索引擎更好地理解和索引你的内容。在本章中，我们将深入探讨常用的元数据标签以及 SEO 的最佳实践。什么是 SEO？搜索引擎优化（SEO）...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1212,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/HTML/qdbx2gsk1ueungnm","path":"docs/doc/💻 编程语言/HTML/qdbx2gsk1ueungnm","filePath":"docs/doc/💻 编程语言/HTML/qdbx2gsk1ueungnm.md","toc":[{"value":"什么是 SEO？","url":"#什么是-seo","depth":2},{"value":"什么是元数据？","url":"#什么是元数据","depth":2},{"value":"常用的元数据标签","url":"#常用的元数据标签","depth":2},{"value":"页面标题","url":"#页面标题","depth":3},{"value":"页面描述","url":"#页面描述","depth":3},{"value":"关键词","url":"#关键词","depth":3},{"value":"作者信息","url":"#作者信息","depth":3},{"value":"字符集","url":"#字符集","depth":3},{"value":"视窗设置","url":"#视窗设置","depth":3},{"value":"SEO 最佳实践","url":"#seo-最佳实践","depth":2},{"value":"1. 使用语义化 HTML","url":"#1-使用语义化-html","depth":3},{"value":"2. 优化页面加载速度","url":"#2-优化页面加载速度","depth":3},{"value":"3. 创建高质量内容","url":"#3-创建高质量内容","depth":3},{"value":"4. 使用内部和外部链接","url":"#4-使用内部和外部链接","depth":3},{"value":"5. 优化图片和多媒体","url":"#5-优化图片和多媒体","depth":3},{"value":"6. 确保移动设备友好","url":"#6-确保移动设备友好","depth":3},{"value":"7. 使用社交媒体元数据","url":"#7-使用社交媒体元数据","depth":3},{"value":"小结","url":"#小结-1","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十三章：SEO 与元数据","datePublished":"2024-06-06T12:34:49.000Z","dateModified":"2024-06-06T12:35:05.000Z","description":"搜索引擎优化（SEO）和元数据是任何网站成功的关键组成部分。搜索引擎优化可以帮助你的网站在搜索引擎结果中获得更高的排名，而元数据则提供了有关网页的信息，帮助搜索引擎更好地理解和索引你的内容。在本章中，我们将深入探讨常用的元数据标签以及 SEO 的最佳实践。什么是 SEO？搜索引擎优化（SEO）...","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/qdbx2gsk1ueungnm"}},{"title":"第十二章：最佳实践","date":"2024-06-06T12:34:22.000Z","urlname":"xfyg852rer6qo7sk","is_nav":false,"updated":"2024-06-06T12:34:45.000Z","not_show":false,"description":"在 Web 开发中，最佳实践不仅有助于提升代码质量，还能提高网站的可维护性和性能。本章将探讨 HTML 编码规范、可访问性（Accessibility）、以及性能优化等方面的最佳实践。HTML 编码规范一致的代码风格采用一致的代码风格有助于提高代码的可读性和可维护性。以下是一些常见的编码规范：...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":777,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/HTML/xfyg852rer6qo7sk","path":"docs/doc/💻 编程语言/HTML/xfyg852rer6qo7sk","filePath":"docs/doc/💻 编程语言/HTML/xfyg852rer6qo7sk.md","toc":[{"value":"HTML 编码规范","url":"#html-编码规范","depth":2},{"value":"一致的代码风格","url":"#一致的代码风格","depth":3},{"value":"语义化标签","url":"#语义化标签","depth":3},{"value":"可访问性（Accessibility）","url":"#可访问性accessibility","depth":2},{"value":"为所有图片添加替代文本","url":"#为所有图片添加替代文本","depth":3},{"value":"使用 ARIA 属性","url":"#使用-aria-属性","depth":3},{"value":"标签和表单控件的关联","url":"#标签和表单控件的关联","depth":3},{"value":"性能优化","url":"#性能优化","depth":2},{"value":"减少 HTTP 请求","url":"#减少-http-请求","depth":3},{"value":"使用压缩和缓存","url":"#使用压缩和缓存","depth":3},{"value":"优化图像","url":"#优化图像","depth":3},{"value":"结论","url":"#结论-4","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十二章：最佳实践","datePublished":"2024-06-06T12:34:22.000Z","dateModified":"2024-06-06T12:34:45.000Z","description":"在 Web 开发中，最佳实践不仅有助于提升代码质量，还能提高网站的可维护性和性能。本章将探讨 HTML 编码规范、可访问性（Accessibility）、以及性能优化等方面的最佳实践。HTML 编码规范一致的代码风格采用一致的代码风格有助于提高代码的可读性和可维护性。以下是一些常见的编码规范：...","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/xfyg852rer6qo7sk"}},{"title":"第十一章：项目实战：创建个人博客","date":"2024-06-06T12:34:00.000Z","urlname":"ptpvy38ims4qwnm1","is_nav":false,"updated":"2024-06-06T12:34:12.000Z","not_show":false,"description":"在本章节中，我们将结合前面所学的 HTML 知识，通过一步一步的实战指导，教你如何创建一个简单但功能完整的个人博客网页。这不仅能巩固你的 HTML 基础，还能让你体验到完成一个项目的成就感。章节内容项目介绍与规划页面结构与布局内容填充与样式美化部署与发布1. 项目介绍与规划项目目标我们的目标是...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1683,"minutes":6,"text":"6 分钟"},"slug":"doc/💻 编程语言/HTML/ptpvy38ims4qwnm1","path":"docs/doc/💻 编程语言/HTML/ptpvy38ims4qwnm1","filePath":"docs/doc/💻 编程语言/HTML/ptpvy38ims4qwnm1.md","toc":[{"value":"章节内容","url":"#章节内容","depth":2},{"value":"1. 项目介绍与规划","url":"#1-项目介绍与规划-1","depth":2},{"value":"项目目标","url":"#项目目标","depth":3},{"value":"功能需求","url":"#功能需求","depth":3},{"value":"技术需求","url":"#技术需求","depth":3},{"value":"2. 页面结构与布局","url":"#2-页面结构与布局-1","depth":2},{"value":"主页布局","url":"#主页布局","depth":3},{"value":"关于我页面布局","url":"#关于我页面布局","depth":3},{"value":"博客文章列表页面布局","url":"#博客文章列表页面布局","depth":3},{"value":"单篇文章详情页面布局","url":"#单篇文章详情页面布局","depth":3},{"value":"3. 内容填充与样式美化","url":"#3-内容填充与样式美化","depth":2},{"value":"添加 CSS 样式","url":"#添加-css-样式","depth":3},{"value":"styles.css","url":"#stylescss","depth":4},{"value":"更新 HTML 文件","url":"#更新-html-文件","depth":3},{"value":"4. 部署与发布","url":"#4-部署与发布","depth":2},{"value":"将项目托管到 GitHub","url":"#将项目托管到-github","depth":3},{"value":"使用 GitHub Pages 部署博客","url":"#使用-github-pages-部署博客","depth":3},{"value":"使用 Netlify 或 Vercel 进行部署","url":"#使用-netlify-或-vercel-进行部署","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十一章：项目实战：创建个人博客","datePublished":"2024-06-06T12:34:00.000Z","dateModified":"2024-06-06T12:34:12.000Z","description":"在本章节中，我们将结合前面所学的 HTML 知识，通过一步一步的实战指导，教你如何创建一个简单但功能完整的个人博客网页。这不仅能巩固你的 HTML 基础，还能让你体验到完成一个项目的成就感。章节内容项目介绍与规划页面结构与布局内容填充与样式美化部署与发布1. 项目介绍与规划项目目标我们的目标是...","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/ptpvy38ims4qwnm1"}},{"title":"第十章：引入与嵌入外部资源","date":"2024-06-06T12:33:36.000Z","urlname":"quvzonpqlvtknn62","is_nav":false,"updated":"2024-06-06T12:33:53.000Z","not_show":false,"description":"在前面的章节中，我们已经学习了很多关于 HTML 的基础和进阶知识。本章将深入探讨如何在 HTML 页面中嵌入和引入外部资源。我们将学习如何使用 <iframe> 内嵌内容，以及如何使用 <link>、<script> 和 <style> 标签引入外部资源。10.1 内嵌内容 (<iframe...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":857,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/HTML/quvzonpqlvtknn62","path":"docs/doc/💻 编程语言/HTML/quvzonpqlvtknn62","filePath":"docs/doc/💻 编程语言/HTML/quvzonpqlvtknn62.md","toc":[{"value":"10.1 内嵌内容 (<iframe>)","url":"#101-内嵌内容-iframe","depth":2},{"value":"什么是 <iframe>？","url":"#什么是-iframe","depth":3},{"value":"<iframe> 的基本语法","url":"#iframe-的基本语法","depth":3},{"value":"属性详解","url":"#属性详解","depth":3},{"value":"示例","url":"#示例-1","depth":3},{"value":"安全性与优化","url":"#安全性与优化","depth":3},{"value":"10.2 引入外部资源","url":"#102-引入外部资源","depth":2},{"value":"引入 CSS 样式 (<link>)","url":"#引入-css-样式-link","depth":3},{"value":"基本语法","url":"#基本语法-1","depth":4},{"value":"属性详解","url":"#属性详解-1","depth":4},{"value":"示例","url":"#示例-2","depth":4},{"value":"引入 JavaScript 脚本 (<script>)","url":"#引入-javascript-脚本-script","depth":3},{"value":"基本语法","url":"#基本语法-2","depth":4},{"value":"属性详解","url":"#属性详解-2","depth":4},{"value":"示例","url":"#示例-3","depth":4},{"value":"内嵌样式 (<style>)","url":"#内嵌样式-style","depth":3},{"value":"基本语法","url":"#基本语法-3","depth":4},{"value":"示例","url":"#示例-4","depth":4},{"value":"内嵌脚本 (<script>)","url":"#内嵌脚本-script","depth":3},{"value":"基本语法","url":"#基本语法-4","depth":4},{"value":"示例","url":"#示例-5","depth":4},{"value":"总结","url":"#总结-4","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十章：引入与嵌入外部资源","datePublished":"2024-06-06T12:33:36.000Z","dateModified":"2024-06-06T12:33:53.000Z","description":"在前面的章节中，我们已经学习了很多关于 HTML 的基础和进阶知识。本章将深入探讨如何在 HTML 页面中嵌入和引入外部资源。我们将学习如何使用 <iframe> 内嵌内容，以及如何使用 <link>、<script> 和 <style> 标签引入外部资源。10.1 内嵌内容 (<iframe...","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/quvzonpqlvtknn62"}},{"title":"第九章：HTML5 新特性","date":"2024-06-06T12:33:18.000Z","urlname":"tlcwlhbihyz55da6","is_nav":false,"updated":"2024-06-06T12:33:29.000Z","not_show":false,"description":"HTML5 是 HTML 的最新版本，引入了许多新特性和改进，旨在提高开发效率和用户体验。本章节将介绍 HTML5 新特性，包括新增的语义化标签、新的输入类型和多媒体元素。1. HTML5 新增的语义化标签HTML5 增加了许多语义化标签，使得 HTML 代码更具可读性和结构性。语义化标签能够...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1049,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/HTML/tlcwlhbihyz55da6","path":"docs/doc/💻 编程语言/HTML/tlcwlhbihyz55da6","filePath":"docs/doc/💻 编程语言/HTML/tlcwlhbihyz55da6.md","toc":[{"value":"1. HTML5 新增的语义化标签","url":"#1-html5-新增的语义化标签","depth":2},{"value":"1.1 <header>","url":"#11-header","depth":3},{"value":"1.2 <footer>","url":"#12-footer","depth":3},{"value":"1.3 <article>","url":"#13-article","depth":3},{"value":"1.4 <section>","url":"#14-section","depth":3},{"value":"1.5 <aside>","url":"#15-aside","depth":3},{"value":"2. HTML5 新增的输入类型","url":"#2-html5-新增的输入类型","depth":2},{"value":"2.1 email","url":"#21-email","depth":3},{"value":"2.2 url","url":"#22-url","depth":3},{"value":"2.3 date","url":"#23-date","depth":3},{"value":"2.4 number","url":"#24-number","depth":3},{"value":"2.5 range","url":"#25-range","depth":3},{"value":"3. HTML5 的多媒体元素","url":"#3-html5-的多媒体元素","depth":2},{"value":"3.1 <audio>","url":"#31-audio","depth":3},{"value":"3.2 <video>","url":"#32-video","depth":3},{"value":"结论","url":"#结论-3","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第九章：HTML5 新特性","datePublished":"2024-06-06T12:33:18.000Z","dateModified":"2024-06-06T12:33:29.000Z","description":"HTML5 是 HTML 的最新版本，引入了许多新特性和改进，旨在提高开发效率和用户体验。本章节将介绍 HTML5 新特性，包括新增的语义化标签、新的输入类型和多媒体元素。1. HTML5 新增的语义化标签HTML5 增加了许多语义化标签，使得 HTML 代码更具可读性和结构性。语义化标签能够...","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/tlcwlhbihyz55da6"}},{"title":"第八章: 语义化 HTML","date":"2024-06-06T12:32:37.000Z","urlname":"fuv2pl2mc3qgfzlh","is_nav":false,"updated":"2024-06-06T12:33:14.000Z","not_show":false,"description":"HTML 语义化是现代网页开发中一个非常重要的概念。通过使用适当的语义化标签，我们不仅可以让网页更加具有可读性和可维护性，还能提升网页的可访问性和搜索引擎优化（SEO）。本章将详细介绍语义化 HTML 的概念、常用的语义化标签及其应用。什么是语义化 HTML？语义化 HTML 是指通过使用具有...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1215,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/HTML/fuv2pl2mc3qgfzlh","path":"docs/doc/💻 编程语言/HTML/fuv2pl2mc3qgfzlh","filePath":"docs/doc/💻 编程语言/HTML/fuv2pl2mc3qgfzlh.md","toc":[{"value":"什么是语义化 HTML？","url":"#什么是语义化-html","depth":2},{"value":"语义化标签的好处","url":"#语义化标签的好处","depth":3},{"value":"常用的语义化标签","url":"#常用的语义化标签","depth":2},{"value":"1. <header>","url":"#1-header","depth":3},{"value":"2. <footer>","url":"#2-footer","depth":3},{"value":"3. <article>","url":"#3-article","depth":3},{"value":"4. <section>","url":"#4-section","depth":3},{"value":"5. <aside>","url":"#5-aside","depth":3},{"value":"6. <nav>","url":"#6-nav","depth":3},{"value":"7. <main>","url":"#7-main","depth":3},{"value":"语义化 HTML 的应用","url":"#语义化-html-的应用","depth":2},{"value":"结论","url":"#结论-1","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第八章: 语义化 HTML","datePublished":"2024-06-06T12:32:37.000Z","dateModified":"2024-06-06T12:33:14.000Z","description":"HTML 语义化是现代网页开发中一个非常重要的概念。通过使用适当的语义化标签，我们不仅可以让网页更加具有可读性和可维护性，还能提升网页的可访问性和搜索引擎优化（SEO）。本章将详细介绍语义化 HTML 的概念、常用的语义化标签及其应用。什么是语义化 HTML？语义化 HTML 是指通过使用具有...","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/fuv2pl2mc3qgfzlh"}},{"title":"第七章: 表单与输入","date":"2024-06-06T12:32:18.000Z","urlname":"cxvr6luk8bw66d2s","is_nav":false,"updated":"2024-06-06T12:32:36.000Z","not_show":false,"description":"表单是用户与网站进行交互的核心工具之一。它们不仅用于数据提交，还可以进行数据验证和用户输入的管理。在这一章中，我们将详细介绍 HTML 表单元素及其使用方法，并提供丰富的代码示例帮助理解。表单元素基本结构一个基本的 HTML 表单使用 <form> 标签包含所有的表单元素。表单的基本结构如下：...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":870,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/HTML/cxvr6luk8bw66d2s","path":"docs/doc/💻 编程语言/HTML/cxvr6luk8bw66d2s","filePath":"docs/doc/💻 编程语言/HTML/cxvr6luk8bw66d2s.md","toc":[{"value":"","url":"#-8","depth":1},{"value":"表单元素","url":"#表单元素","depth":2},{"value":"基本结构","url":"#基本结构","depth":3},{"value":"常见的表单元素","url":"#常见的表单元素","depth":3},{"value":"输入框（<input>）","url":"#输入框input","depth":4},{"value":"文本区域（<textarea>）","url":"#文本区域textarea","depth":4},{"value":"按钮（<button>）","url":"#按钮button","depth":4},{"value":"表单验证与提交","url":"#表单验证与提交","depth":2},{"value":"HTML5 表单验证","url":"#html5-表单验证","depth":3},{"value":"表单提交","url":"#表单提交","depth":3},{"value":"使用 JavaScript 提交表单","url":"#使用-javascript-提交表单","depth":4},{"value":"小结","url":"#小结","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第七章: 表单与输入","datePublished":"2024-06-06T12:32:18.000Z","dateModified":"2024-06-06T12:32:36.000Z","description":"表单是用户与网站进行交互的核心工具之一。它们不仅用于数据提交，还可以进行数据验证和用户输入的管理。在这一章中，我们将详细介绍 HTML 表单元素及其使用方法，并提供丰富的代码示例帮助理解。表单元素基本结构一个基本的 HTML 表单使用 <form> 标签包含所有的表单元素。表单的基本结构如下：...","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/cxvr6luk8bw66d2s"}},{"title":"第六章：HTML 表格","date":"2024-06-06T12:32:01.000Z","urlname":"qqpwoxgs149zde15","is_nav":false,"updated":"2024-06-06T12:32:15.000Z","not_show":false,"description":"在本章中，我们将深入探讨 HTML 表格元素的使用。表格在展示数据时非常有用，例如展示一组数据、财务报表或日程安排等。通过学习本章内容，你将掌握如何创建和美化表格。1. 表格元素简介表格在 HTML 中通过 <table> 元素定义。一个基本的 HTML 表格由行（<tr>）和单元格（<td>...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":713,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/HTML/qqpwoxgs149zde15","path":"docs/doc/💻 编程语言/HTML/qqpwoxgs149zde15","filePath":"docs/doc/💻 编程语言/HTML/qqpwoxgs149zde15.md","toc":[{"value":"1. 表格元素简介","url":"#1-表格元素简介","depth":2},{"value":"表格结构示例","url":"#表格结构示例","depth":3},{"value":"表格属性","url":"#表格属性","depth":3},{"value":"2. 创建基本表格","url":"#2-创建基本表格","depth":2},{"value":"添加边框","url":"#添加边框","depth":3},{"value":"添加内边距和间距","url":"#添加内边距和间距","depth":3},{"value":"设置表格宽度","url":"#设置表格宽度","depth":3},{"value":"3. 表格合并","url":"#3-表格合并","depth":2},{"value":"合并行（rowspan）","url":"#合并行rowspan","depth":3},{"value":"合并列（colspan）","url":"#合并列colspan","depth":3},{"value":"4. 表格样式","url":"#4-表格样式","depth":2},{"value":"表格样式示例","url":"#表格样式示例","depth":3},{"value":"5. 小结","url":"#5-小结","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第六章：HTML 表格","datePublished":"2024-06-06T12:32:01.000Z","dateModified":"2024-06-06T12:32:15.000Z","description":"在本章中，我们将深入探讨 HTML 表格元素的使用。表格在展示数据时非常有用，例如展示一组数据、财务报表或日程安排等。通过学习本章内容，你将掌握如何创建和美化表格。1. 表格元素简介表格在 HTML 中通过 <table> 元素定义。一个基本的 HTML 表格由行（<tr>）和单元格（<td>...","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/qqpwoxgs149zde15"}},{"title":"第五章：图像与多媒体","date":"2024-06-06T12:31:28.000Z","urlname":"pkd0n1bl0otacdk8","is_nav":false,"updated":"2024-06-06T12:31:51.000Z","not_show":false,"description":"在现代的 Web 开发中，图像和多媒体元素是不可或缺的一部分。它们不仅能够丰富页面的内容，还能够提高用户体验。5.1 图像 (<img>)5.1.1 基本用法图像标签 <img> 是 HTML 中最常用的标签之一。它没有闭合标签，所有的属性都在开始标签内。<img src=\"image.jpg...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":822,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/HTML/pkd0n1bl0otacdk8","path":"docs/doc/💻 编程语言/HTML/pkd0n1bl0otacdk8","filePath":"docs/doc/💻 编程语言/HTML/pkd0n1bl0otacdk8.md","toc":[{"value":"5.1 图像 (<img>)","url":"#51-图像-img","depth":2},{"value":"5.1.1 基本用法","url":"#511-基本用法","depth":3},{"value":"5.1.2 属性与用法","url":"#512-属性与用法","depth":3},{"value":"5.1.3 响应式图像","url":"#513-响应式图像","depth":3},{"value":"5.2 音频 (<audio>)","url":"#52-音频-audio","depth":2},{"value":"5.2.1 基本用法","url":"#521-基本用法","depth":3},{"value":"5.2.2 多种格式","url":"#522-多种格式","depth":3},{"value":"5.3 视频 (<video>)","url":"#53-视频-video","depth":2},{"value":"5.3.1 基本用法","url":"#531-基本用法","depth":3},{"value":"5.3.2 多种格式","url":"#532-多种格式","depth":3},{"value":"5.3.3 自动播放与循环播放","url":"#533-自动播放与循环播放","depth":3},{"value":"总结","url":"#总结-3","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第五章：图像与多媒体","datePublished":"2024-06-06T12:31:28.000Z","dateModified":"2024-06-06T12:31:51.000Z","description":"在现代的 Web 开发中，图像和多媒体元素是不可或缺的一部分。它们不仅能够丰富页面的内容，还能够提高用户体验。5.1 图像 (<img>)5.1.1 基本用法图像标签 <img> 是 HTML 中最常用的标签之一。它没有闭合标签，所有的属性都在开始标签内。<img src=\"image.jpg...","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/pkd0n1bl0otacdk8"}},{"title":"第四章：HTML列表与链接","date":"2024-06-06T12:30:54.000Z","urlname":"gqskznmrisypt5cc","is_nav":false,"updated":"2024-06-06T12:31:15.000Z","not_show":false,"description":"在 Web 开发中，列表和链接是非常常见且重要的元素。列表可以帮助我们有条理地展示信息，而链接则是网页之间和网页内部导航的基础。本章将深入探讨如何使用 HTML 创建和管理列表与链接。无序列表 (<ul>)无序列表使用 <ul> 标签定义，列表项使用 <li> 标签包裹。无序列表的特点是每个列...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1034,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/HTML/gqskznmrisypt5cc","path":"docs/doc/💻 编程语言/HTML/gqskznmrisypt5cc","filePath":"docs/doc/💻 编程语言/HTML/gqskznmrisypt5cc.md","toc":[{"value":"无序列表 (<ul>)","url":"#无序列表-ul","depth":2},{"value":"示例代码","url":"#示例代码-5","depth":3},{"value":"解释","url":"#解释-4","depth":3},{"value":"渲染效果","url":"#渲染效果","depth":3},{"value":"有序列表 (<ol>)","url":"#有序列表-ol","depth":2},{"value":"示例代码","url":"#示例代码-6","depth":3},{"value":"解释","url":"#解释-5","depth":3},{"value":"渲染效果","url":"#渲染效果-1","depth":3},{"value":"列表项 (<li>)","url":"#列表项-li","depth":2},{"value":"嵌套列表","url":"#嵌套列表","depth":3},{"value":"示例代码","url":"#示例代码-7","depth":3},{"value":"渲染效果","url":"#渲染效果-2","depth":3},{"value":"超链接 (<a>)","url":"#超链接-a","depth":2},{"value":"基本语法","url":"#基本语法","depth":3},{"value":"示例代码","url":"#示例代码-8","depth":3},{"value":"解释","url":"#解释-6","depth":3},{"value":"渲染效果","url":"#渲染效果-3","depth":3},{"value":"内部链接","url":"#内部链接","depth":3},{"value":"示例代码","url":"#示例代码-9","depth":3},{"value":"解释","url":"#解释-7","depth":3},{"value":"图文并茂示例","url":"#图文并茂示例","depth":2},{"value":"示例代码","url":"#示例代码-10","depth":3},{"value":"渲染效果","url":"#渲染效果-4","depth":3},{"value":"结论","url":"#结论-2","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第四章：HTML列表与链接","datePublished":"2024-06-06T12:30:54.000Z","dateModified":"2024-06-06T12:31:15.000Z","description":"在 Web 开发中，列表和链接是非常常见且重要的元素。列表可以帮助我们有条理地展示信息，而链接则是网页之间和网页内部导航的基础。本章将深入探讨如何使用 HTML 创建和管理列表与链接。无序列表 (<ul>)无序列表使用 <ul> 标签定义，列表项使用 <li> 标签包裹。无序列表的特点是每个列...","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/gqskznmrisypt5cc"}},{"title":"第三章:HTML 入门","date":"2024-06-06T12:30:28.000Z","urlname":"zkgqems7mofxiukr","is_nav":false,"updated":"2024-06-06T12:30:49.000Z","not_show":false,"description":"3. 文本与段落在 HTML 中，文本和段落是构建网页内容的基础元素。理解如何使用这些元素能够帮助你创建结构化和易读的网页内容。本章节将详细介绍段落、标题、换行和水平线等基础知识。3.1 段落 (<p>)段落是网页中最基本的文本单元。HTML 使用 <p> 标签来表示段落。示例代码：<!DOC...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":756,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/HTML/zkgqems7mofxiukr","path":"docs/doc/💻 编程语言/HTML/zkgqems7mofxiukr","filePath":"docs/doc/💻 编程语言/HTML/zkgqems7mofxiukr.md","toc":[{"value":"","url":"#-9","depth":1},{"value":"3. 文本与段落","url":"#3-文本与段落","depth":2},{"value":"3.1 段落 (<p>)","url":"#31-段落-p","depth":3},{"value":"示例代码：","url":"#示例代码-11","depth":4},{"value":"解释：","url":"#解释-8","depth":4},{"value":"3.2 标题 (<h1> - <h6>)","url":"#32-标题-h1---h6","depth":3},{"value":"示例代码：","url":"#示例代码-12","depth":4},{"value":"解释：","url":"#解释-9","depth":4},{"value":"3.3 换行 (<br>)","url":"#33-换行-br","depth":3},{"value":"示例代码：","url":"#示例代码-13","depth":4},{"value":"解释：","url":"#解释-10","depth":4},{"value":"3.4 水平线 (<hr>)","url":"#34-水平线-hr","depth":3},{"value":"示例代码：","url":"#示例代码-14","depth":4},{"value":"解释：","url":"#解释-11","depth":4},{"value":"小结","url":"#小结-2","depth":3},{"value":"练习题","url":"#练习题","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第三章:HTML 入门","datePublished":"2024-06-06T12:30:28.000Z","dateModified":"2024-06-06T12:30:49.000Z","description":"3. 文本与段落在 HTML 中，文本和段落是构建网页内容的基础元素。理解如何使用这些元素能够帮助你创建结构化和易读的网页内容。本章节将详细介绍段落、标题、换行和水平线等基础知识。3.1 段落 (<p>)段落是网页中最基本的文本单元。HTML 使用 <p> 标签来表示段落。示例代码：<!DOC...","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/zkgqems7mofxiukr"}},{"title":"第二章：HTML 基础语法","date":"2024-06-06T12:30:09.000Z","urlname":"rb4ye0t3yaqbxzpg","is_nav":false,"updated":"2024-06-06T12:30:24.000Z","not_show":false,"description":"2.1 HTML 文档的基本结构HTML（超文本标记语言）是构建网页的基础语言。一个标准的 HTML 文档包括以下几个部分：<!DOCTYPE html> <html lang=\"en\">   <head>     <meta charset=\"UTF-8\" />     <meta name...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":893,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/HTML/rb4ye0t3yaqbxzpg","path":"docs/doc/💻 编程语言/HTML/rb4ye0t3yaqbxzpg","filePath":"docs/doc/💻 编程语言/HTML/rb4ye0t3yaqbxzpg.md","toc":[{"value":"2.1 HTML 文档的基本结构","url":"#21-html-文档的基本结构","depth":2},{"value":"2.1.1 <!DOCTYPE html>","url":"#211-doctype-html","depth":3},{"value":"2.1.2 <html lang=\"en\">","url":"#212-html-langen","depth":3},{"value":"2.1.3 <head>","url":"#213-head","depth":3},{"value":"2.1.4 <meta charset=\"UTF-8\">","url":"#214-meta-charsetutf-8","depth":3},{"value":"2.1.5 <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">","url":"#215-meta-nameviewport-contentwidthdevice-width-initial-scale10","depth":3},{"value":"2.1.6 <title>","url":"#216-title","depth":3},{"value":"2.1.7 <body>","url":"#217-body","depth":3},{"value":"2.2 常用的 HTML 标签","url":"#22-常用的-html-标签","depth":2},{"value":"2.2.1 标题标签","url":"#221-标题标签","depth":3},{"value":"2.2.2 段落标签","url":"#222-段落标签","depth":3},{"value":"2.2.3 换行标签","url":"#223-换行标签","depth":3},{"value":"2.2.4 水平线标签","url":"#224-水平线标签","depth":3},{"value":"2.3 标签的属性与使用","url":"#23-标签的属性与使用","depth":2},{"value":"2.3.1 常用属性","url":"#231-常用属性","depth":3},{"value":"id 属性","url":"#id-属性","depth":4},{"value":"class 属性","url":"#class-属性","depth":4},{"value":"style 属性","url":"#style-属性","depth":4},{"value":"2.3.2 自定义属性","url":"#232-自定义属性","depth":3},{"value":"2.4 标签的嵌套与层次结构","url":"#24-标签的嵌套与层次结构","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第二章：HTML 基础语法","datePublished":"2024-06-06T12:30:09.000Z","dateModified":"2024-06-06T12:30:24.000Z","description":"2.1 HTML 文档的基本结构HTML（超文本标记语言）是构建网页的基础语言。一个标准的 HTML 文档包括以下几个部分：<!DOCTYPE html> <html lang=\"en\">   <head>     <meta charset=\"UTF-8\" />     <meta name...","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/rb4ye0t3yaqbxzpg"}},{"title":"第一章: 什么是 HTML？","date":"2024-06-06T12:29:49.000Z","urlname":"ahl7knwxuwgf78il","is_nav":false,"updated":"2024-06-06T12:30:04.000Z","not_show":false,"description":"1.1 HTML 的历史与发展HTML（HyperText Markup Language）是用于创建网页的标准标记语言。它最早由蒂姆·伯纳斯-李（Tim Berners-Lee）在 1991 年提出，用于构建基本的互联网网页。自那时起，HTML 经过了多次迭代和更新，从最初的 HTML 1....","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":751,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/HTML/ahl7knwxuwgf78il","path":"docs/doc/💻 编程语言/HTML/ahl7knwxuwgf78il","filePath":"docs/doc/💻 编程语言/HTML/ahl7knwxuwgf78il.md","toc":[{"value":"1.1 HTML 的历史与发展","url":"#11-html-的历史与发展","depth":2},{"value":"1.1.1 HTML 1.0 到 HTML4.01","url":"#111-html-10-到-html401","depth":3},{"value":"1.1.2 HTML5 时代","url":"#112-html5-时代","depth":3},{"value":"1.2 HTML 在 Web 开发中的作用","url":"#12-html-在-web-开发中的作用","depth":2},{"value":"1.2.1 HTML 与 CSS 的关系","url":"#121-html-与-css-的关系","depth":3},{"value":"1.2.2 HTML 与 JavaScript 的关系","url":"#122-html-与-javascript-的关系","depth":3},{"value":"1.3 小结","url":"#13-小结","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第一章: 什么是 HTML？","datePublished":"2024-06-06T12:29:49.000Z","dateModified":"2024-06-06T12:30:04.000Z","description":"1.1 HTML 的历史与发展HTML（HyperText Markup Language）是用于创建网页的标准标记语言。它最早由蒂姆·伯纳斯-李（Tim Berners-Lee）在 1991 年提出，用于构建基本的互联网网页。自那时起，HTML 经过了多次迭代和更新，从最初的 HTML 1....","url":"https://offernow.cn/docs/doc/💻 编程语言/HTML/ahl7knwxuwgf78il"}},{"title":"字节一面面经：秒过，不会过不了吧？","date":"2024-06-04T13:23:03.000Z","urlname":"doq5tu9u8k0zw15d","is_nav":false,"updated":"2024-07-27T12:46:13.000Z","not_show":false,"description":"面试问题自我介绍你知道的搜索算法有哪些二叉搜索树，二叉平衡树，红黑树有什么区别（上面第二题我提到了这几种数据结构）Mysql为什么用B+树哈希的时间复杂度是多少哈希在是用的时候要注意什么并发和并行有什么区别线程和进程有什么区别你知道的语言里垃圾回收算法有什么C++智能指针说一下（简历里有写会C...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":7858,"minutes":26,"text":"26 分钟"},"slug":"doc/💹 大厂面经/面试真题/doq5tu9u8k0zw15d","path":"docs/doc/💹 大厂面经/面试真题/doq5tu9u8k0zw15d","filePath":"docs/doc/💹 大厂面经/面试真题/doq5tu9u8k0zw15d.md","toc":[{"value":"面试问题","url":"#面试问题-3","depth":1},{"value":"参考回答","url":"#参考回答-3","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"字节一面面经：秒过，不会过不了吧？","datePublished":"2024-06-04T13:23:03.000Z","dateModified":"2024-07-27T12:46:13.000Z","description":"面试问题自我介绍你知道的搜索算法有哪些二叉搜索树，二叉平衡树，红黑树有什么区别（上面第二题我提到了这几种数据结构）Mysql为什么用B+树哈希的时间复杂度是多少哈希在是用的时候要注意什么并发和并行有什么区别线程和进程有什么区别你知道的语言里垃圾回收算法有什么C++智能指针说一下（简历里有写会C...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/doq5tu9u8k0zw15d"}},{"title":"CSS","date":"2024-06-04T07:54:07.000Z","urlname":"zxr575sqdpq3e4by","is_nav":true,"nav_path":"css","updated":"2024-09-28T04:05:23.000Z","not_show":false,"description":"---nav_path: cssis_nav: true---第一部分：CSS 入门第一章：初识 CSS CSS 简介 CSS 的历史与发展CSS 的应用领域为什么选择 CSS CSS 基础 CSS 的基本概念CSS 的层叠与继承CSS 的语法与结构 CSS 的引入方式 内联样式内部样式表外部...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":999,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/zxr575sqdpq3e4by","path":"docs/doc/💻 编程语言/zxr575sqdpq3e4by","filePath":"docs/doc/💻 编程语言/zxr575sqdpq3e4by.md","toc":[{"value":"第一部分：CSS 入门","url":"#第一部分css-入门","depth":3},{"value":"第一章：初识 CSS","url":"#第一章初识-css","depth":4},{"value":"第二章：选择器与规则","url":"#第二章选择器与规则","depth":4},{"value":"第三章：文本与字体","url":"#第三章文本与字体","depth":4},{"value":"第二部分：CSS 进阶","url":"#第二部分css-进阶","depth":3},{"value":"第四章：盒模型","url":"#第四章盒模型","depth":4},{"value":"第五章：布局基础","url":"#第五章布局基础","depth":4},{"value":"第六章：弹性布局（Flexbox）","url":"#第六章弹性布局flexbox","depth":4},{"value":"第七章：网格布局（Grid）","url":"#第七章网格布局grid","depth":4},{"value":"第三部分：高级应用与实战","url":"#第三部分高级应用与实战","depth":3},{"value":"第八章：响应式设计","url":"#第八章响应式设计","depth":4},{"value":"第九章：过渡与动画","url":"#第九章过渡与动画","depth":4},{"value":"第十章：变换与特效","url":"#第十章变换与特效","depth":4},{"value":"第十一章：项目实战：创建个人作品集网站","url":"#第十一章项目实战创建个人作品集网站","depth":4},{"value":"第十二章：CSS 最佳实践","url":"#第十二章css-最佳实践","depth":4},{"value":"第十三章：前沿技术与工具","url":"#第十三章前沿技术与工具","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"CSS","datePublished":"2024-06-04T07:54:07.000Z","dateModified":"2024-09-28T04:05:23.000Z","description":"---nav_path: cssis_nav: true---第一部分：CSS 入门第一章：初识 CSS CSS 简介 CSS 的历史与发展CSS 的应用领域为什么选择 CSS CSS 基础 CSS 的基本概念CSS 的层叠与继承CSS 的语法与结构 CSS 的引入方式 内联样式内部样式表外部...","url":"https://offernow.cn/docs/doc/💻 编程语言/zxr575sqdpq3e4by"}},{"title":"HTML","date":"2024-06-04T07:54:02.000Z","urlname":"aik2girglv1pxdnz","is_nav":true,"nav_path":"html","updated":"2024-09-28T04:05:08.000Z","not_show":false,"description":"---nav_path: htmlis_nav: true---HTML 是前端开发的基础，掌握 HTML 对于学习 Web 开发至关重要。第一部分：HTML 入门 什么是 HTML？ HTML 的历史与发展HTML 在 Web 开发中的作用 HTML 基础语法 HTML 文档的基本结构常用的...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":385,"minutes":1,"text":"1 分钟"},"slug":"doc/💻 编程语言/aik2girglv1pxdnz","path":"docs/doc/💻 编程语言/aik2girglv1pxdnz","filePath":"docs/doc/💻 编程语言/aik2girglv1pxdnz.md","toc":[{"value":"第一部分：HTML 入门","url":"#第一部分html-入门","depth":3},{"value":"第二部分：HTML 进阶","url":"#第二部分html-进阶","depth":3},{"value":"第三部分：实战与高级应用","url":"#第三部分实战与高级应用","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"HTML","datePublished":"2024-06-04T07:54:02.000Z","dateModified":"2024-09-28T04:05:08.000Z","description":"---nav_path: htmlis_nav: true---HTML 是前端开发的基础，掌握 HTML 对于学习 Web 开发至关重要。第一部分：HTML 入门 什么是 HTML？ HTML 的历史与发展HTML 在 Web 开发中的作用 HTML 基础语法 HTML 文档的基本结构常用的...","url":"https://offernow.cn/docs/doc/💻 编程语言/aik2girglv1pxdnz"}},{"title":"第八章：智能依赖预构建——提升加载速度","date":"2024-06-04T07:50:40.000Z","urlname":"gipyn4qiqoagffad","is_nav":false,"updated":"2024-06-04T09:14:03.000Z","not_show":false,"description":"在前几章中，我们已经了解了 Vite 的基础配置、开发服务器、模块化机制、插件系统以及多框架支持。本章将深入探讨 Vite 的智能依赖预构建功能，了解它如何提升开发和加载速度。依赖预构建的原理在大型项目中，依赖包的解析和打包可能是一个性能瓶颈。Vite 通过自动预构建并缓存依赖包，减少了依赖解...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1267,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Vite/gipyn4qiqoagffad","path":"docs/doc/💻 编程语言/Vite/gipyn4qiqoagffad","filePath":"docs/doc/💻 编程语言/Vite/gipyn4qiqoagffad.md","toc":[{"value":"依赖预构建的原理","url":"#依赖预构建的原理","depth":2},{"value":"什么是依赖预构建？","url":"#什么是依赖预构建","depth":3},{"value":"预构建的优势","url":"#预构建的优势","depth":3},{"value":"配置依赖预构建","url":"#配置依赖预构建","depth":2},{"value":"指定预构建依赖","url":"#指定预构建依赖","depth":3},{"value":"排除不需要预构建的依赖","url":"#排除不需要预构建的依赖","depth":3},{"value":"预构建配置示例","url":"#预构建配置示例","depth":3},{"value":"依赖预构建的实际应用","url":"#依赖预构建的实际应用","depth":2},{"value":"优化大型项目","url":"#优化大型项目","depth":3},{"value":"动态依赖","url":"#动态依赖","depth":3},{"value":"Vite 与常规 React 构建工具的对比","url":"#vite-与常规-react-构建工具的对比-3","depth":2},{"value":"依赖预构建","url":"#依赖预构建","depth":3},{"value":"缓存优化","url":"#缓存优化","depth":3},{"value":"开发体验","url":"#开发体验-3","depth":3},{"value":"结论","url":"#结论-10","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第八章：智能依赖预构建——提升加载速度","datePublished":"2024-06-04T07:50:40.000Z","dateModified":"2024-06-04T09:14:03.000Z","description":"在前几章中，我们已经了解了 Vite 的基础配置、开发服务器、模块化机制、插件系统以及多框架支持。本章将深入探讨 Vite 的智能依赖预构建功能，了解它如何提升开发和加载速度。依赖预构建的原理在大型项目中，依赖包的解析和打包可能是一个性能瓶颈。Vite 通过自动预构建并缓存依赖包，减少了依赖解...","url":"https://offernow.cn/docs/doc/💻 编程语言/Vite/gipyn4qiqoagffad"}},{"title":"第九章：Vite 与常规 React 构建工具的对比","date":"2024-06-04T07:50:04.000Z","urlname":"gdanxi3s6gdukift","is_nav":false,"updated":"2024-06-04T09:16:44.000Z","not_show":false,"description":"在前几章中，我们深入探讨了 Vite 的各种功能和特性。本章将详细对比 Vite 与常规 React 构建工具（如 Create React App），帮助你了解它们在开发体验、构建性能、配置复杂度等方面的差异。开发体验极速冷启动Vite：优势：利用浏览器原生 ES 模块支持，实现极快的冷启动...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1215,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Vite/gdanxi3s6gdukift","path":"docs/doc/💻 编程语言/Vite/gdanxi3s6gdukift","filePath":"docs/doc/💻 编程语言/Vite/gdanxi3s6gdukift.md","toc":[{"value":"开发体验","url":"#开发体验-2","depth":2},{"value":"极速冷启动","url":"#极速冷启动","depth":3},{"value":"高效的热模块替换（HMR）","url":"#高效的热模块替换hmr","depth":3},{"value":"构建性能","url":"#构建性能-1","depth":2},{"value":"使用 Rollup 进行生产构建","url":"#使用-rollup-进行生产构建","depth":3},{"value":"配置复杂度","url":"#配置复杂度-1","depth":3},{"value":"智能依赖预构建","url":"#智能依赖预构建","depth":2},{"value":"总结","url":"#总结-12","depth":2},{"value":"结论","url":"#结论-9","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第九章：Vite 与常规 React 构建工具的对比","datePublished":"2024-06-04T07:50:04.000Z","dateModified":"2024-06-04T09:16:44.000Z","description":"在前几章中，我们深入探讨了 Vite 的各种功能和特性。本章将详细对比 Vite 与常规 React 构建工具（如 Create React App），帮助你了解它们在开发体验、构建性能、配置复杂度等方面的差异。开发体验极速冷启动Vite：优势：利用浏览器原生 ES 模块支持，实现极快的冷启动...","url":"https://offernow.cn/docs/doc/💻 编程语言/Vite/gdanxi3s6gdukift"}},{"title":"第十章：Vite 与 Next.js 有什么区别？","date":"2024-06-04T07:49:47.000Z","urlname":"lci7bnn5f2646mno","is_nav":false,"updated":"2024-06-04T09:16:20.000Z","not_show":false,"description":"在前几章中，我们了解了 Vite 的各种功能和优势，并对比了它与常规 React 构建工具的区别。本章将深入对比 Vite 与 Next.js，了解它们在开发体验、功能特性和使用场景等方面的差异。开发体验极速冷启动与高效 HMRVite：优势：利用浏览器原生 ES 模块支持，实现极快的冷启动速...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1345,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Vite/lci7bnn5f2646mno","path":"docs/doc/💻 编程语言/Vite/lci7bnn5f2646mno","filePath":"docs/doc/💻 编程语言/Vite/lci7bnn5f2646mno.md","toc":[{"value":"开发体验","url":"#开发体验-5","depth":2},{"value":"极速冷启动与高效 HMR","url":"#极速冷启动与高效-hmr","depth":3},{"value":"目录结构和约定","url":"#目录结构和约定","depth":3},{"value":"功能特性","url":"#功能特性","depth":2},{"value":"单页面应用（SPA）与多页面应用（MPA）","url":"#单页面应用spa与多页面应用mpa","depth":3},{"value":"服务端渲染（SSR）与静态生成（SSG）","url":"#服务端渲染ssr与静态生成ssg","depth":3},{"value":"API 路由","url":"#api-路由","depth":3},{"value":"使用场景","url":"#使用场景","depth":2},{"value":"适用项目类型","url":"#适用项目类型","depth":3},{"value":"社区支持与生态系统","url":"#社区支持与生态系统","depth":3},{"value":"结论","url":"#结论-12","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十章：Vite 与 Next.js 有什么区别？","datePublished":"2024-06-04T07:49:47.000Z","dateModified":"2024-06-04T09:16:20.000Z","description":"在前几章中，我们了解了 Vite 的各种功能和优势，并对比了它与常规 React 构建工具的区别。本章将深入对比 Vite 与 Next.js，了解它们在开发体验、功能特性和使用场景等方面的差异。开发体验极速冷启动与高效 HMRVite：优势：利用浏览器原生 ES 模块支持，实现极快的冷启动速...","url":"https://offernow.cn/docs/doc/💻 编程语言/Vite/lci7bnn5f2646mno"}},{"title":"第十一章：实战项目——用 Vite 构建一个完整的应用","date":"2024-06-04T07:49:39.000Z","urlname":"doa6bd969mxga90c","is_nav":false,"updated":"2024-06-04T09:16:04.000Z","not_show":false,"description":"通过前几章的学习，你已经对 Vite 的各种功能和特性有了深入了解。本章将带你进入实战项目，使用 Vite 构建一个完整的任务管理应用（Todo App）。我们将从项目规划开始，一步步实现任务管理的各个功能。项目规划功能需求我们将构建一个简单的任务管理应用，包含以下功能：任务的添加任务的删除任...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1017,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Vite/doa6bd969mxga90c","path":"docs/doc/💻 编程语言/Vite/doa6bd969mxga90c","filePath":"docs/doc/💻 编程语言/Vite/doa6bd969mxga90c.md","toc":[{"value":"项目规划","url":"#项目规划","depth":2},{"value":"功能需求","url":"#功能需求-1","depth":3},{"value":"技术选型","url":"#技术选型","depth":3},{"value":"项目初始化","url":"#项目初始化-1","depth":2},{"value":"创建项目","url":"#创建项目","depth":3},{"value":"配置项目","url":"#配置项目","depth":3},{"value":"开发过程","url":"#开发过程","depth":2},{"value":"目录结构","url":"#目录结构","depth":3},{"value":"安装依赖","url":"#安装依赖","depth":3},{"value":"配置 Vuex","url":"#配置-vuex","depth":3},{"value":"配置 Vue Router","url":"#配置-vue-router","depth":3},{"value":"创建组件","url":"#创建组件","depth":3},{"value":"创建任务列表组件","url":"#创建任务列表组件","depth":4},{"value":"创建视图组件","url":"#创建视图组件","depth":4},{"value":"主入口文件","url":"#主入口文件","depth":3},{"value":"配置主组件","url":"#配置主组件","depth":3},{"value":"项目构建与部署","url":"#项目构建与部署","depth":2},{"value":"构建生产版本","url":"#构建生产版本","depth":3},{"value":"部署到静态服务器或 CDN","url":"#部署到静态服务器或-cdn","depth":3},{"value":"结论","url":"#结论-6","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第十一章：实战项目——用 Vite 构建一个完整的应用","datePublished":"2024-06-04T07:49:39.000Z","dateModified":"2024-06-04T09:16:04.000Z","description":"通过前几章的学习，你已经对 Vite 的各种功能和特性有了深入了解。本章将带你进入实战项目，使用 Vite 构建一个完整的任务管理应用（Todo App）。我们将从项目规划开始，一步步实现任务管理的各个功能。项目规划功能需求我们将构建一个简单的任务管理应用，包含以下功能：任务的添加任务的删除任...","url":"https://offernow.cn/docs/doc/💻 编程语言/Vite/doa6bd969mxga90c"}},{"title":"第七章：框架支持——与 Vue、React、Svelte 的结合","date":"2024-06-04T06:13:18.000Z","urlname":"ivl6i6vbf9f1rpg2","is_nav":false,"updated":"2024-06-04T09:14:16.000Z","not_show":false,"description":"在前几章中，我们已经了解了 Vite 的基础配置、开发服务器、模块化机制以及插件系统。本章将探讨 Vite 如何与多种前端框架结合使用，特别是 Vue、React 和 Svelte。使用 Vite 构建 Vue 项目初始化 Vue 项目Vite 提供了一个简单的命令行工具，可以帮助我们快速初始...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":984,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Vite/ivl6i6vbf9f1rpg2","path":"docs/doc/💻 编程语言/Vite/ivl6i6vbf9f1rpg2","filePath":"docs/doc/💻 编程语言/Vite/ivl6i6vbf9f1rpg2.md","toc":[{"value":"使用 Vite 构建 Vue 项目","url":"#使用-vite-构建-vue-项目","depth":2},{"value":"初始化 Vue 项目","url":"#初始化-vue-项目","depth":3},{"value":"配置 Vue 插件","url":"#配置-vue-插件","depth":3},{"value":"创建 Vue 组件","url":"#创建-vue-组件","depth":3},{"value":"使用 Vue 组件","url":"#使用-vue-组件","depth":3},{"value":"使用 Vite 构建 React 项目","url":"#使用-vite-构建-react-项目","depth":2},{"value":"初始化 React 项目","url":"#初始化-react-项目","depth":3},{"value":"配置 React 插件","url":"#配置-react-插件","depth":3},{"value":"创建 React 组件","url":"#创建-react-组件","depth":3},{"value":"使用 React 组件","url":"#使用-react-组件","depth":3},{"value":"使用 Vite 构建 Svelte 项目","url":"#使用-vite-构建-svelte-项目","depth":2},{"value":"初始化 Svelte 项目","url":"#初始化-svelte-项目","depth":3},{"value":"配置 Svelte 插件","url":"#配置-svelte-插件","depth":3},{"value":"创建 Svelte 组件","url":"#创建-svelte-组件","depth":3},{"value":"使用 Svelte 组件","url":"#使用-svelte-组件","depth":3},{"value":"Vite 与常规 React 构建工具的对比","url":"#vite-与常规-react-构建工具的对比-4","depth":2},{"value":"框架支持","url":"#框架支持","depth":3},{"value":"开发体验","url":"#开发体验-4","depth":3},{"value":"构建性能","url":"#构建性能-2","depth":3},{"value":"结论","url":"#结论-11","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第七章：框架支持——与 Vue、React、Svelte 的结合","datePublished":"2024-06-04T06:13:18.000Z","dateModified":"2024-06-04T09:14:16.000Z","description":"在前几章中，我们已经了解了 Vite 的基础配置、开发服务器、模块化机制以及插件系统。本章将探讨 Vite 如何与多种前端框架结合使用，特别是 Vue、React 和 Svelte。使用 Vite 构建 Vue 项目初始化 Vue 项目Vite 提供了一个简单的命令行工具，可以帮助我们快速初始...","url":"https://offernow.cn/docs/doc/💻 编程语言/Vite/ivl6i6vbf9f1rpg2"}},{"title":"第六章：插件系统——扩展 Vite 的功能","date":"2024-06-04T06:04:53.000Z","urlname":"eitth76w001o75y4","is_nav":false,"updated":"2024-06-04T09:13:50.000Z","not_show":false,"description":"在上一章中，我们深入探讨了 Vite 的生产构建功能。本章将聚焦于 Vite 的插件系统，了解如何通过插件来扩展 Vite 的功能，从而满足各种开发需求。Vite 的插件机制Vite 提供了一个强大的插件机制，允许你扩展其默认功能。Vite 的插件系统是基于 Rollup 插件 API 设计的...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1151,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Vite/eitth76w001o75y4","path":"docs/doc/💻 编程语言/Vite/eitth76w001o75y4","filePath":"docs/doc/💻 编程语言/Vite/eitth76w001o75y4.md","toc":[{"value":"Vite 的插件机制","url":"#vite-的插件机制","depth":2},{"value":"官方插件与社区插件","url":"#官方插件与社区插件","depth":3},{"value":"安装插件","url":"#安装插件","depth":3},{"value":"常用插件示例","url":"#常用插件示例","depth":2},{"value":"使用 Vue 插件","url":"#使用-vue-插件","depth":3},{"value":"使用 React 插件","url":"#使用-react-插件","depth":3},{"value":"使用 TypeScript 插件","url":"#使用-typescript-插件","depth":3},{"value":"编写自定义插件","url":"#编写自定义插件","depth":2},{"value":"Vite 与常规 React 构建工具的对比","url":"#vite-与常规-react-构建工具的对比-1","depth":2},{"value":"灵活性","url":"#灵活性","depth":3},{"value":"简洁性","url":"#简洁性","depth":3},{"value":"开发体验","url":"#开发体验","depth":3},{"value":"结论","url":"#结论-7","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第六章：插件系统——扩展 Vite 的功能","datePublished":"2024-06-04T06:04:53.000Z","dateModified":"2024-06-04T09:13:50.000Z","description":"在上一章中，我们深入探讨了 Vite 的生产构建功能。本章将聚焦于 Vite 的插件系统，了解如何通过插件来扩展 Vite 的功能，从而满足各种开发需求。Vite 的插件机制Vite 提供了一个强大的插件机制，允许你扩展其默认功能。Vite 的插件系统是基于 Rollup 插件 API 设计的...","url":"https://offernow.cn/docs/doc/💻 编程语言/Vite/eitth76w001o75y4"}},{"title":"第五章：构建生产版本——Rollup 的威力","date":"2024-06-04T05:29:54.000Z","urlname":"tnwegrk5ztgxo9tm","is_nav":false,"updated":"2024-06-04T09:13:37.000Z","not_show":false,"description":"在上一章中，我们深入探讨了 Vite 的模块化机制和热模块替换（HMR）。本章将聚焦于 Vite 的生产构建功能，了解它如何利用 Rollup 提供高效且灵活的构建能力。构建生产版本在开发完成后，你需要将项目构建成生产版本，以便部署到服务器或 CDN。Vite 使用 Rollup 作为生产构建...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1060,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Vite/tnwegrk5ztgxo9tm","path":"docs/doc/💻 编程语言/Vite/tnwegrk5ztgxo9tm","filePath":"docs/doc/💻 编程语言/Vite/tnwegrk5ztgxo9tm.md","toc":[{"value":"构建生产版本","url":"#构建生产版本-1","depth":2},{"value":"使用 Vite 构建生产版本","url":"#使用-vite-构建生产版本","depth":3},{"value":"构建配置","url":"#构建配置","depth":3},{"value":"代码拆分","url":"#代码拆分","depth":3},{"value":"优化构建性能","url":"#优化构建性能","depth":2},{"value":"压缩代码","url":"#压缩代码","depth":3},{"value":"移除无用代码","url":"#移除无用代码","depth":3},{"value":"Vite 与常规 React 构建工具的对比","url":"#vite-与常规-react-构建工具的对比-6","depth":2},{"value":"构建性能","url":"#构建性能-4","depth":3},{"value":"配置复杂度","url":"#配置复杂度-3","depth":3},{"value":"开发体验","url":"#开发体验-7","depth":3},{"value":"结论","url":"#结论-15","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第五章：构建生产版本——Rollup 的威力","datePublished":"2024-06-04T05:29:54.000Z","dateModified":"2024-06-04T09:13:37.000Z","description":"在上一章中，我们深入探讨了 Vite 的模块化机制和热模块替换（HMR）。本章将聚焦于 Vite 的生产构建功能，了解它如何利用 Rollup 提供高效且灵活的构建能力。构建生产版本在开发完成后，你需要将项目构建成生产版本，以便部署到服务器或 CDN。Vite 使用 Rollup 作为生产构建...","url":"https://offernow.cn/docs/doc/💻 编程语言/Vite/tnwegrk5ztgxo9tm"}},{"title":"第四章：模块化与 HMR——瞬间热加载","date":"2024-06-04T05:28:00.000Z","urlname":"lgt6zenie0apvc1y","is_nav":false,"updated":"2024-06-04T05:29:52.000Z","not_show":false,"description":"在前一章中，我们了解了 Vite 的开发服务器及其强大功能。本章将深入探讨 Vite 的模块化机制和热模块替换（HMR），让你在开发过程中享受瞬间热加载的便利。模块化开发Vite 利用浏览器原生的 ES 模块支持，实现了高效的模块化开发。ES 模块（ESM）是现代 JavaScript 的一种...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1199,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Vite/lgt6zenie0apvc1y","path":"docs/doc/💻 编程语言/Vite/lgt6zenie0apvc1y","filePath":"docs/doc/💻 编程语言/Vite/lgt6zenie0apvc1y.md","toc":[{"value":"模块化开发","url":"#模块化开发-1","depth":2},{"value":"ES 模块的基本使用","url":"#es-模块的基本使用","depth":3},{"value":"热模块替换（HMR）","url":"#热模块替换hmr-1","depth":2},{"value":"HMR 的实现原理","url":"#hmr-的实现原理","depth":3},{"value":"HMR 的使用示例","url":"#hmr-的使用示例","depth":3},{"value":"HMR 的高级用法","url":"#hmr-的高级用法","depth":3},{"value":"配置 HMR","url":"#配置-hmr","depth":2},{"value":"Vite 与常规 React 构建工具的对比","url":"#vite-与常规-react-构建工具的对比-5","depth":2},{"value":"开发体验","url":"#开发体验-6","depth":3},{"value":"配置复杂度","url":"#配置复杂度-2","depth":3},{"value":"构建性能","url":"#构建性能-3","depth":3},{"value":"结论","url":"#结论-13","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第四章：模块化与 HMR——瞬间热加载","datePublished":"2024-06-04T05:28:00.000Z","dateModified":"2024-06-04T05:29:52.000Z","description":"在前一章中，我们了解了 Vite 的开发服务器及其强大功能。本章将深入探讨 Vite 的模块化机制和热模块替换（HMR），让你在开发过程中享受瞬间热加载的便利。模块化开发Vite 利用浏览器原生的 ES 模块支持，实现了高效的模块化开发。ES 模块（ESM）是现代 JavaScript 的一种...","url":"https://offernow.cn/docs/doc/💻 编程语言/Vite/lgt6zenie0apvc1y"}},{"title":"第三章：极速开发——Vite 的开发服务器","date":"2024-06-04T05:25:46.000Z","urlname":"echszg78wl78ob1o","is_nav":false,"updated":"2024-06-04T05:28:01.000Z","not_show":false,"description":"在上一章中，我们已经学习了如何安装和配置 Vite。本章将深入探讨 Vite 的开发服务器，它的速度和高效的热模块替换（HMR）功能会让你的开发体验如虎添翼。启动开发服务器启动 Vite 的开发服务器非常简单。你只需在项目根目录下运行以下命令：npm run dev默认情况下，Vite 的开发...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1297,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Vite/echszg78wl78ob1o","path":"docs/doc/💻 编程语言/Vite/echszg78wl78ob1o","filePath":"docs/doc/💻 编程语言/Vite/echszg78wl78ob1o.md","toc":[{"value":"启动开发服务器","url":"#启动开发服务器","depth":2},{"value":"实时预览与自动刷新","url":"#实时预览与自动刷新","depth":2},{"value":"热模块替换（HMR）","url":"#热模块替换hmr","depth":3},{"value":"实现原理","url":"#实现原理","depth":3},{"value":"代码示例与注释","url":"#代码示例与注释","depth":3},{"value":"配置开发服务器","url":"#配置开发服务器","depth":2},{"value":"修改端口","url":"#修改端口","depth":3},{"value":"配置代理","url":"#配置代理","depth":3},{"value":"配置 HTTPS","url":"#配置-https","depth":3},{"value":"Vite 与常规 React 构建工具的对比","url":"#vite-与常规-react-构建工具的对比-2","depth":2},{"value":"开发体验","url":"#开发体验-1","depth":3},{"value":"配置复杂度","url":"#配置复杂度","depth":3},{"value":"构建性能","url":"#构建性能","depth":3},{"value":"结论","url":"#结论-8","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第三章：极速开发——Vite 的开发服务器","datePublished":"2024-06-04T05:25:46.000Z","dateModified":"2024-06-04T05:28:01.000Z","description":"在上一章中，我们已经学习了如何安装和配置 Vite。本章将深入探讨 Vite 的开发服务器，它的速度和高效的热模块替换（HMR）功能会让你的开发体验如虎添翼。启动开发服务器启动 Vite 的开发服务器非常简单。你只需在项目根目录下运行以下命令：npm run dev默认情况下，Vite 的开发...","url":"https://offernow.cn/docs/doc/💻 编程语言/Vite/echszg78wl78ob1o"}},{"title":"第二章：初识 Vite——安装与配置","date":"2024-06-04T05:24:06.000Z","urlname":"uv7d6a0ixhygpliw","is_nav":false,"updated":"2024-06-04T05:25:47.000Z","not_show":false,"description":"在上一章，我们了解了 Vite 的核心优势和背景。这一章将带你从零开始，安装和配置 Vite 项目，让你快速体验到这款工具所带来的极速开发体验。初始化 Vite 项目Vite 提供了一个简单的命令行工具，可以帮助我们快速初始化一个新项目。以下是使用 npm 初始化一个 Vite 项目的步骤： ...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1273,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Vite/uv7d6a0ixhygpliw","path":"docs/doc/💻 编程语言/Vite/uv7d6a0ixhygpliw","filePath":"docs/doc/💻 编程语言/Vite/uv7d6a0ixhygpliw.md","toc":[{"value":"初始化 Vite 项目","url":"#初始化-vite-项目","depth":3},{"value":"配置项目","url":"#配置项目-1","depth":3},{"value":"配置插件","url":"#配置插件","depth":4},{"value":"配置路径别名","url":"#配置路径别名","depth":4},{"value":"启动开发服务器","url":"#启动开发服务器-1","depth":3},{"value":"配置开发服务器","url":"#配置开发服务器-1","depth":3},{"value":"构建生产版本","url":"#构建生产版本-2","depth":3},{"value":"轻松幽默的讲解","url":"#轻松幽默的讲解","depth":3},{"value":"Vite 与常规 React 构建工具的对比","url":"#vite-与常规-react-构建工具的对比-7","depth":3},{"value":"开发体验","url":"#开发体验-8","depth":4},{"value":"配置复杂度","url":"#配置复杂度-4","depth":4},{"value":"构建性能","url":"#构建性能-5","depth":4},{"value":"结论","url":"#结论-16","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第二章：初识 Vite——安装与配置","datePublished":"2024-06-04T05:24:06.000Z","dateModified":"2024-06-04T05:25:47.000Z","description":"在上一章，我们了解了 Vite 的核心优势和背景。这一章将带你从零开始，安装和配置 Vite 项目，让你快速体验到这款工具所带来的极速开发体验。初始化 Vite 项目Vite 提供了一个简单的命令行工具，可以帮助我们快速初始化一个新项目。以下是使用 npm 初始化一个 Vite 项目的步骤： ...","url":"https://offernow.cn/docs/doc/💻 编程语言/Vite/uv7d6a0ixhygpliw"}},{"title":"第一章：为什么选择 Vite？","date":"2024-06-04T05:22:07.000Z","urlname":"rt3fdkpntuuc77y0","is_nav":false,"updated":"2024-06-04T05:24:07.000Z","not_show":false,"description":"在现代前端开发中，构建工具扮演着至关重要的角色。它们不仅帮助我们管理依赖、打包代码，还极大地影响了开发体验和生产效率。随着前端技术的不断迭代，传统的构建工具如 Webpack、Parcel 等逐渐暴露出一些性能瓶颈和复杂性。而 Vite 的出现，给我们带来了全新的开发体验。Vite 的诞生背景...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1195,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Vite/rt3fdkpntuuc77y0","path":"docs/doc/💻 编程语言/Vite/rt3fdkpntuuc77y0","filePath":"docs/doc/💻 编程语言/Vite/rt3fdkpntuuc77y0.md","toc":[{"value":"Vite 的诞生背景","url":"#vite-的诞生背景","depth":2},{"value":"为什么选择 Vite？","url":"#为什么选择-vite","depth":3},{"value":"Vite 的核心优势","url":"#vite-的核心优势","depth":2},{"value":"极速冷启动","url":"#极速冷启动-1","depth":3},{"value":"高效的热模块替换（HMR）","url":"#高效的热模块替换hmr-1","depth":3},{"value":"智能的依赖预构建","url":"#智能的依赖预构建","depth":3},{"value":"现代化的构建流程","url":"#现代化的构建流程","depth":3},{"value":"多框架支持","url":"#多框架支持","depth":3},{"value":"趣味小故事：从 Webpack 到 Vite 的演变","url":"#趣味小故事从-webpack-到-vite-的演变","depth":2},{"value":"结论","url":"#结论-14","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第一章：为什么选择 Vite？","datePublished":"2024-06-04T05:22:07.000Z","dateModified":"2024-06-04T05:24:07.000Z","description":"在现代前端开发中，构建工具扮演着至关重要的角色。它们不仅帮助我们管理依赖、打包代码，还极大地影响了开发体验和生产效率。随着前端技术的不断迭代，传统的构建工具如 Webpack、Parcel 等逐渐暴露出一些性能瓶颈和复杂性。而 Vite 的出现，给我们带来了全新的开发体验。Vite 的诞生背景...","url":"https://offernow.cn/docs/doc/💻 编程语言/Vite/rt3fdkpntuuc77y0"}},{"title":"Vite","date":"2024-06-04T05:20:22.000Z","urlname":"fdhn8qt0lpe3ix2h","is_nav":false,"nav_path":"vite","updated":"2024-06-04T14:59:23.000Z","not_show":false,"description":"---nav_path: vite---书籍目录引言：为什么选择 Vite？初识 Vite：安装与配置极速开发：Vite 的开发服务器模块化与 HMR：瞬间热加载构建生产版本：Rollup 的威力插件系统：扩展 Vite 的功能框架支持：与 Vue、React、Svelte 的结合智能依赖预构...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1402,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/fdhn8qt0lpe3ix2h","path":"docs/doc/💻 编程语言/fdhn8qt0lpe3ix2h","filePath":"docs/doc/💻 编程语言/fdhn8qt0lpe3ix2h.md","toc":[{"value":"书籍目录","url":"#书籍目录","depth":1},{"value":"详细内容分点","url":"#详细内容分点","depth":3},{"value":"引言：为什么选择 Vite？","url":"#引言为什么选择-vite","depth":4},{"value":"初识 Vite：安装与配置","url":"#初识-vite安装与配置","depth":4},{"value":"极速开发：Vite 的开发服务器","url":"#极速开发vite-的开发服务器","depth":4},{"value":"模块化与 HMR：瞬间热加载","url":"#模块化与-hmr瞬间热加载","depth":4},{"value":"构建生产版本：Rollup 的威力","url":"#构建生产版本rollup-的威力","depth":4},{"value":"插件系统：扩展 Vite 的功能","url":"#插件系统扩展-vite-的功能","depth":4},{"value":"框架支持：与 Vue、React、Svelte 的结合","url":"#框架支持与-vuereactsvelte-的结合","depth":4},{"value":"智能依赖预构建：提升加载速度","url":"#智能依赖预构建提升加载速度","depth":4},{"value":"Vite 与常规 React 构建工具的对比","url":"#vite-与常规-react-构建工具的对比","depth":4},{"value":"Vite 与 Next.js 的对比","url":"#vite-与-nextjs-的对比","depth":4},{"value":"实战项目：用 Vite 构建一个完整的应用","url":"#实战项目用-vite-构建一个完整的应用","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Vite","datePublished":"2024-06-04T05:20:22.000Z","dateModified":"2024-06-04T14:59:23.000Z","description":"---nav_path: vite---书籍目录引言：为什么选择 Vite？初识 Vite：安装与配置极速开发：Vite 的开发服务器模块化与 HMR：瞬间热加载构建生产版本：Rollup 的威力插件系统：扩展 Vite 的功能框架支持：与 Vue、React、Svelte 的结合智能依赖预构...","url":"https://offernow.cn/docs/doc/💻 编程语言/fdhn8qt0lpe3ix2h"}},{"title":"美团一面","date":"2024-06-04T00:50:15.000Z","urlname":"ui2hbm8gh5o1k1gq","is_nav":false,"updated":"2024-07-30T10:16:45.000Z","not_show":false,"description":"面试内容讲一下多态TCP和UDP的区别为什么是四次挥手linux操作命令git操作命令现在预算有限，请求很少，如果不用epoll你会用什么线程和进程的区别innodb用的什么索引，为什么不用红黑树当索引哪些协议用到了UDP哪些用到了TCP为什么访问寄存器的速度比访问内存的速度更快用count(...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":943,"minutes":3,"text":"3 分钟"},"slug":"doc/💹 大厂面经/面试真题/ui2hbm8gh5o1k1gq","path":"docs/doc/💹 大厂面经/面试真题/ui2hbm8gh5o1k1gq","filePath":"docs/doc/💹 大厂面经/面试真题/ui2hbm8gh5o1k1gq.md","toc":[{"value":"面试内容","url":"#面试内容-1","depth":1},{"value":"参考回答","url":"#参考回答-6","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"美团一面","datePublished":"2024-06-04T00:50:15.000Z","dateModified":"2024-07-30T10:16:45.000Z","description":"面试内容讲一下多态TCP和UDP的区别为什么是四次挥手linux操作命令git操作命令现在预算有限，请求很少，如果不用epoll你会用什么线程和进程的区别innodb用的什么索引，为什么不用红黑树当索引哪些协议用到了UDP哪些用到了TCP为什么访问寄存器的速度比访问内存的速度更快用count(...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/ui2hbm8gh5o1k1gq"}},{"title":"Go 语言的内存模型","date":"2024-06-03T07:26:56.000Z","urlname":"gngndpw23pnmp9ui","is_nav":false,"updated":"2024-06-03T07:31:42.000Z","not_show":false,"description":"在编写高效且健壮的应用程序时，理解编程语言的内存模型至关重要。Go 语言在设计内存模型时，兼顾了简洁性和高性能。本文将详细解释 Go 语言的内存模型，包括堆和栈的区别、逃逸分析（Escape Analysis）以及如何优化。堆和栈的区别在 Go 语言中，内存主要分为两类：栈内存和堆内存。栈内存...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1043,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Go/🎁 最佳实践/gngndpw23pnmp9ui","path":"docs/doc/💻 编程语言/Go/🎁 最佳实践/gngndpw23pnmp9ui","filePath":"docs/doc/💻 编程语言/Go/🎁 最佳实践/gngndpw23pnmp9ui.md","toc":[{"value":"堆和栈的区别","url":"#堆和栈的区别","depth":2},{"value":"栈内存","url":"#栈内存","depth":3},{"value":"堆内存","url":"#堆内存","depth":3},{"value":"逃逸分析（Escape Analysis）","url":"#逃逸分析escape-analysis","depth":2},{"value":"什么是逃逸？","url":"#什么是逃逸","depth":3},{"value":"逃逸分析的过程","url":"#逃逸分析的过程","depth":3},{"value":"示例","url":"#示例-13","depth":3},{"value":"查看逃逸分析结果","url":"#查看逃逸分析结果","depth":3},{"value":"优化内存使用","url":"#优化内存使用","depth":2},{"value":"1. 减少逃逸","url":"#1-减少逃逸","depth":3},{"value":"2. 使用池（sync.Pool）","url":"#2-使用池syncpool","depth":3},{"value":"3. 监控和调优","url":"#3-监控和调优","depth":3},{"value":"","url":"#-21","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Go 语言的内存模型","datePublished":"2024-06-03T07:26:56.000Z","dateModified":"2024-06-03T07:31:42.000Z","description":"在编写高效且健壮的应用程序时，理解编程语言的内存模型至关重要。Go 语言在设计内存模型时，兼顾了简洁性和高性能。本文将详细解释 Go 语言的内存模型，包括堆和栈的区别、逃逸分析（Escape Analysis）以及如何优化。堆和栈的区别在 Go 语言中，内存主要分为两类：栈内存和堆内存。栈内存...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🎁 最佳实践/gngndpw23pnmp9ui"}},{"title":"go replace 指令替换模块版本？","date":"2024-06-03T07:26:18.000Z","urlname":"iqh4l9x2txk58kss","is_nav":false,"updated":"2024-06-03T07:26:56.000Z","not_show":false,"description":"在开发 Go 应用时，你可能会遇到需要替换某个依赖模块的版本或路径的情况。无论是为了修复 bug、调试代码还是使用本地开发版本，Go 的 replace 指令都能为你提供灵活而强大的解决方案。本文将详细介绍 replace 指令的使用方法，帮助你在项目中高效管理依赖关系。什么是 replace...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":934,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Go/🎁 最佳实践/iqh4l9x2txk58kss","path":"docs/doc/💻 编程语言/Go/🎁 最佳实践/iqh4l9x2txk58kss","filePath":"docs/doc/💻 编程语言/Go/🎁 最佳实践/iqh4l9x2txk58kss.md","toc":[{"value":"什么是 replace 指令？","url":"#什么是-replace-指令","depth":2},{"value":"基本语法","url":"#基本语法-5","depth":2},{"value":"使用场景","url":"#使用场景-3","depth":2},{"value":"1. 修复依赖模块的 Bug","url":"#1-修复依赖模块的-bug","depth":3},{"value":"2. 使用本地开发版本","url":"#2-使用本地开发版本","depth":3},{"value":"3. 替换模块路径","url":"#3-替换模块路径","depth":3},{"value":"示例解析","url":"#示例解析","depth":2},{"value":"常见问题","url":"#常见问题","depth":2},{"value":"如何查看 replace 指令的效果？","url":"#如何查看-replace-指令的效果","depth":3},{"value":"replace 指令会影响到依赖的子模块吗？","url":"#replace-指令会影响到依赖的子模块吗","depth":3},{"value":"replace 指令会影响到生产环境吗？","url":"#replace-指令会影响到生产环境吗","depth":3},{"value":"结论","url":"#结论-18","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"go replace 指令替换模块版本？","datePublished":"2024-06-03T07:26:18.000Z","dateModified":"2024-06-03T07:26:56.000Z","description":"在开发 Go 应用时，你可能会遇到需要替换某个依赖模块的版本或路径的情况。无论是为了修复 bug、调试代码还是使用本地开发版本，Go 的 replace 指令都能为你提供灵活而强大的解决方案。本文将详细介绍 replace 指令的使用方法，帮助你在项目中高效管理依赖关系。什么是 replace...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🎁 最佳实践/iqh4l9x2txk58kss"}},{"title":"go.mod 详解","date":"2024-06-03T06:15:40.000Z","urlname":"mgkiu0x8upweqrsb","is_nav":false,"updated":"2024-06-03T06:16:01.000Z","not_show":false,"description":"go.mod 文件是 Go 语言的模块化管理系统中的核心文件之一。它用于定义和管理 Go 项目的模块依赖关系。这个文件包含了模块的基本信息、依赖项、版本约束等，确保项目的依赖关系在不同环境中保持一致。下面详细解析 go.mod 文件的各个组成部分及其作用。1. module 声明module ...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":653,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/Go/🎁 最佳实践/mgkiu0x8upweqrsb","path":"docs/doc/💻 编程语言/Go/🎁 最佳实践/mgkiu0x8upweqrsb","filePath":"docs/doc/💻 编程语言/Go/🎁 最佳实践/mgkiu0x8upweqrsb.md","toc":[{"value":"1. module 声明","url":"#1-module-声明","depth":3},{"value":"2. go 版本","url":"#2-go-版本","depth":3},{"value":"3. require 指令","url":"#3-require-指令","depth":3},{"value":"4. replace 指令","url":"#4-replace-指令","depth":3},{"value":"5. exclude 指令","url":"#5-exclude-指令","depth":3},{"value":"6. require 和 replace 的实际应用示例","url":"#6-require-和-replace-的实际应用示例","depth":3},{"value":"7. indirect 依赖","url":"#7-indirect-依赖","depth":3},{"value":"8. go.sum 文件","url":"#8-gosum-文件","depth":3},{"value":"9. 常见操作命令","url":"#9-常见操作命令","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"go.mod 详解","datePublished":"2024-06-03T06:15:40.000Z","dateModified":"2024-06-03T06:16:01.000Z","description":"go.mod 文件是 Go 语言的模块化管理系统中的核心文件之一。它用于定义和管理 Go 项目的模块依赖关系。这个文件包含了模块的基本信息、依赖项、版本约束等，确保项目的依赖关系在不同环境中保持一致。下面详细解析 go.mod 文件的各个组成部分及其作用。1. module 声明module ...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🎁 最佳实践/mgkiu0x8upweqrsb"}},{"title":"go.sum 和go.mod是什么关系？","date":"2024-06-03T06:13:46.000Z","urlname":"doxxm5gbxqmp037q","is_nav":false,"updated":"2024-06-03T06:14:37.000Z","not_show":false,"description":"go.sum 和go.mod是什么关系？go.mod 和 go.sum 文件是 Go 模块系统中两个非常重要的文件，它们共同维持了项目依赖管理的完整性和一致性。以下是它们的关系及各自的功能详细解释：go.mod 文件go.mod 文件是一个模块管理文件，它定义了项目的模块名称和所有的依赖项。具...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":704,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/Go/🎁 最佳实践/doxxm5gbxqmp037q","path":"docs/doc/💻 编程语言/Go/🎁 最佳实践/doxxm5gbxqmp037q","filePath":"docs/doc/💻 编程语言/Go/🎁 最佳实践/doxxm5gbxqmp037q.md","toc":[{"value":"go.mod 文件","url":"#gomod-文件","depth":3},{"value":"示例","url":"#示例-10","depth":4},{"value":"go.sum 文件","url":"#gosum-文件","depth":3},{"value":"示例","url":"#示例-11","depth":4},{"value":"两者的关系","url":"#两者的关系","depth":3},{"value":"总结","url":"#总结-24","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"go.sum 和go.mod是什么关系？","datePublished":"2024-06-03T06:13:46.000Z","dateModified":"2024-06-03T06:14:37.000Z","description":"go.sum 和go.mod是什么关系？go.mod 和 go.sum 文件是 Go 模块系统中两个非常重要的文件，它们共同维持了项目依赖管理的完整性和一致性。以下是它们的关系及各自的功能详细解释：go.mod 文件go.mod 文件是一个模块管理文件，它定义了项目的模块名称和所有的依赖项。具...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🎁 最佳实践/doxxm5gbxqmp037q"}},{"title":"go mod tidy的原理是什么？","date":"2024-06-03T06:12:00.000Z","urlname":"fwg60cskvnfowboi","is_nav":false,"updated":"2024-06-03T06:16:12.000Z","not_show":false,"description":"go mod tidy 是 Go 语言的一项工具，用于管理和清理 go.mod 文件以及相关的依赖项。它的主要作用是移除未使用的依赖项，并下载缺失的依赖项以确保项目的模块依赖配置是最新且最简洁的。以下是其工作原理的详细解释：1. 更新依赖信息go mod tidy 会检查 go.mod 文件和...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":517,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/Go/🎁 最佳实践/fwg60cskvnfowboi","path":"docs/doc/💻 编程语言/Go/🎁 最佳实践/fwg60cskvnfowboi","filePath":"docs/doc/💻 编程语言/Go/🎁 最佳实践/fwg60cskvnfowboi.md","toc":[{"value":"1. 更新依赖信息","url":"#1-更新依赖信息","depth":3},{"value":"2. 移除未使用的依赖项","url":"#2-移除未使用的依赖项","depth":3},{"value":"3. 下载缺失的模块","url":"#3-下载缺失的模块","depth":3},{"value":"4. 更新 go.sum 文件","url":"#4-更新-gosum-文件","depth":3},{"value":"常见用法","url":"#常见用法","depth":3},{"value":"示例","url":"#示例-12","depth":3},{"value":"结论","url":"#结论-17","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"go mod tidy的原理是什么？","datePublished":"2024-06-03T06:12:00.000Z","dateModified":"2024-06-03T06:16:12.000Z","description":"go mod tidy 是 Go 语言的一项工具，用于管理和清理 go.mod 文件以及相关的依赖项。它的主要作用是移除未使用的依赖项，并下载缺失的依赖项以确保项目的模块依赖配置是最新且最简洁的。以下是其工作原理的详细解释：1. 更新依赖信息go mod tidy 会检查 go.mod 文件和...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🎁 最佳实践/fwg60cskvnfowboi"}},{"title":"基于C++的高并发服务器","date":"2024-06-02T16:16:46.000Z","urlname":"rmu0b4pf9g9f2y87","is_nav":false,"updated":"2024-06-21T09:08:24.000Z","not_show":false,"description":"TinyWebServer 是一个基于 C++ 的高并发 Web 服务器项目，旨在帮助初学者快速掌握网络编程并搭建属于自己的服务器。项目采用线程池、非阻塞 socket、epoll 以及 Reactor 和 Proactor 模式进行事件处理，并支持同步/异步日志系统。通过 Webbench 压力测试，TinyWebServer 可以实现上万的并发连接数据交换。","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1716527116265-facee58e-37f6-42ad-bd7e-65dfac72b542.png","tags":[],"keywords":"高并发服务器, C++ Web服务器, TinyWebServer, 网络编程, 线程池, epoll","authors":["whitedew"],"type":"Post","readingTime":{"words":12768,"minutes":43,"text":"43 分钟"},"slug":"doc/🧰 实践项目/TinyWebServer/rmu0b4pf9g9f2y87","path":"docs/doc/🧰 实践项目/TinyWebServer/rmu0b4pf9g9f2y87","filePath":"docs/doc/🧰 实践项目/TinyWebServer/rmu0b4pf9g9f2y87.md","toc":[{"value":"前言","url":"#前言-7","depth":1},{"value":"一、Web基础知识","url":"#一web基础知识-1","depth":1},{"value":"什么是web sever？","url":"#什么是web-sever-1","depth":2},{"value":"什么是socket？","url":"#什么是socket-1","depth":2},{"value":"IO复用是什么？","url":"#io复用是什么-1","depth":2},{"value":"什么是多线程？","url":"#什么是多线程-1","depth":2},{"value":"二、项目学习","url":"#二项目学习-1","depth":1},{"value":"代码架构","url":"#代码架构-1","depth":2},{"value":"编译运行","url":"#编译运行-1","depth":2},{"value":"功能细究","url":"#功能细究-1","depth":2},{"value":"三、拔萝带泥——HTTP","url":"#三拔萝带泥http-1","depth":1},{"value":"Epoll","url":"#epoll-2","depth":2},{"value":"常用函数","url":"#常用函数-2","depth":3},{"value":"典例","url":"#典例-1","depth":3},{"value":"HTTP","url":"#http-1","depth":2},{"value":"HTTP介绍","url":"#http介绍-1","depth":3},{"value":"HTTP处理流程","url":"#http处理流程-1","depth":3},{"value":"连接处理","url":"#连接处理-1","depth":4},{"value":"请求报文处理","url":"#请求报文处理-1","depth":4},{"value":"返回响应报文","url":"#返回响应报文-1","depth":4},{"value":"四、线程池","url":"#四线程池-1","depth":1},{"value":"定义","url":"#定义-1","depth":2},{"value":"线程池创建","url":"#线程池创建-1","depth":2},{"value":"加入请求队列","url":"#加入请求队列-1","depth":2},{"value":"线程处理","url":"#线程处理-1","depth":2},{"value":"五、定时器","url":"#五定时器-1","depth":1},{"value":"原理解析","url":"#原理解析-1","depth":2},{"value":"代码与框图","url":"#代码与框图-1","depth":2},{"value":"六、日志系统","url":"#六日志系统-1","depth":1},{"value":"七、其他","url":"#七其他-1","depth":1},{"value":"数据库连接池","url":"#数据库连接池-1","depth":2},{"value":"封装同步类","url":"#封装同步类-1","depth":2},{"value":"压力测试","url":"#压力测试-1","depth":2},{"value":"优雅关闭连接","url":"#优雅关闭连接-1","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"基于C++的高并发服务器","datePublished":"2024-06-02T16:16:46.000Z","dateModified":"2024-06-21T09:08:24.000Z","description":"TinyWebServer 是一个基于 C++ 的高并发 Web 服务器项目，旨在帮助初学者快速掌握网络编程并搭建属于自己的服务器。项目采用线程池、非阻塞 socket、epoll 以及 Reactor 和 Proactor 模式进行事件处理，并支持同步/异步日志系统。通过 Webbench 压力测试，TinyWebServer 可以实现上万的并发连接数据交换。","url":"https://offernow.cn/docs/doc/🧰 实践项目/TinyWebServer/rmu0b4pf9g9f2y87"}},{"title":"5、中间代码生成","date":"2024-05-31T03:12:29.000Z","urlname":"kickx6z0136dvoad","is_nav":false,"updated":"2024-06-27T13:21:00.000Z","not_show":false,"description":"keywords: 中间代码生成, 编译过程, 三地址码, 四元式, 静态单赋值5.1 中间代码生成的概述中间代码生成（Intermediate Code Generation）是编译过程中的第四个阶段。中间代码是一种介于高级语言和机器语言之间的表示形式，通常是独立于具体机器的。中间代码便于优...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/23fc7f806cbf4db23183045953a076fc.svg","tags":[],"keywords":"中间代码生成, 编译过程, 三地址码, 四元式, 静态单赋值","authors":["whitedew"],"type":"Post","readingTime":{"words":1902,"minutes":6,"text":"6 分钟"},"slug":"doc/📚 计算机基础/编译原理/kickx6z0136dvoad","path":"docs/doc/📚 计算机基础/编译原理/kickx6z0136dvoad","filePath":"docs/doc/📚 计算机基础/编译原理/kickx6z0136dvoad.md","toc":[{"value":"5.1 中间代码生成的概述","url":"#51-中间代码生成的概述","depth":2},{"value":"5.1.1 中间代码的功能","url":"#511-中间代码的功能","depth":3},{"value":"5.1.2 中间代码的表示形式","url":"#512-中间代码的表示形式","depth":3},{"value":"示例：三地址码表示形式","url":"#示例三地址码表示形式","depth":3},{"value":"示例：四元式表示形式","url":"#示例四元式表示形式","depth":3},{"value":"5.2 三地址码","url":"#52-三地址码","depth":2},{"value":"5.2.1 三地址码的基本形式","url":"#521-三地址码的基本形式","depth":3},{"value":"示例：三地址码表示形式","url":"#示例三地址码表示形式-1","depth":3},{"value":"示例：三地址码生成代码（使用 TypeScript）","url":"#示例三地址码生成代码使用-typescript","depth":3},{"value":"5.3 静态单赋值（SSA）形式","url":"#53-静态单赋值ssa形式","depth":2},{"value":"5.3.1 SSA 形式的基本特征","url":"#531-ssa-形式的基本特征","depth":3},{"value":"示例：SSA 形式表示","url":"#示例ssa-形式表示","depth":3},{"value":"5.4 四元式","url":"#54-四元式","depth":2},{"value":"5.4.1 四元式的基本形式","url":"#541-四元式的基本形式","depth":3},{"value":"5.4 四元式","url":"#54-四元式-1","depth":2},{"value":"5.4.1 四元式的基本形式","url":"#541-四元式的基本形式-1","depth":3},{"value":"示例：四元式表示","url":"#示例四元式表示","depth":3},{"value":"示例：四元式生成代码（使用 TypeScript）","url":"#示例四元式生成代码使用-typescript","depth":3},{"value":"5.5 中间代码生成的策略","url":"#55-中间代码生成的策略","depth":2},{"value":"5.5.1 表达式的中间代码生成","url":"#551-表达式的中间代码生成","depth":3},{"value":"示例：表达式的中间代码生成（使用 TypeScript）","url":"#示例表达式的中间代码生成使用-typescript","depth":3},{"value":"5.5.2 控制流语句的中间代码生成","url":"#552-控制流语句的中间代码生成","depth":3},{"value":"示例：控制流语句的中间代码生成（使用 TypeScript）","url":"#示例控制流语句的中间代码生成使用-typescript","depth":3},{"value":"关键要点","url":"#关键要点","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5、中间代码生成","datePublished":"2024-05-31T03:12:29.000Z","dateModified":"2024-06-27T13:21:00.000Z","description":"keywords: 中间代码生成, 编译过程, 三地址码, 四元式, 静态单赋值5.1 中间代码生成的概述中间代码生成（Intermediate Code Generation）是编译过程中的第四个阶段。中间代码是一种介于高级语言和机器语言之间的表示形式，通常是独立于具体机器的。中间代码便于优...","url":"https://offernow.cn/docs/doc/📚 计算机基础/编译原理/kickx6z0136dvoad"}},{"title":"个人建站 🤖","date":"2024-05-30T15:28:31.000Z","urlname":"ogfvsltzo95v0k88","is_nav":true,"nav_path":"own_web","updated":"2024-09-28T04:13:56.000Z","not_show":false,"description":"---is_nav: truenav_path: own_web---分享我在个人建站、网站开发方面遇到的一些问题、解决方法以及经验~在互联网的广袤世界里，拥有一个属于自己的网站就如同拥有一片独特的天地。“个人建站”栏目应运而生，旨在为你分享在个人建站和网站开发旅程中的点点滴滴，包括那些遇到的...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1491,"minutes":5,"text":"5 分钟"},"slug":"doc/🔥 程序员自我修养/ogfvsltzo95v0k88","path":"docs/doc/🔥 程序员自我修养/ogfvsltzo95v0k88","filePath":"docs/doc/🔥 程序员自我修养/ogfvsltzo95v0k88.md","toc":[{"value":"一、问题聚焦","url":"#一问题聚焦","depth":2},{"value":"二、解决方法与经验分享","url":"#二解决方法与经验分享","depth":2},{"value":"三、学习与交流","url":"#三学习与交流","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"个人建站 🤖","datePublished":"2024-05-30T15:28:31.000Z","dateModified":"2024-09-28T04:13:56.000Z","description":"---is_nav: truenav_path: own_web---分享我在个人建站、网站开发方面遇到的一些问题、解决方法以及经验~在互联网的广袤世界里，拥有一个属于自己的网站就如同拥有一片独特的天地。“个人建站”栏目应运而生，旨在为你分享在个人建站和网站开发旅程中的点点滴滴，包括那些遇到的...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/ogfvsltzo95v0k88"}},{"title":"腾讯云后端开发面试","date":"2024-05-30T14:28:24.000Z","urlname":"qf9b99e3kvichnqb","is_nav":false,"updated":"2024-06-04T00:28:47.000Z","not_show":false,"description":"2024年5月13日 21：00-22：001、线程池 七个参数 如果任务队列无界的话 则最大线程数还用得到吗2、Java内存模型2、类加载过程（双亲委派机制）3、新生代（Ed、FS、TS）、老生代（垃圾回收：CMS）4、mysql的存储引擎 （innodb）5、mysql 的主键索引 和 唯...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":177,"minutes":1,"text":"1 分钟"},"slug":"doc/💹 大厂面经/面试真题/qf9b99e3kvichnqb","path":"docs/doc/💹 大厂面经/面试真题/qf9b99e3kvichnqb","filePath":"docs/doc/💹 大厂面经/面试真题/qf9b99e3kvichnqb.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"腾讯云后端开发面试","datePublished":"2024-05-30T14:28:24.000Z","dateModified":"2024-06-04T00:28:47.000Z","description":"2024年5月13日 21：00-22：001、线程池 七个参数 如果任务队列无界的话 则最大线程数还用得到吗2、Java内存模型2、类加载过程（双亲委派机制）3、新生代（Ed、FS、TS）、老生代（垃圾回收：CMS）4、mysql的存储引擎 （innodb）5、mysql 的主键索引 和 唯...","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/qf9b99e3kvichnqb"}},{"title":"华为面试:一二面+主管面","date":"2024-05-30T14:12:36.000Z","urlname":"miulkagslv94qv43","is_nav":false,"updated":"2024-05-30T14:13:44.000Z","not_show":false,"description":"一面1.介绍项目2.并发访问数据库，如何保证访问安全？3.关系数据库和非关系数据库的区别？4.多线程和单线程的区别？算法:1.多条公交线，从某一站到另一站（两站可能不在同一号线），最少换线次数？2.一个字符串中，取长度为k的子串，找子串中a.b.c的个数最多的字符串？二面1.介绍项目2.说一下...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":169,"minutes":1,"text":"1 分钟"},"slug":"doc/💹 大厂面经/面试真题/miulkagslv94qv43","path":"docs/doc/💹 大厂面经/面试真题/miulkagslv94qv43","filePath":"docs/doc/💹 大厂面经/面试真题/miulkagslv94qv43.md","toc":[{"value":"一面","url":"#一面-2","depth":1},{"value":"二面","url":"#二面-2","depth":1},{"value":"主管面","url":"#主管面","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"华为面试:一二面+主管面","datePublished":"2024-05-30T14:12:36.000Z","dateModified":"2024-05-30T14:13:44.000Z","description":"一面1.介绍项目2.并发访问数据库，如何保证访问安全？3.关系数据库和非关系数据库的区别？4.多线程和单线程的区别？算法:1.多条公交线，从某一站到另一站（两站可能不在同一号线），最少换线次数？2.一个字符串中，取长度为k的子串，找子串中a.b.c的个数最多的字符串？二面1.介绍项目2.说一下...","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/miulkagslv94qv43"}},{"title":"天翼安全开发面经","date":"2024-05-30T14:09:06.000Z","urlname":"gfx8zh5b888g92m8","is_nav":false,"updated":"2024-05-30T14:09:34.000Z","not_show":false,"description":"1.JVM运行机制以及区域2.类的加载机制以及有哪些种类3.对hashmap的了解 以及1.7 1.8的区别4.了解hashmap的扩容机制吗 展开说说5.volatile用过吗 是干啥的6.线程池详细讲解一下7.threadlocal讲解一下8.mybatis中$和#的区别9.redis的持...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":108,"minutes":0,"text":"小于一分钟"},"slug":"doc/💹 大厂面经/面试真题/gfx8zh5b888g92m8","path":"docs/doc/💹 大厂面经/面试真题/gfx8zh5b888g92m8","filePath":"docs/doc/💹 大厂面经/面试真题/gfx8zh5b888g92m8.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"天翼安全开发面经","datePublished":"2024-05-30T14:09:06.000Z","dateModified":"2024-05-30T14:09:34.000Z","description":"1.JVM运行机制以及区域2.类的加载机制以及有哪些种类3.对hashmap的了解 以及1.7 1.8的区别4.了解hashmap的扩容机制吗 展开说说5.volatile用过吗 是干啥的6.线程池详细讲解一下7.threadlocal讲解一下8.mybatis中$和#的区别9.redis的持...","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/gfx8zh5b888g92m8"}},{"title":"Artalk-CORS，跨域拦截问题","date":"2024-05-30T01:17:50.000Z","urlname":"be5t885bk7x8paug","is_nav":false,"updated":"2024-05-30T01:19:28.000Z","not_show":false,"description":"今天重新部署Artalk之后，遇到了CORS——跨域拦截的问题，卡了好一会记录一下。起因重新部署之后，浏览器一直提示CORS，之前在其他项目也遇到过类似的问题，原因就在于跨域问题。","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1717031938765-8b84abf0-17db-4607-b29a-48aa1918ef60.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":81,"minutes":0,"text":"小于一分钟"},"slug":"doc/🔥 程序员自我修养/最强后端🐚/be5t885bk7x8paug","path":"docs/doc/🔥 程序员自我修养/最强后端🐚/be5t885bk7x8paug","filePath":"docs/doc/🔥 程序员自我修养/最强后端🐚/be5t885bk7x8paug.md","toc":[{"value":"起因","url":"#起因","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Artalk-CORS，跨域拦截问题","datePublished":"2024-05-30T01:17:50.000Z","dateModified":"2024-05-30T01:19:28.000Z","description":"今天重新部署Artalk之后，遇到了CORS——跨域拦截的问题，卡了好一会记录一下。起因重新部署之后，浏览器一直提示CORS，之前在其他项目也遇到过类似的问题，原因就在于跨域问题。","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强后端🐚/be5t885bk7x8paug"}},{"title":"GitHub Actions 怎么开启工作流程(workflow)邮件通知？","date":"2024-05-29T15:31:53.000Z","urlname":"lthz7palxgytu0f2","is_nav":false,"updated":"2024-06-13T13:50:39.000Z","not_show":false,"description":"我们的网站使用Github Action部署的，但是有的时候会因为各种问题编译出错。然而，默认Workflow是不会发送通知，这就造成每次都得Github看一眼，才知道，那么，可以让Workflow自动发送运行状态的通知吗？比如说邮件。参考：https://github.com/dext7r/...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":91,"minutes":0,"text":"小于一分钟"},"slug":"doc/🔥 程序员自我修养/十万个为什么💡/lthz7palxgytu0f2","path":"docs/doc/🔥 程序员自我修养/十万个为什么💡/lthz7palxgytu0f2","filePath":"docs/doc/🔥 程序员自我修养/十万个为什么💡/lthz7palxgytu0f2.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"GitHub Actions 怎么开启工作流程(workflow)邮件通知？","datePublished":"2024-05-29T15:31:53.000Z","dateModified":"2024-06-13T13:50:39.000Z","description":"我们的网站使用Github Action部署的，但是有的时候会因为各种问题编译出错。然而，默认Workflow是不会发送通知，这就造成每次都得Github看一眼，才知道，那么，可以让Workflow自动发送运行状态的通知吗？比如说邮件。参考：https://github.com/dext7r/...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/十万个为什么💡/lthz7palxgytu0f2"}},{"title":"小鹅通后端开发面经","date":"2024-05-28T12:57:54.000Z","urlname":"glv9lipwvttdu4zz","is_nav":false,"updated":"2024-05-28T12:58:49.000Z","not_show":false,"description":"一面（30min）一面主要拷打八股，问的不是很深，但是很广没录音只有记得多少写多少1，自我介绍2，聊专业学的是什么，感觉会用到 python？（我说专业课很多确实是需要用 python 做些机器学习和数据处理的东西）3，谈一谈 python 和 golang 的区别4，为什么说 python ...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":517,"minutes":2,"text":"2 分钟"},"slug":"doc/💹 大厂面经/面试真题/glv9lipwvttdu4zz","path":"docs/doc/💹 大厂面经/面试真题/glv9lipwvttdu4zz","filePath":"docs/doc/💹 大厂面经/面试真题/glv9lipwvttdu4zz.md","toc":[{"value":"一面（30min）","url":"#一面30min","depth":2},{"value":"二面（30min）","url":"#二面30min","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"小鹅通后端开发面经","datePublished":"2024-05-28T12:57:54.000Z","dateModified":"2024-05-28T12:58:49.000Z","description":"一面（30min）一面主要拷打八股，问的不是很深，但是很广没录音只有记得多少写多少1，自我介绍2，聊专业学的是什么，感觉会用到 python？（我说专业课很多确实是需要用 python 做些机器学习和数据处理的东西）3，谈一谈 python 和 golang 的区别4，为什么说 python ...","url":"https://offernow.cn/docs/doc/💹 大厂面经/面试真题/glv9lipwvttdu4zz"}},{"title":"面试真题","date":"2024-05-28T12:57:41.000Z","urlname":"vxn8883st7lhfom9","is_nav":true,"nav_path":"real_interview\r","updated":"2024-07-17T15:20:58.000Z","not_show":false,"description":"---is_nav: truenav_path: real_interview---今天和大家分享一个超级实用的资源——网站面试真题栏目，针对求职过程中最重要的环节之一：面试。无论你是初入职场的“小白”，还是正在寻找更高层次职位的职场老兵，这里都有你需要的干货与秘诀。什么是面试真题栏目？面试真...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":730,"minutes":2,"text":"2 分钟"},"slug":"doc/💹 大厂面经/vxn8883st7lhfom9","path":"docs/doc/💹 大厂面经/vxn8883st7lhfom9","filePath":"docs/doc/💹 大厂面经/vxn8883st7lhfom9.md","toc":[{"value":"什么是面试真题栏目？","url":"#什么是面试真题栏目","depth":3},{"value":"为什么选择面试真题栏目？","url":"#为什么选择面试真题栏目","depth":3},{"value":"如何利用面试真题栏目？","url":"#如何利用面试真题栏目","depth":3},{"value":"我的建议","url":"#我的建议","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"面试真题","datePublished":"2024-05-28T12:57:41.000Z","dateModified":"2024-07-17T15:20:58.000Z","description":"---is_nav: truenav_path: real_interview---今天和大家分享一个超级实用的资源——网站面试真题栏目，针对求职过程中最重要的环节之一：面试。无论你是初入职场的“小白”，还是正在寻找更高层次职位的职场老兵，这里都有你需要的干货与秘诀。什么是面试真题栏目？面试真...","url":"https://offernow.cn/docs/doc/💹 大厂面经/vxn8883st7lhfom9"}},{"title":"4、语义分析","date":"2024-05-28T11:36:22.000Z","urlname":"tb9loaz638yp9hqh","is_nav":false,"updated":"2024-06-27T13:17:33.000Z","not_show":false,"description":"---keywords: 语义分析，编译过程，符号表管理，类型检查，作用域解析---语义分析（Semantic Analysis）是编译过程中的第三个阶段。语义分析器的任务是检查源代码的语义是否正确。例如，类型检查、作用域解析等。语义分析器通常会构建和维护符号表，并进行各种语义检查，以确保程序...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/910451a895a1991e5d1b0eeb920cce06.svg","tags":[],"keywords":"语义分析，编译过程，符号表管理，类型检查，作用域解析","authors":["whitedew"],"type":"Post","readingTime":{"words":2543,"minutes":8,"text":"8 分钟"},"slug":"doc/📚 计算机基础/编译原理/tb9loaz638yp9hqh","path":"docs/doc/📚 计算机基础/编译原理/tb9loaz638yp9hqh","filePath":"docs/doc/📚 计算机基础/编译原理/tb9loaz638yp9hqh.md","toc":[{"value":"4.1.1 语义分析的功能","url":"#411-语义分析的功能","depth":3},{"value":"4.1.2 语义分析器的输入和输出","url":"#412-语义分析器的输入和输出","depth":3},{"value":"4.2 符号表管理","url":"#42-符号表管理","depth":2},{"value":"4.2.1 符号表的基本操作","url":"#421-符号表的基本操作","depth":3},{"value":"示例：符号表的数据结构（使用 TypeScript）","url":"#示例符号表的数据结构使用-typescript","depth":3},{"value":"符号表管理示意图","url":"#符号表管理示意图","depth":3},{"value":"4.3 类型检查","url":"#43-类型检查","depth":2},{"value":"4.3.1 类型检查的基本操作","url":"#431-类型检查的基本操作","depth":3},{"value":"示例：类型检查（使用 Java）","url":"#示例类型检查使用-java","depth":3},{"value":"类型检查流程示意图","url":"#类型检查流程示意图","depth":3},{"value":"4.4 作用域与命名空间","url":"#44-作用域与命名空间","depth":2},{"value":"4.4.1 作用域的种类","url":"#441-作用域的种类","depth":3},{"value":"4.4.2 命名空间的管理","url":"#442-命名空间的管理","depth":3},{"value":"示例：作用域和命名空间管理（使用 Python）","url":"#示例作用域和命名空间管理使用-python","depth":3},{"value":"作用域和命名空间管理示意图","url":"#作用域和命名空间管理示意图","depth":3},{"value":"4.5 语义规则的检查","url":"#45-语义规则的检查","depth":2},{"value":"4.5.1 常见的语义规则","url":"#451-常见的语义规则","depth":3},{"value":"示例：语义规则检查（使用 JavaScript）","url":"#示例语义规则检查使用-javascript","depth":3},{"value":"示例：语义检查代码","url":"#示例语义检查代码","depth":3},{"value":"4.6 作用域和命名空间解析","url":"#46-作用域和命名空间解析","depth":2},{"value":"示例：作用域管理代码（使用 Python）","url":"#示例作用域管理代码使用-python","depth":3},{"value":"4.7 语义分析器的实现","url":"#47-语义分析器的实现","depth":2},{"value":"示例：语义分析器集成代码（使用 Java）","url":"#示例语义分析器集成代码使用-java","depth":3},{"value":"4.8 语义分析中的错误处理","url":"#48-语义分析中的错误处理","depth":2},{"value":"示例：错误处理代码（使用 JavaScript）","url":"#示例错误处理代码使用-javascript","depth":3},{"value":"4.9 语义分析的性能优化","url":"#49-语义分析的性能优化","depth":2},{"value":"关键要点","url":"#关键要点-2","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4、语义分析","datePublished":"2024-05-28T11:36:22.000Z","dateModified":"2024-06-27T13:17:33.000Z","description":"---keywords: 语义分析，编译过程，符号表管理，类型检查，作用域解析---语义分析（Semantic Analysis）是编译过程中的第三个阶段。语义分析器的任务是检查源代码的语义是否正确。例如，类型检查、作用域解析等。语义分析器通常会构建和维护符号表，并进行各种语义检查，以确保程序...","url":"https://offernow.cn/docs/doc/📚 计算机基础/编译原理/tb9loaz638yp9hqh"}},{"title":"3、编译语法分析","date":"2024-05-28T10:59:35.000Z","urlname":"oo2c6vylgrygmfaa","is_nav":false,"updated":"2024-06-27T13:18:47.000Z","not_show":false,"description":"编译过程中的语法分析概念，涵盖了语法树与抽象语法树的构建、自顶向下和自底向上的语法分析方法、语法错误处理策略以及性能优化技术，是编译器设计的重要参考资料。","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/f26cb428fabdb38140beef4650dc7a4b.svg","tags":[],"keywords":"编译语法分析, 语法树, 抽象语法树, 自顶向下分析, 自底向上分析, 上下文无关文法","authors":["whitedew"],"type":"Post","readingTime":{"words":2867,"minutes":10,"text":"10 分钟"},"slug":"doc/📚 计算机基础/编译原理/oo2c6vylgrygmfaa","path":"docs/doc/📚 计算机基础/编译原理/oo2c6vylgrygmfaa","filePath":"docs/doc/📚 计算机基础/编译原理/oo2c6vylgrygmfaa.md","toc":[{"value":"3.1.1 语法分析的功能","url":"#311-语法分析的功能","depth":3},{"value":"3.1.2 语法分析器的输入和输出","url":"#312-语法分析器的输入和输出","depth":3},{"value":"3.2 上下文无关文法","url":"#32-上下文无关文法","depth":2},{"value":"3.2.1 文法的组成部分","url":"#321-文法的组成部分","depth":3},{"value":"3.2.2 示例文法","url":"#322-示例文法","depth":3},{"value":"上下文无关文法示意图","url":"#上下文无关文法示意图","depth":3},{"value":"3.3 语法分析树与抽象语法树","url":"#33-语法分析树与抽象语法树","depth":2},{"value":"3.3.1 语法分析树","url":"#331-语法分析树","depth":3},{"value":"3.3.2 抽象语法树","url":"#332-抽象语法树","depth":3},{"value":"语法分析树与抽象语法树示意图","url":"#语法分析树与抽象语法树示意图","depth":3},{"value":"语法分析树","url":"#语法分析树","depth":4},{"value":"抽象语法树","url":"#抽象语法树","depth":4},{"value":"3.4 自顶向下语法分析","url":"#34-自顶向下语法分析","depth":2},{"value":"3.4.1 递归下降分析","url":"#341-递归下降分析","depth":3},{"value":"示例：递归下降分析","url":"#示例递归下降分析","depth":3},{"value":"3.4.2 预测分析","url":"#342-预测分析","depth":3},{"value":"自顶向下语法分析示意图","url":"#自顶向下语法分析示意图","depth":3},{"value":"3.5 自底向上语法分析","url":"#35-自底向上语法分析","depth":2},{"value":"3.5.1 自底向上分析的基本思想","url":"#351-自底向上分析的基本思想","depth":3},{"value":"3.5.2 LR 分析","url":"#352-lr-分析","depth":3},{"value":"3.5.3 LR 分析表的构造","url":"#353-lr-分析表的构造","depth":3},{"value":"自底向上语法分析示意图","url":"#自底向上语法分析示意图","depth":3},{"value":"示例：LR 分析器的工作过程","url":"#示例lr-分析器的工作过程","depth":3},{"value":"3.6 语法分析中的错误处理","url":"#36-语法分析中的错误处理","depth":2},{"value":"3.6.1 常见语法错误类型","url":"#361-常见语法错误类型","depth":3},{"value":"3.6.2 错误处理策略","url":"#362-错误处理策略","depth":3},{"value":"语法分析中的错误处理流程","url":"#语法分析中的错误处理流程","depth":3},{"value":"3.7 语法分析工具","url":"#37-语法分析工具","depth":2},{"value":"3.7.1 Yacc 和 Bison","url":"#371-yacc-和-bison","depth":3},{"value":"示例：使用 Bison 生成语法分析器","url":"#示例使用-bison-生成语法分析器","depth":3},{"value":"使用 Bison 生成语法分析器的步骤","url":"#使用-bison-生成语法分析器的步骤","depth":3},{"value":"3.8 语法分析的性能优化","url":"#38-语法分析的性能优化","depth":2},{"value":"3.8.1 使用 LR 分析","url":"#381-使用-lr-分析","depth":3},{"value":"3.8.2 简化文法","url":"#382-简化文法","depth":3},{"value":"3.8.3 预测分析表优化","url":"#383-预测分析表优化","depth":3},{"value":"语法分析的性能优化流程","url":"#语法分析的性能优化流程","depth":3},{"value":"3.9 语法分析器的调试与测试","url":"#39-语法分析器的调试与测试","depth":2},{"value":"3.9.1 调试语法分析器","url":"#391-调试语法分析器","depth":3},{"value":"3.9.2 测试语法分析器","url":"#392-测试语法分析器","depth":3},{"value":"语法分析器的调试与测试流程","url":"#语法分析器的调试与测试流程","depth":3},{"value":"关键要点","url":"#关键要点-1","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"3、编译语法分析","datePublished":"2024-05-28T10:59:35.000Z","dateModified":"2024-06-27T13:18:47.000Z","description":"编译过程中的语法分析概念，涵盖了语法树与抽象语法树的构建、自顶向下和自底向上的语法分析方法、语法错误处理策略以及性能优化技术，是编译器设计的重要参考资料。","url":"https://offernow.cn/docs/doc/📚 计算机基础/编译原理/oo2c6vylgrygmfaa"}},{"title":"2、编译器的词法分析","date":"2024-05-28T09:55:59.000Z","urlname":"ovzvcms97euksuig","is_nav":false,"updated":"2024-06-27T13:08:09.000Z","not_show":false,"description":"本章详细介绍词法分析的基本概念、正则表达式与词法规则、有限自动机、词法分析器的实现方法及常用工具、错误处理和性能优化等内容。","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/149a30f8df0187dae427c8323069ca88.svg","tags":[],"keywords":"词法分析, 正则表达式, 有限自动机, 词法分析器, Lex, Flex","authors":["whitedew"],"type":"Post","readingTime":{"words":2184,"minutes":7,"text":"7 分钟"},"slug":"doc/📚 计算机基础/编译原理/ovzvcms97euksuig","path":"docs/doc/📚 计算机基础/编译原理/ovzvcms97euksuig","filePath":"docs/doc/📚 计算机基础/编译原理/ovzvcms97euksuig.md","toc":[{"value":"2.1 词法分析的概述","url":"#21-词法分析的概述","depth":2},{"value":"2.1.1 词法分析的功能","url":"#211-词法分析的功能","depth":3},{"value":"2.2 正则表达式与词法规则","url":"#22-正则表达式与词法规则","depth":2},{"value":"2.2.1 正则表达式基础","url":"#221-正则表达式基础","depth":3},{"value":"2.2.2 词法规则示例","url":"#222-词法规则示例","depth":3},{"value":"词法分析器工作流程","url":"#词法分析器工作流程","depth":3},{"value":"2.3 有限自动机","url":"#23-有限自动机","depth":2},{"value":"2.3.1 非确定性有限自动机（NFA）","url":"#231-非确定性有限自动机nfa","depth":3},{"value":"2.3.2 确定性有限自动机（DFA）","url":"#232-确定性有限自动机dfa","depth":3},{"value":"2.3.3 NFA 和 DFA 的转换","url":"#233-nfa-和-dfa-的转换","depth":3},{"value":"NFA 和 DFA 示例","url":"#nfa-和-dfa-示例","depth":3},{"value":"2.4 词法分析器的实现","url":"#24-词法分析器的实现","depth":2},{"value":"2.4.1 手动实现词法分析器","url":"#241-手动实现词法分析器","depth":3},{"value":"2.4.2 使用 Lex/Flex 生成词法分析器","url":"#242-使用-lexflex-生成词法分析器","depth":3},{"value":"示例：使用 Flex 生成词法分析器","url":"#示例使用-flex-生成词法分析器","depth":4},{"value":"词法分析器工作流程","url":"#词法分析器工作流程-1","depth":3},{"value":"2.5 词法分析工具","url":"#25-词法分析工具","depth":2},{"value":"2.5.1 Lex 和 Flex","url":"#251-lex-和-flex","depth":3},{"value":"2.5.2 使用 Lex/Flex 的步骤","url":"#252-使用-lexflex-的步骤","depth":3},{"value":"示例：使用 Flex 生成词法分析器的步骤","url":"#示例使用-flex-生成词法分析器的步骤","depth":3},{"value":"使用 Lex/Flex 生成词法分析器的步骤","url":"#使用-lexflex-生成词法分析器的步骤","depth":3},{"value":"2.6 词法分析器的工作流程","url":"#26-词法分析器的工作流程","depth":2},{"value":"词法分析器工作流程","url":"#词法分析器工作流程-2","depth":3},{"value":"2.7 词法单元（Token）的结构","url":"#27-词法单元token的结构","depth":2},{"value":"示例：Token 的数据结构（使用 TypeScript）","url":"#示例token-的数据结构使用-typescript","depth":3},{"value":"oken 数据结构示意图","url":"#oken-数据结构示意图","depth":3},{"value":"2.8 词法分析中的错误处理","url":"#28-词法分析中的错误处理","depth":2},{"value":"2.8.1 常见词法错误类型","url":"#281-常见词法错误类型","depth":3},{"value":"2.8.2 错误处理策略","url":"#282-错误处理策略","depth":3},{"value":"词法分析中的错误处理流程","url":"#词法分析中的错误处理流程","depth":3},{"value":"2.9 词法分析器的性能优化","url":"#29-词法分析器的性能优化","depth":2},{"value":"2.9.1 使用 DFA 优化匹配过程","url":"#291-使用-dfa-优化匹配过程","depth":3},{"value":"2.9.2 缓冲区管理","url":"#292-缓冲区管理","depth":3},{"value":"2.9.3 预处理","url":"#293-预处理","depth":3},{"value":"词法分析器的性能优化流程","url":"#词法分析器的性能优化流程","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"2、编译器的词法分析","datePublished":"2024-05-28T09:55:59.000Z","dateModified":"2024-06-27T13:08:09.000Z","description":"本章详细介绍词法分析的基本概念、正则表达式与词法规则、有限自动机、词法分析器的实现方法及常用工具、错误处理和性能优化等内容。","url":"https://offernow.cn/docs/doc/📚 计算机基础/编译原理/ovzvcms97euksuig"}},{"title":"1、初识编译器","date":"2024-05-28T09:52:04.000Z","urlname":"rssk43a5l6vb8hl9","is_nav":false,"updated":"2024-06-21T09:24:19.000Z","not_show":false,"description":"本章介绍编译器的基本概念、各个编译阶段、编译器与解释器的区别以及编译器设计的挑战，帮助读者理解编译原理。","tags":[],"keywords":"编译器, 编译过程, 解释器, 编译器设计, 编译原理","authors":["whitedew"],"type":"Post","readingTime":{"words":1650,"minutes":6,"text":"6 分钟"},"slug":"doc/📚 计算机基础/编译原理/rssk43a5l6vb8hl9","path":"docs/doc/📚 计算机基础/编译原理/rssk43a5l6vb8hl9","filePath":"docs/doc/📚 计算机基础/编译原理/rssk43a5l6vb8hl9.md","toc":[{"value":"第一章 引言","url":"#第一章-引言","depth":1},{"value":"1.1 编译器的概述","url":"#11-编译器的概述","depth":2},{"value":"1.1.1 编译器的定义","url":"#111-编译器的定义","depth":3},{"value":"1.1.2 编译器的功能","url":"#112-编译器的功能","depth":3},{"value":"1.2 编译过程的阶段","url":"#12-编译过程的阶段","depth":2},{"value":"1.2.1 词法分析（Lexical Analysis）","url":"#121-词法分析lexical-analysis","depth":3},{"value":"1.2.2 语法分析（Syntax Analysis）","url":"#122-语法分析syntax-analysis","depth":3},{"value":"1.2.3 语义分析（Semantic Analysis）","url":"#123-语义分析semantic-analysis","depth":3},{"value":"1.2.4 中间代码生成（Intermediate Code Generation）","url":"#124-中间代码生成intermediate-code-generation","depth":3},{"value":"1.2.5 代码优化（Code Optimization）","url":"#125-代码优化code-optimization","depth":3},{"value":"1.2.6 目标代码生成（Code Generation）","url":"#126-目标代码生成code-generation","depth":3},{"value":"1.2.7 代码链接（Code Linking）","url":"#127-代码链接code-linking","depth":3},{"value":"1.3 编译器与解释器的区别","url":"#13-编译器与解释器的区别","depth":2},{"value":"1.3.1 编译器","url":"#131-编译器","depth":3},{"value":"1.3.2 解释器","url":"#132-解释器","depth":3},{"value":"1.3.3 编译器与解释器的对比","url":"#133-编译器与解释器的对比","depth":3},{"value":"1.4 编译器设计的挑战","url":"#14-编译器设计的挑战","depth":2},{"value":"1.4.1 语言复杂性","url":"#141-语言复杂性","depth":3},{"value":"1.4.2 错误处理","url":"#142-错误处理","depth":3},{"value":"1.4.3 优化","url":"#143-优化","depth":3},{"value":"1.4.4 目标代码生成","url":"#144-目标代码生成","depth":3},{"value":"1.4.5 跨平台支持","url":"#145-跨平台支持","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"1、初识编译器","datePublished":"2024-05-28T09:52:04.000Z","dateModified":"2024-06-21T09:24:19.000Z","description":"本章介绍编译器的基本概念、各个编译阶段、编译器与解释器的区别以及编译器设计的挑战，帮助读者理解编译原理。","url":"https://offernow.cn/docs/doc/📚 计算机基础/编译原理/rssk43a5l6vb8hl9"}},{"title":"Next.js 和 Contentlayer 项目中实现自动生成 Sitemap","date":"2024-05-28T09:25:59.000Z","urlname":"ilz2siimxs2xmb7g","is_nav":false,"updated":"2024-05-28T09:26:16.000Z","not_show":false,"description":"要在 Next.js 和 Contentlayer 项目中实现自动生成 Sitemap 的功能，你可以编写一个脚本，在每次生成文档后自动生成 Sitemap。以下是一个示例脚本，你可以根据自己的需求进行调整。步骤 1：安装必要的依赖首先，你需要安装必要的依赖库，用于生成 Sitemap 和处理...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":592,"minutes":2,"text":"2 分钟"},"slug":"doc/🔥 程序员自我修养/环境安装😭/ilz2siimxs2xmb7g","path":"docs/doc/🔥 程序员自我修养/环境安装😭/ilz2siimxs2xmb7g","filePath":"docs/doc/🔥 程序员自我修养/环境安装😭/ilz2siimxs2xmb7g.md","toc":[{"value":"步骤 1：安装必要的依赖","url":"#步骤-1安装必要的依赖","depth":3},{"value":"步骤 2：编写生成 Sitemap 的脚本","url":"#步骤-2编写生成-sitemap-的脚本","depth":3},{"value":"步骤 3：在生成文档后自动运行脚本","url":"#步骤-3在生成文档后自动运行脚本","depth":3},{"value":"步骤 4：确保文档生成路径和 URL 处理正确","url":"#步骤-4确保文档生成路径和-url-处理正确","depth":3},{"value":"步骤 5：运行构建","url":"#步骤-5运行构建","depth":3},{"value":"总结","url":"#总结-18","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Next.js 和 Contentlayer 项目中实现自动生成 Sitemap","datePublished":"2024-05-28T09:25:59.000Z","dateModified":"2024-05-28T09:26:16.000Z","description":"要在 Next.js 和 Contentlayer 项目中实现自动生成 Sitemap 的功能，你可以编写一个脚本，在每次生成文档后自动生成 Sitemap。以下是一个示例脚本，你可以根据自己的需求进行调整。步骤 1：安装必要的依赖首先，你需要安装必要的依赖库，用于生成 Sitemap 和处理...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/环境安装😭/ilz2siimxs2xmb7g"}},{"title":"TCC事务是什么？","date":"2024-05-28T09:15:04.000Z","urlname":"lgga0u5nxhhncbe1","is_nav":false,"updated":"2024-05-28T09:27:38.000Z","not_show":false,"description":"何为TCC？TCC（Try-Confirm-Cancel）即补偿型事务，是一种分布式事务解决方案。TCC 分布式事务的核心思想是先尝试改变数据库状态为中间态，如果没有问题才进行真正的修改，如果有问题则返回之前的状态。三个部分的拆解如下：Try：尝试将结果修改为中间态；Confirm：如果 Tr...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1310,"minutes":4,"text":"4 分钟"},"slug":"doc/🔥 程序员自我修养/最强后端🐚/lgga0u5nxhhncbe1","path":"docs/doc/🔥 程序员自我修养/最强后端🐚/lgga0u5nxhhncbe1","filePath":"docs/doc/🔥 程序员自我修养/最强后端🐚/lgga0u5nxhhncbe1.md","toc":[{"value":"何为TCC？","url":"#何为tcc","depth":2},{"value":"业务场景示例","url":"#业务场景示例","depth":2},{"value":"TCC 各阶段详解","url":"#tcc-各阶段详解","depth":2},{"value":"Try 阶段","url":"#try-阶段","depth":3},{"value":"Confirm 阶段","url":"#confirm-阶段","depth":3},{"value":"Cancel 阶段","url":"#cancel-阶段","depth":3},{"value":"示例代码","url":"#示例代码-21","depth":2},{"value":"订单服务","url":"#订单服务","depth":3},{"value":"库存服务","url":"#库存服务","depth":3},{"value":"积分服务","url":"#积分服务","depth":3},{"value":"仓储服务","url":"#仓储服务","depth":3},{"value":"总结","url":"#总结-17","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"TCC事务是什么？","datePublished":"2024-05-28T09:15:04.000Z","dateModified":"2024-05-28T09:27:38.000Z","description":"何为TCC？TCC（Try-Confirm-Cancel）即补偿型事务，是一种分布式事务解决方案。TCC 分布式事务的核心思想是先尝试改变数据库状态为中间态，如果没有问题才进行真正的修改，如果有问题则返回之前的状态。三个部分的拆解如下：Try：尝试将结果修改为中间态；Confirm：如果 Tr...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/最强后端🐚/lgga0u5nxhhncbe1"}},{"title":"Filter和Interceptor什么区别？","date":"2024-05-28T08:58:45.000Z","urlname":"mmoy1c0lqpq2zm5z","is_nav":false,"updated":"2024-05-28T09:32:58.000Z","not_show":false,"description":"在Java Spring框架中，Filter和Interceptor是两个常见的组件，用于处理请求和响应的拦截逻辑。虽然它们有一些相似之处，但也有许多重要的区别。下面详细介绍它们的区别和各自的特点。Filter介绍Filter是Servlet规范的一部分，用于在请求到达Servlet之前和响应...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":921,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Java/mmoy1c0lqpq2zm5z","path":"docs/doc/💻 编程语言/Java/mmoy1c0lqpq2zm5z","filePath":"docs/doc/💻 编程语言/Java/mmoy1c0lqpq2zm5z.md","toc":[{"value":"Filter","url":"#filter","depth":2},{"value":"介绍","url":"#介绍-1","depth":3},{"value":"特点","url":"#特点-3","depth":3},{"value":"示例代码","url":"#示例代码-3","depth":3},{"value":"Interceptor","url":"#interceptor","depth":2},{"value":"介绍","url":"#介绍-2","depth":3},{"value":"特点","url":"#特点-4","depth":3},{"value":"示例代码","url":"#示例代码-4","depth":3},{"value":"注册Interceptor","url":"#注册interceptor","depth":3},{"value":"区别总结","url":"#区别总结","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Filter和Interceptor什么区别？","datePublished":"2024-05-28T08:58:45.000Z","dateModified":"2024-05-28T09:32:58.000Z","description":"在Java Spring框架中，Filter和Interceptor是两个常见的组件，用于处理请求和响应的拦截逻辑。虽然它们有一些相似之处，但也有许多重要的区别。下面详细介绍它们的区别和各自的特点。Filter介绍Filter是Servlet规范的一部分，用于在请求到达Servlet之前和响应...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/mmoy1c0lqpq2zm5z"}},{"title":"㊙️ 自用算法小册","date":"2024-05-28T08:51:58.000Z","urlname":"ccershuyglgpxsdp","is_nav":false,"updated":"2024-05-28T08:52:23.000Z","not_show":false,"description":"似乎以前都只注重于把这道题解出来，而没有在意做题时的“心路历程”，也没有归类总结，更没有去回顾····这样的刷题，如同空中楼阁一样，轻飘飘的，长远来看没有任何益处。因此在平时练习题的时候，最重要的先写清楚思路，再进行代码的编写。排序算法注：外部排序其实大数据量下的排序，也是基于内部排序进行的。...","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1633655486985-57fe5ede-3f3c-4901-aef1-a3b8fdeec83f.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":30385,"minutes":101,"text":"101 分钟"},"slug":"doc/⬇️ 区区算法/ccershuyglgpxsdp","path":"docs/doc/⬇️ 区区算法/ccershuyglgpxsdp","filePath":"docs/doc/⬇️ 区区算法/ccershuyglgpxsdp.md","toc":[{"value":"排序算法","url":"#排序算法","depth":1},{"value":"image.png","url":"#imagepng","depth":1},{"value":"冒泡排序","url":"#冒泡排序","depth":2},{"value":"选择排序","url":"#选择排序","depth":2},{"value":"插入排序","url":"#插入排序","depth":2},{"value":"希尔排序","url":"#希尔排序","depth":2},{"value":"二分查找","url":"#二分查找","depth":2},{"value":"快速排序","url":"#快速排序","depth":2},{"value":"堆排序的实现","url":"#堆排序的实现","depth":2},{"value":"归并排序","url":"#归并排序","depth":2},{"value":"C++如何使用优先队列?","url":"#c如何使用优先队列","depth":2},{"value":"树的王国","url":"#树的王国","depth":1},{"value":"二叉查找/搜索树（BST，Binary Search Tree）","url":"#二叉查找搜索树bstbinary-search-tree","depth":2},{"value":"平衡二叉树/AVL","url":"#平衡二叉树avl","depth":2},{"value":"红黑树","url":"#红黑树","depth":2},{"value":"","url":"#-2","depth":2},{"value":"","url":"#-3","depth":2},{"value":"105.从前序和中序遍历结果来重构二叉树（剑指offer07）","url":"#105从前序和中序遍历结果来重构二叉树剑指offer07","depth":2},{"value":"106.从后序和中序遍历结果重构二叉树","url":"#106从后序和中序遍历结果重构二叉树","depth":2},{"value":"652.寻找重复子树","url":"#652寻找重复子树","depth":2},{"value":"二叉搜索树寻找第K小","url":"#二叉搜索树寻找第k小","depth":2},{"value":"二叉搜索树转换为累加树","url":"#二叉搜索树转换为累加树","depth":2},{"value":"判断二叉搜索树的合法性","url":"#判断二叉搜索树的合法性","depth":2},{"value":"在二叉搜索树中搜索一个数","url":"#在二叉搜索树中搜索一个数","depth":2},{"value":"在BST中插入一个数","url":"#在bst中插入一个数","depth":2},{"value":"在BST中删除一个数","url":"#在bst中删除一个数","depth":2},{"value":"二叉树序列化","url":"#二叉树序列化","depth":2},{"value":"235. 二叉搜索树的最近公共祖先","url":"#235-二叉搜索树的最近公共祖先","depth":2},{"value":"剑指 Offer 68 - II. 二叉树的最近公共祖先","url":"#剑指-offer-68---ii-二叉树的最近公共祖先","depth":2},{"value":"222. 完全二叉树的节点个数","url":"#222-完全二叉树的节点个数","depth":2},{"value":"多指针","url":"#多指针","depth":1},{"value":"剑指 Offer II 022. 链表中环的入口节点","url":"#剑指-offer-ii-022-链表中环的入口节点","depth":2},{"value":"剑指 Offer 22. 链表中倒数第k个节点","url":"#剑指-offer-22-链表中倒数第k个节点","depth":2},{"value":"876. 链表的中间结点","url":"#876-链表的中间结点","depth":2},{"value":"动态规划","url":"#动态规划","depth":1},{"value":"53.最大子序和-easy","url":"#53最大子序和-easy","depth":2},{"value":"300.最长递增子序列-mid","url":"#300最长递增子序列-mid","depth":2},{"value":"70.爬楼梯-easy","url":"#70爬楼梯-easy","depth":2},{"value":"背包问题","url":"#背包问题","depth":2},{"value":"474.一和零（0-1背包）","url":"#474一和零0-1背包","depth":2},{"value":"494. 目标和-mid","url":"#494-目标和-mid","depth":2},{"value":"600.不含连续1的非负整数-hard","url":"#600不含连续1的非负整数-hard","depth":2},{"value":"416.分割等和子集","url":"#416分割等和子集","depth":2},{"value":"72.编辑距离","url":"#72编辑距离","depth":2},{"value":"1143.最长公共子序列-mid","url":"#1143最长公共子序列-mid","depth":2},{"value":"NC127 最长公共子串","url":"#nc127-最长公共子串","depth":2},{"value":"64.最小路径和","url":"#64最小路径和","depth":2},{"value":"1312.字符串成为回文子串的最小插入数-hard","url":"#1312字符串成为回文子串的最小插入数-hard","depth":2},{"value":"55.游戏跳跃","url":"#55游戏跳跃","depth":2},{"value":"45.跳跃游戏II","url":"#45跳跃游戏ii","depth":2},{"value":"贪心算法","url":"#贪心算法","depth":1},{"value":"517.超级洗衣机","url":"#517超级洗衣机","depth":2},{"value":"链表","url":"#链表","depth":1},{"value":"21.合并两个有序链表","url":"#21合并两个有序链表","depth":2},{"value":"23.合并K个升序链表","url":"#23合并k个升序链表","depth":2},{"value":"725.分割链表-mid","url":"#725分割链表-mid","depth":2},{"value":"深度优先/回溯算法（DFS）","url":"#深度优先回溯算法dfs","depth":1},{"value":"模板","url":"#模板","depth":2},{"value":"46. 全排列","url":"#46-全排列","depth":2},{"value":"八皇后（打印结果）","url":"#八皇后打印结果","depth":2},{"value":"52. N皇后 II","url":"#52-n皇后-ii","depth":2},{"value":"剑指 Offer 12. 矩阵中的路径","url":"#剑指-offer-12-矩阵中的路径","depth":2},{"value":"广度优先（BFS）","url":"#广度优先bfs","depth":1},{"value":"111.二叉树的最小深度","url":"#111二叉树的最小深度","depth":2},{"value":"752.打开转盘锁","url":"#752打开转盘锁","depth":2},{"value":"单调栈","url":"#单调栈","depth":1},{"value":"739.每日温度","url":"#739每日温度","depth":2},{"value":"496. 下一个更大元素 I","url":"#496-下一个更大元素-i","depth":2},{"value":"503. 下一个更大元素 II","url":"#503-下一个更大元素-ii","depth":2},{"value":"42.接雨水","url":"#42接雨水","depth":2},{"value":"407. 接雨水 II","url":"#407-接雨水-ii","depth":2},{"value":"求最大01子矩阵的面积大小","url":"#求最大01子矩阵的面积大小","depth":2},{"value":"有效的括号","url":"#有效的括号","depth":2},{"value":"进阶：22.括号生成","url":"#进阶22括号生成","depth":2},{"value":"区间相关","url":"#区间相关","depth":2},{"value":"1288.删除被覆盖的区间","url":"#1288删除被覆盖的区间","depth":2},{"value":"56.合并区间","url":"#56合并区间","depth":2},{"value":"986.区间列表的交集","url":"#986区间列表的交集","depth":2},{"value":"57.插入区间","url":"#57插入区间","depth":2},{"value":"2）回文串（字符串/链表）","url":"#2回文串字符串链表","depth":3},{"value":"409.最长回文串","url":"#409最长回文串","depth":2},{"value":"516.最长回文子序列","url":"#516最长回文子序列","depth":2},{"value":"234.回文链表","url":"#234回文链表","depth":2},{"value":"反转链表","url":"#反转链表","depth":1},{"value":"206. 反转链表","url":"#206-反转链表","depth":2},{"value":"92. 反转链表 II","url":"#92-反转链表-ii","depth":2},{"value":"25. K 个一组翻转链表","url":"#25-k-个一组翻转链表","depth":2},{"value":"股票买卖","url":"#股票买卖","depth":1},{"value":"剑指offer 63.股票的最大利润（买卖股票的最大收益 |）","url":"#剑指offer-63股票的最大利润买卖股票的最大收益-","depth":2},{"value":"122. 买卖股票的最佳时机 II","url":"#122-买卖股票的最佳时机-ii","depth":2},{"value":"LRU/LFU","url":"#lrulfu","depth":1},{"value":"LRU的解法","url":"#lru的解法","depth":2},{"value":"LFU的解法","url":"#lfu的解法","depth":2},{"value":"滑动窗口","url":"#滑动窗口","depth":1},{"value":"567.字符串的排列","url":"#567字符串的排列","depth":2},{"value":"1358. 包含所有三种字符的子字符串数目","url":"#1358-包含所有三种字符的子字符串数目","depth":2},{"value":"76.最小覆盖子串","url":"#76最小覆盖子串","depth":2},{"value":"438. 找到字符串中所有字母异位词","url":"#438-找到字符串中所有字母异位词","depth":2},{"value":"3.无重复的最长子串","url":"#3无重复的最长子串","depth":2},{"value":"两数之和","url":"#两数之和","depth":1},{"value":"区间合并与分割","url":"#区间合并与分割","depth":1},{"value":"56.合并区间","url":"#56合并区间-1","depth":2},{"value":"57.插入区间","url":"#57插入区间-1","depth":2},{"value":"大数计算","url":"#大数计算","depth":1},{"value":"66. 加一","url":"#66-加一","depth":2},{"value":"2. 两数相加","url":"#2-两数相加","depth":2},{"value":"43. 字符串相乘","url":"#43-字符串相乘","depth":2},{"value":"数据结构","url":"#数据结构","depth":1},{"value":"剑指offer09.用两个栈实现队列","url":"#剑指offer09用两个栈实现队列","depth":2},{"value":"225.用两个队列实现栈","url":"#225用两个队列实现栈","depth":2},{"value":"71. 简化路径","url":"#71-简化路径","depth":2},{"value":"图的奥秘","url":"#图的奥秘","depth":1},{"value":"图的遍历","url":"#图的遍历","depth":2},{"value":"743.网络的延迟时间","url":"#743网络的延迟时间","depth":2},{"value":"拓扑排序","url":"#拓扑排序","depth":1},{"value":"207.课程表","url":"#207课程表","depth":2},{"value":"1203.项目管理(拓扑排序)","url":"#1203项目管理拓扑排序","depth":2},{"value":"多线程","url":"#多线程","depth":1},{"value":"交替打印字符串（原子、条变量、锁）","url":"#交替打印字符串原子条变量锁","depth":2},{"value":"条件变量","url":"#条件变量","depth":2},{"value":"并查集","url":"#并查集","depth":1},{"value":"547. 省份数量","url":"#547-省份数量","depth":2},{"value":"200.岛屿的数量","url":"#200岛屿的数量","depth":2},{"value":"1319. 连通网络的操作次数","url":"#1319-连通网络的操作次数","depth":2},{"value":"剑指 Offer II 116. 朋友圈","url":"#剑指-offer-ii-116-朋友圈","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"㊙️ 自用算法小册","datePublished":"2024-05-28T08:51:58.000Z","dateModified":"2024-05-28T08:52:23.000Z","description":"似乎以前都只注重于把这道题解出来，而没有在意做题时的“心路历程”，也没有归类总结，更没有去回顾····这样的刷题，如同空中楼阁一样，轻飘飘的，长远来看没有任何益处。因此在平时练习题的时候，最重要的先写清楚思路，再进行代码的编写。排序算法注：外部排序其实大数据量下的排序，也是基于内部排序进行的。...","url":"https://offernow.cn/docs/doc/⬇️ 区区算法/ccershuyglgpxsdp"}},{"title":"🗡 剑指OFFER精讲","date":"2024-05-28T08:50:31.000Z","urlname":"hogrunp9g0bggri2","is_nav":false,"updated":"2024-06-25T13:58:55.000Z","not_show":false,"description":"001.赋值运算符函数有一个类声明如下，请重载其赋值运算符：class CMyString { public:     CMyString(char *p = nullptr);     CMyString(const CMyString& str);     ~CMyString(); pr...","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1629211889249-6820e8c8-0e98-4006-89f7-1eeb48220c00.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":27451,"minutes":92,"text":"92 分钟"},"slug":"doc/⬇️ 区区算法/hogrunp9g0bggri2","path":"docs/doc/⬇️ 区区算法/hogrunp9g0bggri2","filePath":"docs/doc/⬇️ 区区算法/hogrunp9g0bggri2.md","toc":[{"value":"001.赋值运算符函数","url":"#001赋值运算符函数","depth":1},{"value":"补充：赋值/拷贝重载函数","url":"#补充赋值拷贝重载函数","depth":2},{"value":"002.实现单例模式","url":"#002实现单例模式","depth":1},{"value":"C++实现","url":"#c实现","depth":2},{"value":"Java实现","url":"#java实现","depth":2},{"value":"补充：数组地址与指针","url":"#补充数组地址与指针","depth":2},{"value":"003.数组中重复的数字","url":"#003数组中重复的数字","depth":1},{"value":"004.二维数组的查找","url":"#004二维数组的查找","depth":1},{"value":"补充：C/C++中的字符串","url":"#补充cc中的字符串","depth":2},{"value":"005.替换空格","url":"#005替换空格","depth":1},{"value":"补充：链表","url":"#补充链表","depth":2},{"value":"006.从尾到头打印链表","url":"#006从尾到头打印链表","depth":1},{"value":"补充·树（前序、中序、后序的迭代）","url":"#补充树前序中序后序的迭代","depth":2},{"value":"007.重建二叉树","url":"#007重建二叉树","depth":1},{"value":"008.二叉树的下一个节点","url":"#008二叉树的下一个节点","depth":1},{"value":"009.用两个栈实现队列","url":"#009用两个栈实现队列","depth":1},{"value":"010.斐波拉契数列","url":"#010斐波拉契数列","depth":1},{"value":"补充：哈希表的常用操作","url":"#补充哈希表的常用操作","depth":2},{"value":"补充：map和unordered_map的区别","url":"#补充map和unordered_map的区别","depth":2},{"value":"（待补充，几种排序算法！必须会！！）","url":"#待补充几种排序算法必须会","depth":1},{"value":"011.旋转数组的最小数字","url":"#011旋转数组的最小数字","depth":1},{"value":"012.矩阵中的路径","url":"#012矩阵中的路径","depth":1},{"value":"013.机器人的运动范围","url":"#013机器人的运动范围","depth":1},{"value":"补充：动态规划","url":"#补充动态规划","depth":2},{"value":"014.剪绳子","url":"#014剪绳子","depth":1},{"value":"015.二进制中1的个数","url":"#015二进制中1的个数","depth":1},{"value":"**补充：广度优先算法与深度优先算法（**BFS与DFS）","url":"#补充广度优先算法与深度优先算法bfs与dfs","depth":2},{"value":"016.数值的整数次方","url":"#016数值的整数次方","depth":1},{"value":"017.打印从1到最大的n位数","url":"#017打印从1到最大的n位数","depth":1},{"value":"018.删除链表的节点","url":"#018删除链表的节点","depth":1},{"value":"019.正则表达式匹配","url":"#019正则表达式匹配","depth":1},{"value":"020.表示数值的字符串","url":"#020表示数值的字符串","depth":1},{"value":"021.使奇数位于偶数前面（参考第二种题解）","url":"#021使奇数位于偶数前面参考第二种题解","depth":1},{"value":"022.链表中倒数第k个节点","url":"#022链表中倒数第k个节点","depth":1},{"value":"023.链表中环的入口节点","url":"#023链表中环的入口节点","depth":1},{"value":"024.反转链表","url":"#024反转链表","depth":1},{"value":"025.合并两个排序的链表","url":"#025合并两个排序的链表","depth":1},{"value":"026.树的子结构","url":"#026树的子结构","depth":1},{"value":"027.二叉树的镜像","url":"#027二叉树的镜像","depth":1},{"value":"028.对称的二叉树","url":"#028对称的二叉树","depth":1},{"value":"029.顺时针打印矩阵","url":"#029顺时针打印矩阵","depth":1},{"value":"030.包含min函数的栈","url":"#030包含min函数的栈","depth":1},{"value":"031.栈的压入、弹出序列","url":"#031栈的压入弹出序列","depth":1},{"value":"032.从上到下打印二叉树","url":"#032从上到下打印二叉树","depth":1},{"value":"033.二叉搜索树的后序遍历序列","url":"#033二叉搜索树的后序遍历序列","depth":1},{"value":"034.二叉树中和为某一值的路径","url":"#034二叉树中和为某一值的路径","depth":1},{"value":"035.复杂链表的复制","url":"#035复杂链表的复制","depth":1},{"value":"036.二叉搜索树和双向链表","url":"#036二叉搜索树和双向链表","depth":1},{"value":"037.序列化二叉树（重点）","url":"#037序列化二叉树重点","depth":1},{"value":"038.字符串的排列","url":"#038字符串的排列","depth":1},{"value":"039.次数超过一半的数字","url":"#039次数超过一半的数字","depth":1},{"value":"040.最小的K个数","url":"#040最小的k个数","depth":1},{"value":"补充：C++ 创建大顶堆和小顶堆的写法","url":"#补充c-创建大顶堆和小顶堆的写法","depth":2},{"value":"补充：快速排序的通用写法（可以使用部分排序的方式，即只排列k个元素）","url":"#补充快速排序的通用写法可以使用部分排序的方式即只排列k个元素","depth":2},{"value":"041.数据流中的中位数","url":"#041数据流中的中位数","depth":1},{"value":"042.连续子数组的最大和","url":"#042连续子数组的最大和","depth":1},{"value":"补充：获取vector中的最大值","url":"#补充获取vector中的最大值","depth":2},{"value":"043.1~n整数中1出现的次数","url":"#0431n整数中1出现的次数","depth":1},{"value":"044.数字序列中某一位的数字","url":"#044数字序列中某一位的数字","depth":1},{"value":"045.把数组排成最小的数","url":"#045把数组排成最小的数","depth":1},{"value":"046.把数字翻译成字符串","url":"#046把数字翻译成字符串","depth":1},{"value":"047.礼物的最大价值","url":"#047礼物的最大价值","depth":1},{"value":"048.最长不含重复字符的子字符串","url":"#048最长不含重复字符的子字符串","depth":1},{"value":"049.丑数","url":"#049丑数","depth":1},{"value":"050.第一个只出现一次的字符","url":"#050第一个只出现一次的字符","depth":1},{"value":"051.数组中的逆序对","url":"#051数组中的逆序对","depth":1},{"value":"052.两个链表的第一个公共节点","url":"#052两个链表的第一个公共节点","depth":1},{"value":"053.在排序数组中查找数字","url":"#053在排序数组中查找数字","depth":1},{"value":"054.二叉搜索树的第K大节点","url":"#054二叉搜索树的第k大节点","depth":1},{"value":"055.二叉树的深度","url":"#055二叉树的深度","depth":1},{"value":"056.数组中出现两次","url":"#056数组中出现两次","depth":1},{"value":"057.和为?的数字(两数之和)","url":"#057和为的数字两数之和","depth":1},{"value":"058.反转字符串","url":"#058反转字符串","depth":1},{"value":"059.队列的最大值\timage.png","url":"#059队列的最大值imagepng","depth":1},{"value":"补充：deque双端队列的用法","url":"#补充deque双端队列的用法","depth":2},{"value":"060.n个骰子的点数","url":"#060n个骰子的点数","depth":1},{"value":"061.扑克牌中的顺子","url":"#061扑克牌中的顺子","depth":1},{"value":"062.圆圈中最后剩下的数字","url":"#062圆圈中最后剩下的数字","depth":1},{"value":"063.股票的最大利润","url":"#063股票的最大利润","depth":1},{"value":"064.求1+2+....n","url":"#064求12n","depth":1},{"value":"065.不用加减乘除做加法","url":"#065不用加减乘除做加法","depth":1},{"value":"如何利用位运算实现交换两个数的值呢？","url":"#如何利用位运算实现交换两个数的值呢","depth":2},{"value":"066.构建乘积数组","url":"#066构建乘积数组","depth":1},{"value":"067.字符串转换为整数","url":"#067字符串转换为整数","depth":1},{"value":"068.树中两个节点的最近公共祖先","url":"#068树中两个节点的最近公共祖先","depth":1},{"value":"题目一、二叉搜索树的最近公共祖先","url":"#题目一二叉搜索树的最近公共祖先","depth":3},{"value":"题目二、二叉树的最近公共祖先","url":"#题目二二叉树的最近公共祖先","depth":3},{"value":"二叉树中和为某一值的路径","url":"#二叉树中和为某一值的路径","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"🗡 剑指OFFER精讲","datePublished":"2024-05-28T08:50:31.000Z","dateModified":"2024-06-25T13:58:55.000Z","description":"001.赋值运算符函数有一个类声明如下，请重载其赋值运算符：class CMyString { public:     CMyString(char *p = nullptr);     CMyString(const CMyString& str);     ~CMyString(); pr...","url":"https://offernow.cn/docs/doc/⬇️ 区区算法/hogrunp9g0bggri2"}},{"title":"⬇️ 区区算法","date":"2024-05-28T08:50:29.000Z","urlname":"nwf4zh020zubf4ae","is_nav":true,"nav_path":"algorithm","updated":"2024-06-23T12:34:23.000Z","not_show":false,"description":"揭开算法背后的神秘面纱，将复杂的理论和技术浅显易懂地呈现出来。无论你是算法新手还是资深开发者，都能在这里找到适合你的内容，涵盖从基础到高级算法、数据结构、机器学习与AI等。","tags":[],"keywords":"算法, 数据科学, 机器学习, 人工智能, 算法面试, 数据结构","authors":["whitedew"],"type":"Post","readingTime":{"words":630,"minutes":2,"text":"2 分钟"},"slug":"doc/nwf4zh020zubf4ae","path":"docs/doc/nwf4zh020zubf4ae","filePath":"docs/doc/nwf4zh020zubf4ae.md","toc":[{"value":"栏目特色","url":"#栏目特色","depth":3},{"value":"栏目内容","url":"#栏目内容","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"⬇️ 区区算法","datePublished":"2024-05-28T08:50:29.000Z","dateModified":"2024-06-23T12:34:23.000Z","description":"揭开算法背后的神秘面纱，将复杂的理论和技术浅显易懂地呈现出来。无论你是算法新手还是资深开发者，都能在这里找到适合你的内容，涵盖从基础到高级算法、数据结构、机器学习与AI等。","url":"https://offernow.cn/docs/doc/nwf4zh020zubf4ae"}},{"title":"搞懂Socket网络编程 🤔","date":"2024-05-28T08:46:28.000Z","urlname":"oetbxdnh3iczsukb","is_nav":false,"updated":"2024-05-28T08:46:56.000Z","not_show":false,"description":"进一步学习select、poll、epoll。Socket网络编程学过计算机网络的同学应该都看得懂这幅图：一个进程进行网络传输的过程可以分为两个阶段：第一阶段：在用户态下，将需要用到的数据封装，调用相应的系统函数如write/read，陷入内核态；第二阶段：在内核态下，内核根据拷贝至内核空间的...\r","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1632469452426-1d73ba73-7388-4605-8522-1bde02a33211.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":4481,"minutes":15,"text":"15 分钟"},"slug":"doc/💻 编程语言/C++/oetbxdnh3iczsukb","path":"docs/doc/💻 编程语言/C++/oetbxdnh3iczsukb","filePath":"docs/doc/💻 编程语言/C++/oetbxdnh3iczsukb.md","toc":[{"value":"Socket网络编程","url":"#socket网络编程","depth":1},{"value":"I/O分类","url":"#io分类","depth":1},{"value":"select/poll","url":"#selectpoll","depth":1},{"value":"epoll","url":"#epoll-1","depth":1},{"value":"读写就绪条件","url":"#读写就绪条件","depth":1},{"value":"参考资料","url":"#参考资料-1","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"搞懂Socket网络编程 🤔","datePublished":"2024-05-28T08:46:28.000Z","dateModified":"2024-05-28T08:46:56.000Z","description":"进一步学习select、poll、epoll。Socket网络编程学过计算机网络的同学应该都看得懂这幅图：一个进程进行网络传输的过程可以分为两个阶段：第一阶段：在用户态下，将需要用到的数据封装，调用相应的系统函数如write/read，陷入内核态；第二阶段：在内核态下，内核根据拷贝至内核空间的...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/C++/oetbxdnh3iczsukb"}},{"title":"一文搞懂C++多线程 🔥","date":"2024-05-28T08:40:29.000Z","urlname":"gm794a2b9t67g9ii","is_nav":false,"updated":"2024-05-28T08:45:22.000Z","not_show":false,"description":"这周学习了多线程并发的相关知识，写一个读书笔记以作记录。包括进程、线程、并发、mutex等等。一、进程、线程、并发进程：简而言之就是一个运行的程序，如点开一个exe文件就打开了一个进程。线程：进程中的不同执行路径，即在一个进程中运行了多个功能。每一个进程都至少包含有一个线程，即主线程，主线程与...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3286,"minutes":11,"text":"11 分钟"},"slug":"doc/💻 编程语言/C++/gm794a2b9t67g9ii","path":"docs/doc/💻 编程语言/C++/gm794a2b9t67g9ii","filePath":"docs/doc/💻 编程语言/C++/gm794a2b9t67g9ii.md","toc":[{"value":"一、进程、线程、并发","url":"#一进程线程并发","depth":2},{"value":"二、thread 库","url":"#二thread-库","depth":2},{"value":"thread类","url":"#thread类","depth":3},{"value":"构造函数","url":"#构造函数","depth":4},{"value":"例子","url":"#例子","depth":4},{"value":"重要函数","url":"#重要函数","depth":3},{"value":"例子","url":"#例子-1","depth":4},{"value":"其他函数","url":"#其他函数","depth":3},{"value":"三、mutex 库","url":"#三mutex-库","depth":2},{"value":"互斥","url":"#互斥","depth":3},{"value":"mutex 类","url":"#mutex-类","depth":3},{"value":"常用函数","url":"#常用函数-1","depth":4},{"value":"例子","url":"#例子-2","depth":3},{"value":"unique_lock","url":"#unique_lock","depth":3},{"value":"四、条件变量 condition_variable","url":"#四条件变量-condition_variable","depth":2},{"value":"例子","url":"#例子-3","depth":3},{"value":"解释","url":"#解释","depth":3},{"value":"std::condition_variable 提供的其他函数","url":"#stdcondition_variable-提供的其他函数","depth":3},{"value":"五、异步调用 future","url":"#五异步调用-future","depth":2},{"value":"std::async","url":"#stdasync","depth":3},{"value":"例子","url":"#例子-4","depth":4},{"value":"std::promise","url":"#stdpromise","depth":3},{"value":"例子","url":"#例子-5","depth":4},{"value":"六、原子操作 atomic","url":"#六原子操作-atomic","depth":2},{"value":"std::atomic_flag","url":"#stdatomic_flag","depth":3},{"value":"例子：std::atomic","url":"#例子stdatomic","depth":3},{"value":"七、锁的详解","url":"#七锁的详解","depth":2},{"value":"std::lock_guard","url":"#stdlock_guard","depth":3},{"value":"特点","url":"#特点","depth":4},{"value":"例子","url":"#例子-6","depth":4},{"value":"std::unique_lock","url":"#stdunique_lock","depth":3},{"value":"特点","url":"#特点-1","depth":4},{"value":"例子","url":"#例子-7","depth":4},{"value":"std::shared_lock","url":"#stdshared_lock","depth":3},{"value":"特点","url":"#特点-2","depth":4},{"value":"例子","url":"#例子-8","depth":4},{"value":"八、线程池","url":"#八线程池","depth":2},{"value":"介绍","url":"#介绍","depth":3},{"value":"实现","url":"#实现","depth":3},{"value":"使用线程池","url":"#使用线程池","depth":4},{"value":"优点","url":"#优点","depth":3},{"value":"参考资料","url":"#参考资料","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"一文搞懂C++多线程 🔥","datePublished":"2024-05-28T08:40:29.000Z","dateModified":"2024-05-28T08:45:22.000Z","description":"这周学习了多线程并发的相关知识，写一个读书笔记以作记录。包括进程、线程、并发、mutex等等。一、进程、线程、并发进程：简而言之就是一个运行的程序，如点开一个exe文件就打开了一个进程。线程：进程中的不同执行路径，即在一个进程中运行了多个功能。每一个进程都至少包含有一个线程，即主线程，主线程与...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/C++/gm794a2b9t67g9ii"}},{"title":"Reactor与Proactor 两种事件分发模式？","date":"2024-05-28T08:38:33.000Z","urlname":"fwqm54bdgsxi6reg","is_nav":false,"updated":"2024-06-21T09:07:33.000Z","not_show":false,"description":"探讨Reactor和Proactor两种事件分发模式在多线程服务器中的应用，包括Netty、Redis等的实现方式及其优缺点对比。","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1634002490029-c029c3ec-c80f-4fed-8f40-d4f05ac77f1b.png","tags":[],"keywords":"Reactor模式, Proactor模式, 事件分发, 网络编程, 多线程服务器, 高性能","authors":["whitedew"],"type":"Post","readingTime":{"words":1974,"minutes":7,"text":"7 分钟"},"slug":"doc/🧰 实践项目/TinyWebServer/fwqm54bdgsxi6reg","path":"docs/doc/🧰 实践项目/TinyWebServer/fwqm54bdgsxi6reg","filePath":"docs/doc/🧰 实践项目/TinyWebServer/fwqm54bdgsxi6reg.md","toc":[{"value":"Reactor","url":"#reactor","depth":1},{"value":"单Reactor单进程/线程","url":"#单reactor单进程线程","depth":2},{"value":"单Reactor多进程/线程","url":"#单reactor多进程线程","depth":2},{"value":"多Reactor多进程/线程","url":"#多reactor多进程线程","depth":2},{"value":"Proactor","url":"#proactor","depth":1},{"value":"参考资料","url":"#参考资料-2","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Reactor与Proactor 两种事件分发模式？","datePublished":"2024-05-28T08:38:33.000Z","dateModified":"2024-06-21T09:07:33.000Z","description":"探讨Reactor和Proactor两种事件分发模式在多线程服务器中的应用，包括Netty、Redis等的实现方式及其优缺点对比。","url":"https://offernow.cn/docs/doc/🧰 实践项目/TinyWebServer/fwqm54bdgsxi6reg"}},{"title":"Git配置Name和Email","date":"2024-05-27T14:35:55.000Z","urlname":"dm7l5god0npph8v4","is_nav":false,"updated":"2024-05-27T14:36:29.000Z","not_show":false,"description":"因为git全局设置用户名跟邮箱，基本操作一次以后很少再变化，所以记忆不是很深刻，但是更换电脑的时候又会用到，然后再去查，所以在这里记录一下，方便自己以后查看。查看git配置信息：git config --list查看用户名：git config user.name查看邮箱：git config...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":152,"minutes":1,"text":"1 分钟"},"slug":"doc/🔥 程序员自我修养/环境安装😭/dm7l5god0npph8v4","path":"docs/doc/🔥 程序员自我修养/环境安装😭/dm7l5god0npph8v4","filePath":"docs/doc/🔥 程序员自我修养/环境安装😭/dm7l5god0npph8v4.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Git配置Name和Email","datePublished":"2024-05-27T14:35:55.000Z","dateModified":"2024-05-27T14:36:29.000Z","description":"因为git全局设置用户名跟邮箱，基本操作一次以后很少再变化，所以记忆不是很深刻，但是更换电脑的时候又会用到，然后再去查，所以在这里记录一下，方便自己以后查看。查看git配置信息：git config --list查看用户名：git config user.name查看邮箱：git config...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/环境安装😭/dm7l5god0npph8v4"}},{"title":"软件趣享🧰","date":"2024-05-27T06:38:23.000Z","urlname":"dt41v1b1lx0wnavv","is_nav":false,"nav_path":"tools\r","updated":"2024-09-28T06:26:28.000Z","not_show":false,"description":"---is_nav: falsenav_path: tools---“软件趣享”栏目是致力于为你打开一扇通往丰富多彩软件世界的大门，涵盖 Windows、安卓等多个领域。一、Windows 软件探索办公效率提升介绍各类强大的办公软件，如功能全面的 Microsoft Office 套件及其高级...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1111,"minutes":4,"text":"4 分钟"},"slug":"doc/🔥 程序员自我修养/dt41v1b1lx0wnavv","path":"docs/doc/🔥 程序员自我修养/dt41v1b1lx0wnavv","filePath":"docs/doc/🔥 程序员自我修养/dt41v1b1lx0wnavv.md","toc":[{"value":"一、Windows 软件探索","url":"#一windows-软件探索","depth":2},{"value":"二、安卓软件发现","url":"#二安卓软件发现","depth":2},{"value":"三、软件评测与推荐","url":"#三软件评测与推荐","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"软件趣享🧰","datePublished":"2024-05-27T06:38:23.000Z","dateModified":"2024-09-28T06:26:28.000Z","description":"---is_nav: falsenav_path: tools---“软件趣享”栏目是致力于为你打开一扇通往丰富多彩软件世界的大门，涵盖 Windows、安卓等多个领域。一、Windows 软件探索办公效率提升介绍各类强大的办公软件，如功能全面的 Microsoft Office 套件及其高级...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/dt41v1b1lx0wnavv"}},{"title":"安装pnpm","date":"2024-05-27T06:36:16.000Z","urlname":"usykzpi3rfqf4vut","is_nav":false,"updated":"2024-05-27T06:38:02.000Z","not_show":false,"description":"怎么在windows、linux、mac上安装pnpm呢？前言如果您不使用独立脚本或 @pnpm/exe 来安装 pnpm，则需要在系统上安装 Node.js（至少 v16.14）。原址：https://pnpm.io/zh/installation使用独立脚本安装即使没有安装 Node.js...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":904,"minutes":3,"text":"3 分钟"},"slug":"doc/🔥 程序员自我修养/环境安装😭/usykzpi3rfqf4vut","path":"docs/doc/🔥 程序员自我修养/环境安装😭/usykzpi3rfqf4vut","filePath":"docs/doc/🔥 程序员自我修养/环境安装😭/usykzpi3rfqf4vut.md","toc":[{"value":"前言","url":"#前言-6","depth":2},{"value":"使用独立脚本安装","url":"#使用独立脚本安装","depth":2},{"value":"Windows","url":"#windows-1","depth":3},{"value":"在 POSIX 系统上","url":"#在-posix-系统上","depth":3},{"value":"使用 Corepack 安装","url":"#使用-corepack-安装","depth":2},{"value":"使用 npm 安装","url":"#使用-npm-安装","depth":2},{"value":"兼容性","url":"#兼容性","depth":2},{"value":"问题排查","url":"#问题排查","depth":2},{"value":"使用更短的别名","url":"#使用更短的别名","depth":2},{"value":"在 POSIX 系统上添加永久别名","url":"#在-posix-系统上添加永久别名","depth":4},{"value":"在 Powershell (Windows) 中添加永久别名：","url":"#在-powershell-windows-中添加永久别名","depth":4},{"value":"卸载 pnpm","url":"#卸载-pnpm","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"安装pnpm","datePublished":"2024-05-27T06:36:16.000Z","dateModified":"2024-05-27T06:38:02.000Z","description":"怎么在windows、linux、mac上安装pnpm呢？前言如果您不使用独立脚本或 @pnpm/exe 来安装 pnpm，则需要在系统上安装 Node.js（至少 v16.14）。原址：https://pnpm.io/zh/installation使用独立脚本安装即使没有安装 Node.js...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/环境安装😭/usykzpi3rfqf4vut"}},{"title":"最强后端🐚","date":"2024-05-27T06:12:07.000Z","urlname":"nhp7016fcte2xc9l","is_nav":true,"nav_path":"server","updated":"2024-09-28T04:12:14.000Z","not_show":false,"description":"---is_nav: truenav_path: server---“最强后端🏷️”博客专栏是后端开发领域的专业指南和知识宝库。一、丰富全面的内容主流语言与框架深入解析后端开发中的主流语言，如 Java、Python、Node.js 等。从语言基础语法到高级特性，一一为你讲解，让你掌握语言的...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":819,"minutes":3,"text":"3 分钟"},"slug":"doc/🔥 程序员自我修养/nhp7016fcte2xc9l","path":"docs/doc/🔥 程序员自我修养/nhp7016fcte2xc9l","filePath":"docs/doc/🔥 程序员自我修养/nhp7016fcte2xc9l.md","toc":[{"value":"一、丰富全面的内容","url":"#一丰富全面的内容","depth":2},{"value":"二、独特优势","url":"#二独特优势","depth":2},{"value":"三、适合人群","url":"#三适合人群","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"最强后端🐚","datePublished":"2024-05-27T06:12:07.000Z","dateModified":"2024-09-28T04:12:14.000Z","description":"---is_nav: truenav_path: server---“最强后端🏷️”博客专栏是后端开发领域的专业指南和知识宝库。一、丰富全面的内容主流语言与框架深入解析后端开发中的主流语言，如 Java、Python、Node.js 等。从语言基础语法到高级特性，一一为你讲解，让你掌握语言的...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/nhp7016fcte2xc9l"}},{"title":"环境安装😭","date":"2024-05-27T06:09:49.000Z","urlname":"io5kukplplfeb9ls","is_nav":false,"nav_path":"install_env","updated":"2024-09-28T04:14:29.000Z","not_show":false,"description":"---is_nav: falsenav_path: install_env---","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":0,"minutes":0,"text":"小于一分钟"},"slug":"doc/🔥 程序员自我修养/io5kukplplfeb9ls","path":"docs/doc/🔥 程序员自我修养/io5kukplplfeb9ls","filePath":"docs/doc/🔥 程序员自我修养/io5kukplplfeb9ls.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"环境安装😭","datePublished":"2024-05-27T06:09:49.000Z","dateModified":"2024-09-28T04:14:29.000Z","description":"---is_nav: falsenav_path: install_env---","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/io5kukplplfeb9ls"}},{"title":"十万个为什么💡","date":"2024-05-27T06:09:41.000Z","urlname":"uz8g4zstl7skaubu","is_nav":true,"nav_path":"screct_qas","updated":"2024-09-28T04:04:12.000Z","not_show":false,"description":"---is_nav: truenav_path: screct_qas---你是否曾经对身边的事物充满好奇？为什么天是蓝的？为什么编程中有这么多奇怪的缩写？为什么有些人能轻松学会新技能，而有些人却总是事倍功半？欢迎来到\"十万个为什么\"的奇妙世界！这里是你的知识探险乐园，我们将一同揭开日常生活和...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":449,"minutes":1,"text":"1 分钟"},"slug":"doc/🔥 程序员自我修养/uz8g4zstl7skaubu","path":"docs/doc/🔥 程序员自我修养/uz8g4zstl7skaubu","filePath":"docs/doc/🔥 程序员自我修养/uz8g4zstl7skaubu.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"十万个为什么💡","datePublished":"2024-05-27T06:09:41.000Z","dateModified":"2024-09-28T04:04:12.000Z","description":"---is_nav: truenav_path: screct_qas---你是否曾经对身边的事物充满好奇？为什么天是蓝的？为什么编程中有这么多奇怪的缩写？为什么有些人能轻松学会新技能，而有些人却总是事倍功半？欢迎来到\"十万个为什么\"的奇妙世界！这里是你的知识探险乐园，我们将一同揭开日常生活和...","url":"https://offernow.cn/docs/doc/🔥 程序员自我修养/uz8g4zstl7skaubu"}},{"title":"🔥 程序员自我修养","date":"2024-05-27T03:27:11.000Z","urlname":"zz7wzx74m9sgu0bb","is_nav":true,"nav_path":"self_improve","updated":"2024-06-21T08:50:26.000Z","skip_nav":false,"not_show":false,"description":"优秀的程序员不仅需要不断学习编程技能，还要掌握高效的开发工具，参与开源项目，并通过代码挑战提升自己。了解更多程序员自我修养的关键方面和资源推荐。","tags":[],"keywords":"程序员自我修养, 编程技能, 开发工具, 代码挑战, 开源项目","authors":["whitedew"],"type":"Post","readingTime":{"words":436,"minutes":1,"text":"1 分钟"},"slug":"doc/zz7wzx74m9sgu0bb","path":"docs/doc/zz7wzx74m9sgu0bb","filePath":"docs/doc/zz7wzx74m9sgu0bb.md","toc":[{"value":"知识收集","url":"#知识收集","depth":3},{"value":"环境安装","url":"#环境安装","depth":3},{"value":"经典代码","url":"#经典代码","depth":3},{"value":"编程实践","url":"#编程实践","depth":3},{"value":"软技能培养","url":"#软技能培养","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"🔥 程序员自我修养","datePublished":"2024-05-27T03:27:11.000Z","dateModified":"2024-06-21T08:50:26.000Z","description":"优秀的程序员不仅需要不断学习编程技能，还要掌握高效的开发工具，参与开源项目，并通过代码挑战提升自己。了解更多程序员自我修养的关键方面和资源推荐。","url":"https://offernow.cn/docs/doc/zz7wzx74m9sgu0bb"}},{"title":"LRU、LFU算法的代码实现","date":"2024-05-24T08:12:43.000Z","urlname":"rpkbuac4rqibc4w3","is_nav":false,"updated":"2024-06-03T07:32:47.000Z","not_show":false,"description":"以下是对LFU和LRU算法的详细解释，并使用Golang、Java和C/C++实现这两个缓存淘汰算法。一、LRU（Least Recently Used）算法解释：LRU算法淘汰最近最少使用的缓存数据。实现LRU算法的常见方法是使用双向链表和哈希表。双向链表用于维护缓存数据的使用顺序，哈希表用...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2316,"minutes":8,"text":"8 分钟"},"slug":"doc/📚 计算机基础/Redis/rpkbuac4rqibc4w3","path":"docs/doc/📚 计算机基础/Redis/rpkbuac4rqibc4w3","filePath":"docs/doc/📚 计算机基础/Redis/rpkbuac4rqibc4w3.md","toc":[{"value":"一、LRU（Least Recently Used）算法","url":"#一lruleast-recently-used算法","depth":3},{"value":"Golang实现LRU算法","url":"#golang实现lru算法","depth":4},{"value":"Java实现LRU算法","url":"#java实现lru算法","depth":4},{"value":"C++实现LRU算法","url":"#c实现lru算法","depth":4},{"value":"二、LFU（Least Frequently Used）算法","url":"#二lfuleast-frequently-used算法","depth":3},{"value":"Golang实现LFU算法","url":"#golang实现lfu算法","depth":4},{"value":"Java实现LFU算法","url":"#java实现lfu算法","depth":4},{"value":"Java实现LFU算法","url":"#java实现lfu算法-1","depth":4},{"value":"C++实现LFU算法","url":"#c实现lfu算法","depth":4},{"value":"LRU（Least Recently Used）算法","url":"#lruleast-recently-used算法","depth":3},{"value":"LFU（Least Frequently Used）算法","url":"#lfuleast-frequently-used算法","depth":3},{"value":"使用场景","url":"#使用场景-2","depth":3},{"value":"总结","url":"#总结-14","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"LRU、LFU算法的代码实现","datePublished":"2024-05-24T08:12:43.000Z","dateModified":"2024-06-03T07:32:47.000Z","description":"以下是对LFU和LRU算法的详细解释，并使用Golang、Java和C/C++实现这两个缓存淘汰算法。一、LRU（Least Recently Used）算法解释：LRU算法淘汰最近最少使用的缓存数据。实现LRU算法的常见方法是使用双向链表和哈希表。双向链表用于维护缓存数据的使用顺序，哈希表用...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Redis/rpkbuac4rqibc4w3"}},{"title":"Redis面试高频问题🔥","date":"2024-05-24T07:38:11.000Z","urlname":"hee9hlritx0n8hcc","is_nav":false,"updated":"2024-06-03T07:31:59.000Z","not_show":false,"description":"一、什么是Redis？1. 什么是Redis？回答：Redis（Remote Dictionary Server）是一个开源的、基于内存的数据结构存储系统。它可以用作数据库、缓存和消息代理。Redis支持多种数据结构，如字符串（Strings）、散列（Hashes）、列表（Lists）、集合（...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":5974,"minutes":20,"text":"20 分钟"},"slug":"doc/📚 计算机基础/Redis/hee9hlritx0n8hcc","path":"docs/doc/📚 计算机基础/Redis/hee9hlritx0n8hcc","filePath":"docs/doc/📚 计算机基础/Redis/hee9hlritx0n8hcc.md","toc":[{"value":"一、什么是Redis？","url":"#一什么是redis","depth":3},{"value":"1. 什么是Redis？","url":"#1-什么是redis","depth":4},{"value":"2. Redis和Memcached有什么区别？","url":"#2-redis和memcached有什么区别","depth":4},{"value":"3. 为什么用Redis作为MySQL的缓存？","url":"#3-为什么用redis作为mysql的缓存","depth":4},{"value":"二、Redis 数据结构","url":"#二redis-数据结构","depth":3},{"value":"4. Redis数据类型以及使用场景分别是什么？","url":"#4-redis数据类型以及使用场景分别是什么","depth":4},{"value":"5. 五种常见的Redis数据类型是怎么实现的？","url":"#5-五种常见的redis数据类型是怎么实现的","depth":4},{"value":"三、Redis 线程模型","url":"#三redis-线程模型","depth":3},{"value":"6. Redis是单线程吗？","url":"#6-redis是单线程吗","depth":4},{"value":"7. Redis单线程模式是怎样的？","url":"#7-redis单线程模式是怎样的","depth":4},{"value":"8. Redis采用单线程为什么还这么快？","url":"#8-redis采用单线程为什么还这么快","depth":4},{"value":"9. Redis 6.0之前为什么使用单线程？","url":"#9-redis-60之前为什么使用单线程","depth":4},{"value":"10. Redis 6.0之后为什么引入了多线程？","url":"#10-redis-60之后为什么引入了多线程","depth":4},{"value":"四、Redis 持久化","url":"#四redis-持久化","depth":3},{"value":"11. Redis如何实现数据不丢失？","url":"#11-redis如何实现数据不丢失","depth":4},{"value":"12. AOF日志是如何实现的？","url":"#12-aof日志是如何实现的","depth":4},{"value":"13. RDB快照是如何实现的？","url":"#13-rdb快照是如何实现的","depth":4},{"value":"14. 为什么会有混合持久化？","url":"#14-为什么会有混合持久化","depth":4},{"value":"五、Redis 集群","url":"#五redis-集群","depth":3},{"value":"15. Redis如何实现服务高可用？","url":"#15-redis如何实现服务高可用","depth":4},{"value":"16. 集群脑裂导致数据丢失怎么办？","url":"#16-集群脑裂导致数据丢失怎么办","depth":4},{"value":"六、Redis 过期删除与内存淘汰","url":"#六redis-过期删除与内存淘汰","depth":3},{"value":"17. Redis使用的过期删除策略是什么？","url":"#17-redis使用的过期删除策略是什么","depth":4},{"value":"18. Redis持久化时，对过期键会如何处理？","url":"#18-redis持久化时对过期键会如何处理","depth":4},{"value":"19. Redis主从模式中，对过期键会如何处理？","url":"#19-redis主从模式中对过期键会如何处理","depth":4},{"value":"20. Redis内存满了，会发生什么？","url":"#20-redis内存满了会发生什么","depth":4},{"value":"21. Redis内存淘汰策略有哪些？","url":"#21-redis内存淘汰策略有哪些","depth":4},{"value":"22. LRU算法和LFU算法有什么区别？","url":"#22-lru算法和lfu算法有什么区别","depth":4},{"value":"七、Redis 缓存设计","url":"#七redis-缓存设计","depth":3},{"value":"23. 如何避免缓存雪崩、缓存击穿、缓存穿透？","url":"#23-如何避免缓存雪崩缓存击穿缓存穿透","depth":4},{"value":"24. 如何设计一个缓存策略，可以动态缓存热点数据？","url":"#24-如何设计一个缓存策略可以动态缓存热点数据","depth":4},{"value":"25. 说说常见的缓存更新策略？","url":"#25-说说常见的缓存更新策略","depth":4},{"value":"26. 如何保证缓存和数据库数据的一致性？","url":"#26-如何保证缓存和数据库数据的一致性","depth":4},{"value":"八、Redis 实战","url":"#八redis-实战","depth":3},{"value":"27. Redis如何实现延迟队列？","url":"#27-redis如何实现延迟队列","depth":4},{"value":"28. Redis的大key如何处理？","url":"#28-redis的大key如何处理","depth":4},{"value":"29. Redis管道有什么用？","url":"#29-redis管道有什么用","depth":4},{"value":"30. Redis事务支持回滚吗？","url":"#30-redis事务支持回滚吗","depth":4},{"value":"31. 如何用Redis实现分布式锁的？","url":"#31-如何用redis实现分布式锁的","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Redis面试高频问题🔥","datePublished":"2024-05-24T07:38:11.000Z","dateModified":"2024-06-03T07:31:59.000Z","description":"一、什么是Redis？1. 什么是Redis？回答：Redis（Remote Dictionary Server）是一个开源的、基于内存的数据结构存储系统。它可以用作数据库、缓存和消息代理。Redis支持多种数据结构，如字符串（Strings）、散列（Hashes）、列表（Lists）、集合（...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Redis/hee9hlritx0n8hcc"}},{"title":"MySQL面试必问（二）🔥","date":"2024-05-24T07:19:07.000Z","urlname":"qf6b0vmagi3cbnbv","is_nav":false,"updated":"2024-08-15T08:34:55.000Z","not_show":false,"description":"一、存储引擎MySQL有哪些常用的存储引擎？回答：InnoDB：默认存储引擎，支持ACID事务、外键、行级锁和自动崩溃恢复。适用于支持高并发事务处理和数据完整性要求高的应用。MyISAM：不支持事务和外键，使用表级锁，适用于读操作频繁、数据修改较少的应用。具有较高的读取性能。Memory：将数...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":6701,"minutes":22,"text":"22 分钟"},"slug":"doc/📚 计算机基础/MySQL/qf6b0vmagi3cbnbv","path":"docs/doc/📚 计算机基础/MySQL/qf6b0vmagi3cbnbv","filePath":"docs/doc/📚 计算机基础/MySQL/qf6b0vmagi3cbnbv.md","toc":[{"value":"一、存储引擎","url":"#一存储引擎","depth":1},{"value":"MySQL有哪些常用的存储引擎？","url":"#mysql有哪些常用的存储引擎","depth":3},{"value":"InnoDB和MyISAM的主要区别是什么？","url":"#innodb和myisam的主要区别是什么","depth":3},{"value":"InnoDB存储引擎的优势是什么？","url":"#innodb存储引擎的优势是什么","depth":3},{"value":"如何选择合适的存储引擎？","url":"#如何选择合适的存储引擎","depth":3},{"value":"二、索引","url":"#二索引","depth":1},{"value":"什么是索引？索引的作用是什么？","url":"#什么是索引索引的作用是什么","depth":3},{"value":"MySQL中的索引类型有哪些？","url":"#mysql中的索引类型有哪些","depth":3},{"value":"解释B树和B+树的区别及其在MySQL中的应用。","url":"#解释b树和b树的区别及其在mysql中的应用","depth":3},{"value":"什么是聚簇索引和非聚簇索引？","url":"#什么是聚簇索引和非聚簇索引","depth":3},{"value":"如何创建和删除索引？","url":"#如何创建和删除索引","depth":3},{"value":"如何查看表的索引？","url":"#如何查看表的索引","depth":3},{"value":"如何诊断和优化索引？","url":"#如何诊断和优化索引","depth":3},{"value":"三、锁机制","url":"#三锁机制","depth":1},{"value":"MySQL有哪些锁类型？","url":"#mysql有哪些锁类型","depth":3},{"value":"什么是行锁和表锁？","url":"#什么是行锁和表锁","depth":3},{"value":"什么是死锁？如何解决？","url":"#什么是死锁如何解决","depth":3},{"value":"InnoDB的行锁实现机制是什么？","url":"#innodb的行锁实现机制是什么","depth":3},{"value":"如何避免并发导致的锁等待和死锁？","url":"#如何避免并发导致的锁等待和死锁","depth":3},{"value":"四、事务与隔离级别","url":"#四事务与隔离级别","depth":1},{"value":"什么是事务？","url":"#什么是事务","depth":3},{"value":"事务的四大特性（ACID）是什么？","url":"#事务的四大特性acid是什么","depth":3},{"value":"MySQL有哪些事务隔离级别？","url":"#mysql有哪些事务隔离级别","depth":3},{"value":"各事务隔离级别的区别是什么？","url":"#各事务隔离级别的区别是什么","depth":3},{"value":"如何设置事务隔离级别？","url":"#如何设置事务隔离级别","depth":3},{"value":"什么是MVCC（多版本并发控制）？","url":"#什么是mvcc多版本并发控制","depth":3},{"value":"五、查询优化","url":"#五查询优化","depth":1},{"value":"什么是查询优化？","url":"#什么是查询优化","depth":3},{"value":"如何使用EXPLAIN分析查询？","url":"#如何使用explain分析查询","depth":3},{"value":"如何优化慢查询？","url":"#如何优化慢查询","depth":3},{"value":"常见的查询优化策略有哪些？","url":"#常见的查询优化策略有哪些","depth":3},{"value":"什么是覆盖索引？","url":"#什么是覆盖索引","depth":3},{"value":"六、备份与恢复","url":"#六备份与恢复","depth":1},{"value":"为什么要做数据库备份？","url":"#为什么要做数据库备份","depth":3},{"value":"MySQL有哪些备份方式？","url":"#mysql有哪些备份方式","depth":3},{"value":"如何恢复数据库？","url":"#如何恢复数据库","depth":3},{"value":"如何制定数据库备份策略？","url":"#如何制定数据库备份策略","depth":3},{"value":"如何验证备份的有效性？","url":"#如何验证备份的有效性","depth":3},{"value":"七、安全管理","url":"#七安全管理","depth":1},{"value":"如何加强MySQL数据库的安全性？","url":"#如何加强mysql数据库的安全性","depth":3},{"value":"如何配置MySQL的用户权限？","url":"#如何配置mysql的用户权限","depth":3},{"value":"如何启用SSL/TLS加密数据库连接？","url":"#如何启用ssltls加密数据库连接","depth":3},{"value":"如何启用审计日志？","url":"#如何启用审计日志","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"MySQL面试必问（二）🔥","datePublished":"2024-05-24T07:19:07.000Z","dateModified":"2024-08-15T08:34:55.000Z","description":"一、存储引擎MySQL有哪些常用的存储引擎？回答：InnoDB：默认存储引擎，支持ACID事务、外键、行级锁和自动崩溃恢复。适用于支持高并发事务处理和数据完整性要求高的应用。MyISAM：不支持事务和外键，使用表级锁，适用于读操作频繁、数据修改较少的应用。具有较高的读取性能。Memory：将数...\r","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/qf6b0vmagi3cbnbv"}},{"title":"TinywebServer面试题","date":"2024-05-24T05:05:34.000Z","urlname":"pnla5tghgsndtv2w","is_nav":false,"updated":"2024-06-21T09:07:50.000Z","not_show":false,"description":"本文介绍了TinywebServer项目中的一些面试题，涵盖项目介绍、线程池、并发模型、HTTP报文解析、定时器、日志系统以及压测等多个方面，旨在帮助读者更好地理解和掌握相关知识。","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1716527138699-b70488ac-8fa1-4a7b-94bb-4db25b435612.png","tags":[],"keywords":"TinywebServer面试题, 线程池, 并发模型, HTTP报文解析, 数据库登录注册, 压测","authors":["whitedew"],"type":"Post","readingTime":{"words":4586,"minutes":15,"text":"15 分钟"},"slug":"doc/🧰 实践项目/TinyWebServer/pnla5tghgsndtv2w","path":"docs/doc/🧰 实践项目/TinyWebServer/pnla5tghgsndtv2w","filePath":"docs/doc/🧰 实践项目/TinyWebServer/pnla5tghgsndtv2w.md","toc":[{"value":"面试题","url":"#面试题-1","depth":2},{"value":"项目介绍","url":"#项目介绍","depth":3},{"value":"线程池相关","url":"#线程池相关","depth":3},{"value":"并发模型相关","url":"#并发模型相关","depth":3},{"value":"HTTP报文解析相关","url":"#http报文解析相关","depth":3},{"value":"数据库登录注册相关","url":"#数据库登录注册相关","depth":3},{"value":"定时器相关","url":"#定时器相关","depth":3},{"value":"日志相关","url":"#日志相关","depth":3},{"value":"压测相关","url":"#压测相关","depth":3},{"value":"综合能力","url":"#综合能力","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"TinywebServer面试题","datePublished":"2024-05-24T05:05:34.000Z","dateModified":"2024-06-21T09:07:50.000Z","description":"本文介绍了TinywebServer项目中的一些面试题，涵盖项目介绍、线程池、并发模型、HTTP报文解析、定时器、日志系统以及压测等多个方面，旨在帮助读者更好地理解和掌握相关知识。","url":"https://offernow.cn/docs/doc/🧰 实践项目/TinyWebServer/pnla5tghgsndtv2w"}},{"title":"8.进程管理","date":"2024-05-24T05:04:10.000Z","urlname":"ho88cbpxgbc2gpnf","is_nav":false,"updated":"2024-05-28T09:42:31.000Z","not_show":false,"description":"“如果你要组织一个活动怎么办？你首先会想到，这个活动的流程是什么，需要配备哪些人员和物资，中途要不要休息，活动当前进行到哪里了……如果你是个精明的人，你大概会用表格把这些信息记录下来。同理，你运行一个应用程序时，操作系统也要记录这个应用程序使用多少内存，打开了什么文件，当有些资源不可用的时候要...","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1629729501290-e21d56f9-f2f7-4aad-a17b-07a01cc983c8.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":11265,"minutes":38,"text":"38 分钟"},"slug":"doc/📚 计算机基础/操作系统/🔥《手写操作系统》/ho88cbpxgbc2gpnf","path":"docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/ho88cbpxgbc2gpnf","filePath":"docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/ho88cbpxgbc2gpnf.md","toc":[{"value":"进程的结构","url":"#进程的结构","depth":1},{"value":"新建进程","url":"#新建进程","depth":1},{"value":"内核进程","url":"#内核进程","depth":2},{"value":"普通进程","url":"#普通进程","depth":2},{"value":"进程调度","url":"#进程调度","depth":1},{"value":"进程的状态","url":"#进程的状态","depth":2},{"value":"组织进程","url":"#组织进程","depth":2},{"value":"进程调度器的实现","url":"#进程调度器的实现","depth":2},{"value":"接口函数","url":"#接口函数","depth":3},{"value":"进程调度算法","url":"#进程调度算法","depth":3},{"value":"进程切换","url":"#进程切换","depth":3},{"value":"进程的等待与唤醒","url":"#进程的等待与唤醒","depth":1},{"value":"空转进程","url":"#空转进程","depth":1},{"value":"拓展：Linux进程调度","url":"#拓展linux进程调度","depth":1},{"value":"相关结构体","url":"#相关结构体","depth":2},{"value":"CFS调度器","url":"#cfs调度器","depth":2},{"value":"权重","url":"#权重","depth":3},{"value":"调度延迟","url":"#调度延迟","depth":3},{"value":"虚拟时间","url":"#虚拟时间","depth":3},{"value":"调度延迟","url":"#调度延迟-1","depth":3},{"value":"致谢","url":"#致谢-2","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"8.进程管理","datePublished":"2024-05-24T05:04:10.000Z","dateModified":"2024-05-28T09:42:31.000Z","description":"“如果你要组织一个活动怎么办？你首先会想到，这个活动的流程是什么，需要配备哪些人员和物资，中途要不要休息，活动当前进行到哪里了……如果你是个精明的人，你大概会用表格把这些信息记录下来。同理，你运行一个应用程序时，操作系统也要记录这个应用程序使用多少内存，打开了什么文件，当有些资源不可用的时候要...","url":"https://offernow.cn/docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/ho88cbpxgbc2gpnf"}},{"title":"6.同步(锁、信号量)底层原理","date":"2024-05-24T05:03:49.000Z","urlname":"zm4bp59ittrsp82l","is_nav":false,"updated":"2024-05-24T05:03:49.000Z","not_show":false,"description":"前言由于在接下来的学习内容中涉及到对信息、数据的同步，我们在开发操作系统的时候必须考虑到并发、多核情况下的同步问题，要想解决这些问题，实际应用中一般采用锁：原子变量、关中断、信号量、自旋锁。那么其底层如何实现的呢？——让我们跟着彭老师的讲解，一起学习！以对一个全局变量进行操作为例，下述代码是一...","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1628912426953-311742e9-adfb-45a8-8e0d-44c2b28cf1b1.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":4143,"minutes":14,"text":"14 分钟"},"slug":"doc/📚 计算机基础/操作系统/🔥《手写操作系统》/zm4bp59ittrsp82l","path":"docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/zm4bp59ittrsp82l","filePath":"docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/zm4bp59ittrsp82l.md","toc":[{"value":"前言","url":"#前言-9","depth":1},{"value":"原子操作","url":"#原子操作","depth":1},{"value":"关中断","url":"#关中断","depth":1},{"value":"自旋锁","url":"#自旋锁","depth":1},{"value":"信号量","url":"#信号量-1","depth":1},{"value":"拓展：Linux的同步机制","url":"#拓展linux的同步机制","depth":1},{"value":"补充：GCC内嵌汇编代码","url":"#补充gcc内嵌汇编代码","depth":1},{"value":"参考链接","url":"#参考链接-3","depth":1},{"value":"","url":"#-23","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6.同步(锁、信号量)底层原理","datePublished":"2024-05-24T05:03:49.000Z","dateModified":"2024-05-24T05:03:49.000Z","description":"前言由于在接下来的学习内容中涉及到对信息、数据的同步，我们在开发操作系统的时候必须考虑到并发、多核情况下的同步问题，要想解决这些问题，实际应用中一般采用锁：原子变量、关中断、信号量、自旋锁。那么其底层如何实现的呢？——让我们跟着彭老师的讲解，一起学习！以对一个全局变量进行操作为例，下述代码是一...","url":"https://offernow.cn/docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/zm4bp59ittrsp82l"}},{"title":"5.CPU工作模式与虚拟地址","date":"2024-05-24T05:03:39.000Z","urlname":"kcin2evo3gdwfeqr","is_nav":false,"updated":"2024-05-24T05:03:40.000Z","not_show":false,"description":"CPU工作模式按照CPU功能升级迭代的顺序，CPU的一共有三种工作模式：实模式、保护模式、长模式。在不同的工作模式下，CPU执行程序的方式不同，至于有什么不同以及为什么会造成不同，接着往下看。实模式(Real Mode)实模式，何为实？一是指运行的指令是真实的，没有权限区分；二是指运行的地址是...","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1628769463819-ed783625-6641-4c53-ba3e-dfa89658a115.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":7065,"minutes":24,"text":"24 分钟"},"slug":"doc/📚 计算机基础/操作系统/🔥《手写操作系统》/kcin2evo3gdwfeqr","path":"docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/kcin2evo3gdwfeqr","filePath":"docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/kcin2evo3gdwfeqr.md","toc":[{"value":"CPU工作模式","url":"#cpu工作模式","depth":1},{"value":"实模式(Real Mode)","url":"#实模式real-mode","depth":2},{"value":"内存寻址","url":"#内存寻址","depth":3},{"value":"执行中断","url":"#执行中断","depth":3},{"value":"保护模式","url":"#保护模式","depth":2},{"value":"内存寻址","url":"#内存寻址-1","depth":3},{"value":"平坦模型与分页","url":"#平坦模型与分页","depth":3},{"value":"执行中断","url":"#执行中断-1","depth":3},{"value":"开启保护模式","url":"#开启保护模式","depth":3},{"value":"小结","url":"#小结-8","depth":3},{"value":"长模式","url":"#长模式","depth":2},{"value":"内存寻址","url":"#内存寻址-2","depth":3},{"value":"开启长模式","url":"#开启长模式","depth":3},{"value":"虚拟地址","url":"#虚拟地址","depth":1},{"value":"基本概念","url":"#基本概念","depth":2},{"value":"页表","url":"#页表","depth":2},{"value":"MMU","url":"#mmu","depth":2},{"value":"保护模式","url":"#保护模式-1","depth":3},{"value":"长模式","url":"#长模式-1","depth":3},{"value":"页缺失","url":"#页缺失","depth":3},{"value":"进程隔离","url":"#进程隔离","depth":3},{"value":"如何获取内存视图？","url":"#如何获取内存视图","depth":2},{"value":"补充：缓存","url":"#补充缓存","depth":1},{"value":"参考链接","url":"#参考链接-2","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5.CPU工作模式与虚拟地址","datePublished":"2024-05-24T05:03:39.000Z","dateModified":"2024-05-24T05:03:40.000Z","description":"CPU工作模式按照CPU功能升级迭代的顺序，CPU的一共有三种工作模式：实模式、保护模式、长模式。在不同的工作模式下，CPU执行程序的方式不同，至于有什么不同以及为什么会造成不同，接着往下看。实模式(Real Mode)实模式，何为实？一是指运行的指令是真实的，没有权限区分；二是指运行的地址是...","url":"https://offernow.cn/docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/kcin2evo3gdwfeqr"}},{"title":"4.计算机怎么启动的？","date":"2024-05-24T05:03:10.000Z","urlname":"txgyg1ibyrbxh81k","is_nav":false,"updated":"2024-06-13T10:48:51.000Z","not_show":false,"description":"我一直有一个疑惑——计算机到底是怎么启动的？而且似乎有点矛盾——要想启动，就必须运行程序，但是计算机没开机怎么加载和运行程序呢？为了解决这个矛盾，工程师终于想出将一小段程序固化进一块存储设备，电脑只要开机就会开始执行这段程序。并且上节课中提到了BIOS、GRUB、BootLoader等概念，与...","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1628769545222-af9f1d70-32a7-43a5-9f99-2d32d3a34722.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":5245,"minutes":17,"text":"17 分钟"},"slug":"doc/📚 计算机基础/操作系统/🔥《手写操作系统》/txgyg1ibyrbxh81k","path":"docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/txgyg1ibyrbxh81k","filePath":"docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/txgyg1ibyrbxh81k.md","toc":[{"value":"Legacy启动流程","url":"#legacy启动流程","depth":1},{"value":"BIOS","url":"#bios","depth":2},{"value":"MBR与PBR","url":"#mbr与pbr","depth":2},{"value":"GRUB","url":"#grub","depth":2},{"value":"UEFI启动流程","url":"#uefi启动流程","depth":1},{"value":"GPT","url":"#gpt","depth":2},{"value":"UEFI","url":"#uefi","depth":2},{"value":"补充-文件系统","url":"#补充-文件系统","depth":1},{"value":"硬盘存储原理","url":"#硬盘存储原理","depth":2},{"value":"文件系统","url":"#文件系统","depth":2},{"value":"参考资料","url":"#参考资料-5","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4.计算机怎么启动的？","datePublished":"2024-05-24T05:03:10.000Z","dateModified":"2024-06-13T10:48:51.000Z","description":"我一直有一个疑惑——计算机到底是怎么启动的？而且似乎有点矛盾——要想启动，就必须运行程序，但是计算机没开机怎么加载和运行程序呢？为了解决这个矛盾，工程师终于想出将一小段程序固化进一块存储设备，电脑只要开机就会开始执行这段程序。并且上节课中提到了BIOS、GRUB、BootLoader等概念，与...","url":"https://offernow.cn/docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/txgyg1ibyrbxh81k"}},{"title":"3.开发环境与内核架构","date":"2024-05-24T05:03:01.000Z","urlname":"rgbxy15tudl9mcvw","is_nav":false,"updated":"2024-05-24T05:03:02.000Z","not_show":false,"description":"之前介绍了简单的Hello OS以及代码是如何运行的。接下来我们会真正动手开始往我们的Hello OS中增加功能，但是——操作系统架构是一个极其精细的活。如老话所言“凡事三思而后行”，虽说是手写操作系统，但也得先想清楚内核的细节、一步一步的来构建操作系统不是？这一次，我们先跟着彭老师的课程在M...","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1628769614112-3d6ae298-2e61-400c-a2ac-1ce9d2ee9604.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3842,"minutes":13,"text":"13 分钟"},"slug":"doc/📚 计算机基础/操作系统/🔥《手写操作系统》/rgbxy15tudl9mcvw","path":"docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/rgbxy15tudl9mcvw","filePath":"docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/rgbxy15tudl9mcvw.md","toc":[{"value":"环境建立","url":"#环境建立","depth":1},{"value":"准备工作","url":"#准备工作","depth":2},{"value":"新建虚拟机Ubuntu","url":"#新建虚拟机ubuntu","depth":3},{"value":"新建虚拟硬盘","url":"#新建虚拟硬盘","depth":3},{"value":"新建虚拟机COSMOS","url":"#新建虚拟机cosmos","depth":3},{"value":"安装GRUB","url":"#安装grub","depth":2},{"value":"启动COSMOS","url":"#启动cosmos","depth":2},{"value":"内核架构","url":"#内核架构","depth":1},{"value":"管理资源","url":"#管理资源","depth":2},{"value":"宏内核","url":"#宏内核","depth":2},{"value":"微内核","url":"#微内核","depth":2},{"value":"COSMOS","url":"#cosmos","depth":2},{"value":"Linux、Windows、MacOS","url":"#linuxwindowsmacos","depth":1},{"value":"参考资料","url":"#参考资料-4","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"3.开发环境与内核架构","datePublished":"2024-05-24T05:03:01.000Z","dateModified":"2024-05-24T05:03:02.000Z","description":"之前介绍了简单的Hello OS以及代码是如何运行的。接下来我们会真正动手开始往我们的Hello OS中增加功能，但是——操作系统架构是一个极其精细的活。如老话所言“凡事三思而后行”，虽说是手写操作系统，但也得先想清楚内核的细节、一步一步的来构建操作系统不是？这一次，我们先跟着彭老师的课程在M...","url":"https://offernow.cn/docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/rgbxy15tudl9mcvw"}},{"title":"2.代码是怎么运行起来的？","date":"2024-05-24T05:02:51.000Z","urlname":"eg1fdbxkz0713vyl","is_nav":false,"updated":"2024-05-24T05:02:52.000Z","not_show":false,"description":"从0和1到代码现在可以开始回答这个问题了：一个代码到底是怎么执行起来的？CPU内部到底是怎么工作的？电影片段里黑客出场时一般都少不了如下图所示的“数字雨”特效：我们先来看看计算机内部的基本元素“0”和“1”。0和1那么，计算机中的“0”和“1”到底是什么？简单，就是低电平和高电平的意思。啥意思...","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1628769032204-3786d029-f39b-48d4-a0ea-441e80a8bc4d.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":6458,"minutes":22,"text":"22 分钟"},"slug":"doc/📚 计算机基础/操作系统/🔥《手写操作系统》/eg1fdbxkz0713vyl","path":"docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/eg1fdbxkz0713vyl","filePath":"docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/eg1fdbxkz0713vyl.md","toc":[{"value":"从0和1到代码","url":"#从0和1到代码","depth":1},{"value":"0和1","url":"#0和1","depth":2},{"value":"二极管","url":"#二极管","depth":2},{"value":"逻辑运算与门电路","url":"#逻辑运算与门电路","depth":2},{"value":"加减乘除四则运算","url":"#加减乘除四则运算","depth":2},{"value":"寄存器","url":"#寄存器","depth":2},{"value":"译码器与选择器","url":"#译码器与选择器","depth":2},{"value":"“终”章","url":"#终章","depth":2},{"value":"计算机组成","url":"#计算机组成","depth":1},{"value":"CPU","url":"#cpu","depth":2},{"value":"存储器","url":"#存储器","depth":2},{"value":"IO设备","url":"#io设备","depth":2},{"value":"软件","url":"#软件","depth":2},{"value":"从沙子到CPU","url":"#从沙子到cpu","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"2.代码是怎么运行起来的？","datePublished":"2024-05-24T05:02:51.000Z","dateModified":"2024-05-24T05:02:52.000Z","description":"从0和1到代码现在可以开始回答这个问题了：一个代码到底是怎么执行起来的？CPU内部到底是怎么工作的？电影片段里黑客出场时一般都少不了如下图所示的“数字雨”特效：我们先来看看计算机内部的基本元素“0”和“1”。0和1那么，计算机中的“0”和“1”到底是什么？简单，就是低电平和高电平的意思。啥意思...","url":"https://offernow.cn/docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/eg1fdbxkz0713vyl"}},{"title":"1. HelloOS","date":"2024-05-24T05:02:41.000Z","urlname":"vg4gldsnlenfkq11","is_nav":false,"updated":"2024-06-21T09:32:59.000Z","not_show":false,"description":"了解代码是如何执行的，探讨CPU的工作原理，从基本的二极管、门电路到复杂的逻辑运算，深入解析计算机组成及其运行机制。由简单的Hello OS入手，最终码出一个属于自己的操作系统","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1628768372937-0c40859b-b4c8-47d3-8020-56d834c8fad9.png","tags":[],"keywords":"代码执行, CPU工作原理, 计算机组成, 二极管, 门电路, 逻辑运算","authors":["whitedew"],"type":"Post","readingTime":{"words":2331,"minutes":8,"text":"8 分钟"},"slug":"doc/📚 计算机基础/操作系统/🔥《手写操作系统》/vg4gldsnlenfkq11","path":"docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/vg4gldsnlenfkq11","filePath":"docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/vg4gldsnlenfkq11.md","toc":[{"value":"前言","url":"#前言-8","depth":1},{"value":"Hello OS","url":"#hello-os","depth":1},{"value":"引导程序","url":"#引导程序","depth":2},{"value":"环境准备","url":"#环境准备","depth":2},{"value":"下载源代码","url":"#下载源代码","depth":2},{"value":"编译操作系统","url":"#编译操作系统","depth":2},{"value":"流程","url":"#流程","depth":3},{"value":"编译","url":"#编译","depth":3},{"value":"安装","url":"#安装","depth":3},{"value":"失败？","url":"#失败","depth":3},{"value":"细节补充","url":"#细节补充","depth":1},{"value":"显卡与printf","url":"#显卡与printf","depth":2},{"value":"字符模式","url":"#字符模式","depth":3},{"value":"思考题","url":"#思考题-1","depth":1},{"value":"致谢","url":"#致谢-3","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"1. HelloOS","datePublished":"2024-05-24T05:02:41.000Z","dateModified":"2024-06-21T09:32:59.000Z","description":"了解代码是如何执行的，探讨CPU的工作原理，从基本的二极管、门电路到复杂的逻辑运算，深入解析计算机组成及其运行机制。由简单的Hello OS入手，最终码出一个属于自己的操作系统","url":"https://offernow.cn/docs/doc/📚 计算机基础/操作系统/🔥《手写操作系统》/vg4gldsnlenfkq11"}},{"title":"🔥《手写操作系统》","date":"2024-05-24T05:01:43.000Z","urlname":"tfhlw8c5gubnwfsb","is_nav":false,"nav_path":"hand_os","updated":"2024-06-21T09:30:37.000Z","skip_nav":false,"not_show":false,"description":"《手写操作系统》是一本关于计算机科学和操作系统编程的技术书籍。了解更多关于手写操作系统的详细信息。","tags":[],"keywords":"手写操作系统, 计算机科学, 操作系统, 编程, 技术书籍","authors":["whitedew"],"type":"Post","readingTime":{"words":0,"minutes":0,"text":"小于一分钟"},"slug":"doc/📚 计算机基础/操作系统/tfhlw8c5gubnwfsb","path":"docs/doc/📚 计算机基础/操作系统/tfhlw8c5gubnwfsb","filePath":"docs/doc/📚 计算机基础/操作系统/tfhlw8c5gubnwfsb.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"🔥《手写操作系统》","datePublished":"2024-05-24T05:01:43.000Z","dateModified":"2024-06-21T09:30:37.000Z","description":"《手写操作系统》是一本关于计算机科学和操作系统编程的技术书籍。了解更多关于手写操作系统的详细信息。","url":"https://offernow.cn/docs/doc/📚 计算机基础/操作系统/tfhlw8c5gubnwfsb"}},{"title":"一文搞懂Java注解","date":"2024-05-24T05:00:06.000Z","urlname":"kr08pwsfxwyvmygv","is_nav":false,"updated":"2024-05-28T04:28:26.000Z","not_show":false,"description":"Java注解是Java 5引入的一种新功能，用于为Java代码提供元数据。作为元数据，注解不直接影响代码的执行，但有些类型的注解可以用于此目的。注解为我们在代码中添加信息提供了一种形式化的方法，帮助我们更快捷地编写代码。注解的作用注解主要有以下四个作用：生成文档：将元数据生成为Javadoc文...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1147,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Java/kr08pwsfxwyvmygv","path":"docs/doc/💻 编程语言/Java/kr08pwsfxwyvmygv","filePath":"docs/doc/💻 编程语言/Java/kr08pwsfxwyvmygv.md","toc":[{"value":"注解的作用","url":"#注解的作用","depth":3},{"value":"Java提供的三种注解","url":"#java提供的三种注解","depth":3},{"value":"常见注解","url":"#常见注解","depth":3},{"value":"注解的生命周期","url":"#注解的生命周期","depth":3},{"value":"Spring的一些重要注解","url":"#spring的一些重要注解","depth":3},{"value":"依赖注入相关注解","url":"#依赖注入相关注解","depth":3},{"value":"其他常见注解","url":"#其他常见注解","depth":3},{"value":"@Qualifier与@Primary ","url":"#qualifier与primary-","depth":3},{"value":"@Scope设置作用域","url":"#scope设置作用域","depth":3},{"value":"@PostConstruct与@PreDestroy ","url":"#postconstruct与predestroy-","depth":3},{"value":"自定义注解","url":"#自定义注解","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"一文搞懂Java注解","datePublished":"2024-05-24T05:00:06.000Z","dateModified":"2024-05-28T04:28:26.000Z","description":"Java注解是Java 5引入的一种新功能，用于为Java代码提供元数据。作为元数据，注解不直接影响代码的执行，但有些类型的注解可以用于此目的。注解为我们在代码中添加信息提供了一种形式化的方法，帮助我们更快捷地编写代码。注解的作用注解主要有以下四个作用：生成文档：将元数据生成为Javadoc文...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/kr08pwsfxwyvmygv"}},{"title":"Java Spring三大特性","date":"2024-05-24T04:59:02.000Z","urlname":"bcuux2bqoe4r5e43","is_nav":false,"updated":"2024-05-28T04:28:14.000Z","not_show":false,"description":"本文主要讲述，Java 三大特性：IoC、DI、AOP。一、控制反转（IoC）1. 什么是控制反转控制反转（IoC，Inversion of Control）是一种设计思想，主要用于将对象的创建和控制权交给容器管理，而不是在对象内部主动控制。这种方式实现了高内聚、低耦合。传统模式：资源的主控权...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1090,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Java/bcuux2bqoe4r5e43","path":"docs/doc/💻 编程语言/Java/bcuux2bqoe4r5e43","filePath":"docs/doc/💻 编程语言/Java/bcuux2bqoe4r5e43.md","toc":[{"value":"一、控制反转（IoC）","url":"#一控制反转ioc","depth":2},{"value":"1. 什么是控制反转","url":"#1-什么是控制反转","depth":3},{"value":"2. IoC能做什么","url":"#2-ioc能做什么","depth":3},{"value":"3. IoC和DI","url":"#3-ioc和di","depth":3},{"value":"二、依赖注入（DI）","url":"#二依赖注入di","depth":2},{"value":"1. 什么是依赖注入","url":"#1-什么是依赖注入","depth":3},{"value":"2. DI的实例","url":"#2-di的实例","depth":3},{"value":"3. IoC和DI的关系","url":"#3-ioc和di的关系","depth":3},{"value":"三、AOP编程","url":"#三aop编程","depth":2},{"value":"1. 什么是AOP","url":"#1-什么是aop","depth":3},{"value":"2. AOP的优点","url":"#2-aop的优点","depth":3},{"value":"3. AOP术语","url":"#3-aop术语","depth":3},{"value":"4. AOP示例","url":"#4-aop示例","depth":3},{"value":"5. 总结","url":"#5-总结","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Java Spring三大特性","datePublished":"2024-05-24T04:59:02.000Z","dateModified":"2024-05-28T04:28:14.000Z","description":"本文主要讲述，Java 三大特性：IoC、DI、AOP。一、控制反转（IoC）1. 什么是控制反转控制反转（IoC，Inversion of Control）是一种设计思想，主要用于将对象的创建和控制权交给容器管理，而不是在对象内部主动控制。这种方式实现了高内聚、低耦合。传统模式：资源的主控权...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/bcuux2bqoe4r5e43"}},{"title":"👋 Java 集合类剖析","date":"2024-05-24T04:50:17.000Z","urlname":"dw3rk59616zfltq2","is_nav":false,"nav_path":"java-collections","updated":"2024-06-04T15:01:05.000Z","not_show":false,"description":"---nav_path: java-collections ---Java集合类的主要目的是创建一个简单的、高性能的数据结构操作框架。Java的集合框架围绕一组标准接口设计，根接口是数据集合（Collection）与键值映射表（Map），并基于这两个接口派生了多个子接口，实现包括数组、哈希表、...","cover":"https://cdn.nlark.com/yuque/0/2022/jpeg/22382235/1651227483857-b2d60627-7c5c-4894-b201-16761b2a52f8.jpeg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":3322,"minutes":11,"text":"11 分钟"},"slug":"doc/💻 编程语言/Java/dw3rk59616zfltq2","path":"docs/doc/💻 编程语言/Java/dw3rk59616zfltq2","filePath":"docs/doc/💻 编程语言/Java/dw3rk59616zfltq2.md","toc":[{"value":"Collection接口","url":"#collection接口","depth":1},{"value":"Iterable与Iterator","url":"#iterable与iterator","depth":2},{"value":"Iterable接口","url":"#iterable接口","depth":3},{"value":"Iterator接口","url":"#iterator接口","depth":3},{"value":"Collection的三个子接口","url":"#collection的三个子接口","depth":2},{"value":"List接口","url":"#list接口","depth":3},{"value":"ListIterator接口","url":"#listiterator接口","depth":3},{"value":"Vector类","url":"#vector类","depth":3},{"value":"Stack类","url":"#stack类","depth":3},{"value":"ArrayList类","url":"#arraylist类","depth":3},{"value":"LinkedList类","url":"#linkedlist类","depth":3},{"value":"ArrayList与LinkedList性能对比","url":"#arraylist与linkedlist性能对比","depth":3},{"value":"Set接口概述","url":"#set接口概述","depth":3},{"value":"HashSet类","url":"#hashset类","depth":3},{"value":"EnumSet类","url":"#enumset类","depth":3},{"value":"TreeSet类","url":"#treeset类","depth":3},{"value":"Queue接口","url":"#queue接口","depth":2},{"value":"Queue接口概述","url":"#queue接口概述","depth":3},{"value":"ArrayDeque类","url":"#arraydeque类","depth":3},{"value":"PriorityQueue类","url":"#priorityqueue类","depth":3},{"value":"Map接口","url":"#map接口","depth":1},{"value":"Map接口概述","url":"#map接口概述","depth":3},{"value":"Entry接口","url":"#entry接口","depth":3},{"value":"HashMap类","url":"#hashmap类","depth":3},{"value":"LinkedHashMap类","url":"#linkedhashmap类","depth":3},{"value":"TreeMap类","url":"#treemap类","depth":3},{"value":"判定相等","url":"#判定相等","depth":3},{"value":"TreeMap类的总结","url":"#treemap类的总结","depth":3},{"value":"WeakHashMap类","url":"#weakhashmap类","depth":3},{"value":"WeakHashMap的总结","url":"#weakhashmap的总结","depth":3},{"value":"IdentityHashMap类","url":"#identityhashmap类","depth":3},{"value":"IdentityHashMap的总结","url":"#identityhashmap的总结","depth":3},{"value":"总结","url":"#总结-2","depth":2},{"value":"Map实现类的性能分析及适用场景","url":"#map实现类的性能分析及适用场景","depth":3},{"value":"如何选择","url":"#如何选择","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"👋 Java 集合类剖析","datePublished":"2024-05-24T04:50:17.000Z","dateModified":"2024-06-04T15:01:05.000Z","description":"---nav_path: java-collections ---Java集合类的主要目的是创建一个简单的、高性能的数据结构操作框架。Java的集合框架围绕一组标准接口设计，根接口是数据集合（Collection）与键值映射表（Map），并基于这两个接口派生了多个子接口，实现包括数组、哈希表、...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/dw3rk59616zfltq2"}},{"title":"计网疑云","date":"2024-05-24T04:45:26.000Z","urlname":"traig2qo1kgs1ct7","is_nav":false,"updated":"2024-05-28T09:44:04.000Z","not_show":false,"description":"偶然看到一篇推文说“计算机网络的知识繁杂难懂，诸如不同层级的协议、特性相互联系又有所不同，要想学懂计算机网络就得抓住一条主线。”文中所说的主线是“一个数据包是如何发送出去的”。只有把握住了整个网络脉络主线才不至于被纷繁复杂的网络协议所搞晕，剩下的就是不断的细化，填充这些主干上的细枝末节。OSI...","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1712839608474-88ff4270-a531-468a-a41e-82d13d24e820.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":24983,"minutes":83,"text":"83 分钟"},"slug":"doc/📚 计算机基础/计算机网络/traig2qo1kgs1ct7","path":"docs/doc/📚 计算机基础/计算机网络/traig2qo1kgs1ct7","filePath":"docs/doc/📚 计算机基础/计算机网络/traig2qo1kgs1ct7.md","toc":[{"value":"OSI五层数据包的一生","url":"#osi五层数据包的一生","depth":1},{"value":"从IP到MAC，网络路由的详细过程","url":"#从ip到mac网络路由的详细过程","depth":1},{"value":"输入URL到显示过程中发生了什么？","url":"#输入url到显示过程中发生了什么","depth":1},{"value":"应用层","url":"#应用层","depth":1},{"value":"HTTP/S","url":"#https","depth":3},{"value":"Get和Post的区别","url":"#get和post的区别","depth":4},{"value":"HTTP可以用UDP","url":"#http可以用udp","depth":4},{"value":"HTTP的演变","url":"#http的演变","depth":4},{"value":"HTTP和HTTPS区别","url":"#http和https区别","depth":4},{"value":"HTTPS的优缺点","url":"#https的优缺点","depth":4},{"value":"HTTPS连接过程","url":"#https连接过程","depth":4},{"value":"CA证书怎么验证？","url":"#ca证书怎么验证","depth":4},{"value":"没有CA验证？","url":"#没有ca验证","depth":4},{"value":"数字证书和数字加密","url":"#数字证书和数字加密","depth":4},{"value":"DHCP","url":"#dhcp","depth":3},{"value":"传输层","url":"#传输层","depth":1},{"value":"TCP/UDP两者有何区别？","url":"#tcpudp两者有何区别","depth":2},{"value":"TCP","url":"#tcp","depth":2},{"value":"TCP报文","url":"#tcp报文","depth":3},{"value":"TCP的四种计时器","url":"#tcp的四种计时器","depth":3},{"value":"拥塞控制","url":"#拥塞控制","depth":3},{"value":"流量控制","url":"#流量控制","depth":3},{"value":"ACK等待时间及窗口","url":"#ack等待时间及窗口","depth":4},{"value":"三次握手与四次挥手","url":"#三次握手与四次挥手","depth":3},{"value":"Time_wait是2MSL呢？","url":"#time_wait是2msl呢","depth":3},{"value":"为什么三次握手、四次挥手？","url":"#为什么三次握手四次挥手","depth":3},{"value":"SYN_FLOOD的出现和解决方法","url":"#syn_flood的出现和解决方法","depth":3},{"value":"TCP保活机制","url":"#tcp保活机制","depth":3},{"value":"TIME_WAIT（即2MSL）有什么用？弊端在哪呢？","url":"#time_wait即2msl有什么用弊端在哪呢","depth":3},{"value":"TCP的沾包、半包问题，怎么解决呢？","url":"#tcp的沾包半包问题怎么解决呢","depth":3},{"value":"详述TCP可靠性是如何保证的","url":"#详述tcp可靠性是如何保证的","depth":3},{"value":"什么是TCP五元组？","url":"#什么是tcp五元组","depth":3},{"value":"什么是TCP fast open？","url":"#什么是tcp-fast-open","depth":3},{"value":"close_wait和TIME_wait?","url":"#close_wait和time_wait","depth":3},{"value":"TCP的流控和拥塞控制","url":"#tcp的流控和拥塞控制","depth":3},{"value":"Socket与TCP连接过程","url":"#socket与tcp连接过程","depth":3},{"value":"Socket与Udp编程","url":"#socket与udp编程","depth":3},{"value":"UDP","url":"#udp","depth":3},{"value":"传输方式","url":"#传输方式","depth":4},{"value":"发送和接收","url":"#发送和接收","depth":4},{"value":"UDP比TCP真的高效？","url":"#udp比tcp真的高效","depth":4},{"value":"UDP缓冲区","url":"#udp缓冲区","depth":4},{"value":"用UDP实现TCP：QUIC - Quick UDP Internet Connection","url":"#用udp实现tcpquic---quick-udp-internet-connection","depth":4},{"value":"TCP + TLS + HTTP/2 = UDP + QUIC + HTTP/2API","url":"#tcp--tls--http2--udp--quic--http2api","depth":4},{"value":"网络层","url":"#网络层","depth":1},{"value":"IP","url":"#ip","depth":3},{"value":"DNS","url":"#dns","depth":3},{"value":"ICMP","url":"#icmp","depth":3},{"value":"ARP协议","url":"#arp协议","depth":3},{"value":"IGMP","url":"#igmp","depth":3},{"value":"为什么使用IP地址通信?","url":"#为什么使用ip地址通信","depth":3},{"value":"IP****的三个历史阶段","url":"#ip的三个历史阶段","depth":3},{"value":"RIP路由协议","url":"#rip路由协议","depth":3},{"value":"硬件设备","url":"#硬件设备","depth":1},{"value":"中继器—物理层","url":"#中继器物理层","depth":2},{"value":"集线器（HUB）—物理层","url":"#集线器hub物理层","depth":2},{"value":"网桥—链路层","url":"#网桥链路层","depth":2},{"value":"交换机—链路层","url":"#交换机链路层","depth":2},{"value":"路由器—网络层","url":"#路由器网络层","depth":2},{"value":"面试常问","url":"#面试常问","depth":1},{"value":"短网址到长网址的解析","url":"#短网址到长网址的解析","depth":2},{"value":"Session、Token、Cookie","url":"#sessiontokencookie","depth":2},{"value":"Session如何保证负载均衡到同一用户的？","url":"#session如何保证负载均衡到同一用户的","depth":2},{"value":"从输入URL到页面展示到底发生了什么？","url":"#从输入url到页面展示到底发生了什么","depth":2},{"value":"负载均衡了解吗？","url":"#负载均衡了解吗","depth":2},{"value":"路由的原理？","url":"#路由的原理","depth":2},{"value":"路由表的信息及结构?","url":"#路由表的信息及结构","depth":2},{"value":"QQ微信是什么协议呢？","url":"#qq微信是什么协议呢","depth":2},{"value":"什么是Dos攻击？","url":"#什么是dos攻击","depth":2},{"value":"URI、URL、URN","url":"#uriurlurn","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"计网疑云","datePublished":"2024-05-24T04:45:26.000Z","dateModified":"2024-05-28T09:44:04.000Z","description":"偶然看到一篇推文说“计算机网络的知识繁杂难懂，诸如不同层级的协议、特性相互联系又有所不同，要想学懂计算机网络就得抓住一条主线。”文中所说的主线是“一个数据包是如何发送出去的”。只有把握住了整个网络脉络主线才不至于被纷繁复杂的网络协议所搞晕，剩下的就是不断的细化，填充这些主干上的细枝末节。OSI...","url":"https://offernow.cn/docs/doc/📚 计算机基础/计算机网络/traig2qo1kgs1ct7"}},{"title":"Redis源码阅读笔记","date":"2024-05-24T04:44:00.000Z","urlname":"gtg6lubgteg35gf3","is_nav":false,"updated":"2024-05-24T04:44:21.000Z","not_show":false,"description":"源码阅读方式建议：VScode打开Redis源码，结合黄健宏老师的《Redis设计与实现》，先理解概念，再回归代码。在阅读到数据库的具体实现时，建议在Linux系统下编译并运行Redis，对其的理解将更为直观。源码阅读顺序：阅读数据结构的源码阅读内存编码数据结构实现阅读数据类型的实现阅读单机数...","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1630549953915-4ba335be-d0ce-40d9-b622-35527e0631c4.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":34568,"minutes":115,"text":"115 分钟"},"slug":"doc/📚 计算机基础/Redis/gtg6lubgteg35gf3","path":"docs/doc/📚 计算机基础/Redis/gtg6lubgteg35gf3","filePath":"docs/doc/📚 计算机基础/Redis/gtg6lubgteg35gf3.md","toc":[{"value":"一、基本数据结构","url":"#一基本数据结构","depth":1},{"value":"动态字符串SDS","url":"#动态字符串sds","depth":2},{"value":"结构定义","url":"#结构定义","depth":3},{"value":"对比C字符串","url":"#对比c字符串","depth":3},{"value":"链表List","url":"#链表list","depth":2},{"value":"结构定义","url":"#结构定义-1","depth":3},{"value":"接口分析","url":"#接口分析","depth":3},{"value":"字典Dict","url":"#字典dict","depth":2},{"value":"结构定义","url":"#结构定义-2","depth":3},{"value":"接口分析","url":"#接口分析-1","depth":3},{"value":"迭代器","url":"#迭代器-1","depth":3},{"value":"跳跃表skiplist","url":"#跳跃表skiplist","depth":2},{"value":"结构定义","url":"#结构定义-3","depth":3},{"value":"查找、删除、添加","url":"#查找删除添加","depth":3},{"value":"接口分析","url":"#接口分析-2","depth":3},{"value":"补充：有序集合","url":"#补充有序集合","depth":3},{"value":"HyperLogLog","url":"#hyperloglog","depth":2},{"value":"算法细节","url":"#算法细节","depth":3},{"value":"密集存储","url":"#密集存储","depth":3},{"value":"稀疏存储","url":"#稀疏存储","depth":4},{"value":"计数缓存","url":"#计数缓存","depth":4},{"value":"二、内存编码数据结构的实现","url":"#二内存编码数据结构的实现","depth":1},{"value":"整数集合","url":"#整数集合","depth":2},{"value":"结构定义","url":"#结构定义-4","depth":3},{"value":"升级操作","url":"#升级操作","depth":3},{"value":"接口分析","url":"#接口分析-3","depth":3},{"value":"压缩列表","url":"#压缩列表","depth":2},{"value":"结构定义","url":"#结构定义-5","depth":3},{"value":"节点细节","url":"#节点细节","depth":3},{"value":"接口分析","url":"#接口分析-4","depth":3},{"value":"连锁更新","url":"#连锁更新","depth":3},{"value":"三、数据类型的实现","url":"#三数据类型的实现","depth":1},{"value":"字符串对象","url":"#字符串对象","depth":2},{"value":"列表对象","url":"#列表对象","depth":2},{"value":"哈希对象","url":"#哈希对象","depth":2},{"value":"集合对象","url":"#集合对象","depth":2},{"value":"有序集合对象","url":"#有序集合对象","depth":2},{"value":"Hyperloglog对象","url":"#hyperloglog对象","depth":2},{"value":"类型检查和多态","url":"#类型检查和多态","depth":2},{"value":"四、数据库实现","url":"#四数据库实现","depth":1},{"value":"数据库键空间","url":"#数据库键空间","depth":2},{"value":"生存/过期时间","url":"#生存过期时间","depth":3},{"value":"过期删除策略","url":"#过期删除策略","depth":3},{"value":"AOF、RDB、复制对过期键的处理","url":"#aofrdb复制对过期键的处理","depth":3},{"value":"通知与订阅","url":"#通知与订阅","depth":3},{"value":"持久化","url":"#持久化","depth":2},{"value":"RDB持久化","url":"#rdb持久化","depth":3},{"value":"AOF持久化","url":"#aof持久化","depth":3},{"value":"事件","url":"#事件","depth":2},{"value":"文件事件","url":"#文件事件","depth":3},{"value":"时间事件","url":"#时间事件","depth":3},{"value":"客户端","url":"#客户端","depth":2},{"value":"基本属性","url":"#基本属性","depth":3},{"value":"创建与关闭","url":"#创建与关闭","depth":3},{"value":"服务器","url":"#服务器","depth":2},{"value":"命令请求执行过程","url":"#命令请求执行过程","depth":3},{"value":"serverCron函数","url":"#servercron函数","depth":3},{"value":"五、多机数据库","url":"#五多机数据库","depth":1},{"value":"复制功能","url":"#复制功能","depth":2},{"value":"新旧版本的复制对比","url":"#新旧版本的复制对比","depth":3},{"value":"复制的全过程","url":"#复制的全过程","depth":3},{"value":"哨兵Sentinel","url":"#哨兵sentinel","depth":2},{"value":"介绍","url":"#介绍-3","depth":3},{"value":"初始化Sentinel","url":"#初始化sentinel","depth":3},{"value":"获取主从服务器信息","url":"#获取主从服务器信息","depth":3},{"value":"跟主从服务器交互","url":"#跟主从服务器交互","depth":3},{"value":"检查下线","url":"#检查下线","depth":3},{"value":"故障转移","url":"#故障转移","depth":3},{"value":"集群","url":"#集群-1","depth":2},{"value":"指派哈希槽","url":"#指派哈希槽","depth":3},{"value":"集群中如何执行命令","url":"#集群中如何执行命令","depth":3},{"value":"重新分片","url":"#重新分片","depth":3},{"value":"故障转移","url":"#故障转移-1","depth":3},{"value":"六.应用场景","url":"#六应用场景","depth":1},{"value":"Redis语法","url":"#redis语法","depth":2},{"value":"业务场景","url":"#业务场景","depth":2},{"value":"Redis6.0如何？","url":"#redis60如何","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Redis源码阅读笔记","datePublished":"2024-05-24T04:44:00.000Z","dateModified":"2024-05-24T04:44:21.000Z","description":"源码阅读方式建议：VScode打开Redis源码，结合黄健宏老师的《Redis设计与实现》，先理解概念，再回归代码。在阅读到数据库的具体实现时，建议在Linux系统下编译并运行Redis，对其的理解将更为直观。源码阅读顺序：阅读数据结构的源码阅读内存编码数据结构实现阅读数据类型的实现阅读单机数...","url":"https://offernow.cn/docs/doc/📚 计算机基础/Redis/gtg6lubgteg35gf3"}},{"title":"MySQL面试必问（一）🔥","date":"2024-05-24T04:43:33.000Z","urlname":"kewfeh2gmbrr6p0q","is_nav":false,"updated":"2024-08-15T08:34:48.000Z","not_show":false,"description":"数据库基础知识数据库三范式（3NF）简单来说，在关系型数据库汇总，三范式就是设计一个好的数据库所必须要遵循的一些规则。每列原子性（1NF）比如某一个数据表中有“地址”信息，但是实际业务场景下经常查询“地址”中的城市部分，那么就需要将“地址”拆分成多个部分来保存（否则的话，实际业务场景还需要在地...\r","cover":"https://cdn.nlark.com/yuque/0/2021/png/22382235/1630507852986-80aef639-4ae5-4f18-88d1-932c3606d05e.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":35593,"minutes":119,"text":"119 分钟"},"slug":"doc/📚 计算机基础/MySQL/kewfeh2gmbrr6p0q","path":"docs/doc/📚 计算机基础/MySQL/kewfeh2gmbrr6p0q","filePath":"docs/doc/📚 计算机基础/MySQL/kewfeh2gmbrr6p0q.md","toc":[{"value":"数据库基础知识","url":"#数据库基础知识","depth":1},{"value":"数据库三范式（3NF）","url":"#数据库三范式3nf","depth":2},{"value":"事务的特性","url":"#事务的特性","depth":2},{"value":"事务并发的问题？","url":"#事务并发的问题","depth":3},{"value":"事务隔离级别/读未提交/已提交","url":"#事务隔离级别读未提交已提交","depth":3},{"value":"锁的概念","url":"#锁的概念","depth":3},{"value":"索引","url":"#索引","depth":2},{"value":"建立索引的原则","url":"#建立索引的原则","depth":3},{"value":"索引的数据结构","url":"#索引的数据结构","depth":3},{"value":"索引分类","url":"#索引分类","depth":3},{"value":"索引设计原则及何时失效？","url":"#索引设计原则及何时失效","depth":3},{"value":"聚集索引和非聚集索引","url":"#聚集索引和非聚集索引","depth":3},{"value":"B Tree和B+Tree","url":"#b-tree和btree","depth":3},{"value":"B Tree","url":"#b-tree","depth":4},{"value":"B+Tree","url":"#btree","depth":4},{"value":"MySql","url":"#mysql","depth":1},{"value":"整体架构","url":"#整体架构","depth":2},{"value":"执行计划？","url":"#执行计划","depth":3},{"value":"查询语句执行流程？","url":"#查询语句执行流程","depth":3},{"value":"日志bin、redo、undo logo","url":"#日志binredoundo-logo","depth":3},{"value":"SQL语句","url":"#sql语句","depth":2},{"value":"exist和in","url":"#exist和in","depth":3},{"value":"int(10)与char(10)?","url":"#int10与char10","depth":3},{"value":"process list?","url":"#process-list","depth":3},{"value":"Mysql索引","url":"#mysql索引","depth":2},{"value":"索引哪些情况会失效","url":"#索引哪些情况会失效","depth":3},{"value":"索引不适合哪些场景","url":"#索引不适合哪些场景","depth":3},{"value":"SQL语句执行时间太长，如何优化？","url":"#sql语句执行时间太长如何优化","depth":3},{"value":"什么是回表？","url":"#什么是回表","depth":3},{"value":"什么是索引覆盖？","url":"#什么是索引覆盖","depth":3},{"value":"什么是索引下推？（或称ICP优化）","url":"#什么是索引下推或称icp优化","depth":3},{"value":"分库分表","url":"#分库分表","depth":2},{"value":"Innodb体系结构","url":"#innodb体系结构","depth":2},{"value":"Mysql两种数据引擎的区别","url":"#mysql两种数据引擎的区别","depth":2},{"value":"MVCC","url":"#mvcc","depth":2},{"value":"Readview","url":"#readview","depth":4},{"value":"MySQL避免幻读？","url":"#mysql避免幻读","depth":3},{"value":"快照读和当前读与幻读问题","url":"#快照读和当前读与幻读问题","depth":3},{"value":"数据库连接池（RAII）","url":"#数据库连接池raii","depth":2},{"value":"Redis","url":"#redis","depth":1},{"value":"在线Redis练习网站","url":"#在线redis练习网站","depth":2},{"value":"基本数据对象及底层结构","url":"#基本数据对象及底层结构","depth":2},{"value":"Redis事务以及ACID","url":"#redis事务以及acid","depth":2},{"value":"Redis为什么高效？","url":"#redis为什么高效","depth":2},{"value":"Lazy Free？","url":"#lazy-free","depth":3},{"value":"Redis引入多线程的原因","url":"#redis引入多线程的原因","depth":3},{"value":"使用场景？","url":"#使用场景-1","depth":2},{"value":"过期策略与内存淘汰","url":"#过期策略与内存淘汰","depth":2},{"value":"持久化方式","url":"#持久化方式","depth":2},{"value":"主从模式","url":"#主从模式","depth":2},{"value":"哨兵机制","url":"#哨兵机制","depth":2},{"value":"集群","url":"#集群","depth":2},{"value":"哈希槽映射","url":"#哈希槽映射","depth":3},{"value":"客户端怎么访问集群？","url":"#客户端怎么访问集群","depth":3},{"value":"哈希算法、一致性、hash槽","url":"#哈希算法一致性hash槽","depth":2},{"value":"缓存击穿、穿透、雪崩、布隆过滤器","url":"#缓存击穿穿透雪崩布隆过滤器","depth":2},{"value":"Redission分布式锁实现原理","url":"#redission分布式锁实现原理","depth":2},{"value":"如何优化分布式锁的性能？","url":"#如何优化分布式锁的性能","depth":2},{"value":"Zookeeper实现分布式锁","url":"#zookeeper实现分布式锁","depth":2},{"value":"什么是Zookeeper？","url":"#什么是zookeeper","depth":3},{"value":"实现分布式锁","url":"#实现分布式锁","depth":3},{"value":"如何保证缓存与数据库的一致性","url":"#如何保证缓存与数据库的一致性","depth":2},{"value":"常见面试题","url":"#常见面试题","depth":2},{"value":"Redis实现点赞、取消功能？","url":"#redis实现点赞取消功能","depth":3},{"value":"Redis与Memcache的区别","url":"#redis与memcache的区别","depth":3},{"value":"Mysql与Redis的区别","url":"#mysql与redis的区别","depth":3},{"value":"ElasticSearch","url":"#elasticsearch","depth":1},{"value":"基本原理","url":"#基本原理","depth":2},{"value":"FST（有限状态机","url":"#fst有限状态机","depth":2},{"value":"索引优化","url":"#索引优化","depth":2},{"value":"联合索引的原理","url":"#联合索引的原理","depth":2},{"value":"MongoDB","url":"#mongodb","depth":1},{"value":"MongoDB与Mysql的区别","url":"#mongodb与mysql的区别","depth":2},{"value":"应用场景","url":"#应用场景","depth":2},{"value":"MongoDB的应用场景","url":"#mongodb的应用场景","depth":3},{"value":"关系型数据库和非关系型数据库的应用场景对比","url":"#关系型数据库和非关系型数据库的应用场景对比","depth":3},{"value":"三种存储引擎","url":"#三种存储引擎","depth":2},{"value":"WiredTiger和LSM Tree","url":"#wiredtiger和lsm-tree","depth":2},{"value":"硬盘数据结构","url":"#硬盘数据结构","depth":2},{"value":"内存数据结构","url":"#内存数据结构","depth":2},{"value":"分片","url":"#分片","depth":2},{"value":"分片Key","url":"#分片key","depth":3},{"value":"分片策略","url":"#分片策略","depth":3},{"value":"MongoDB Change Stream","url":"#mongodb-change-stream","depth":2},{"value":"常见面试题","url":"#常见面试题-1","depth":1},{"value":"uuid与自增id的区别？雪花算法？分布式iD？","url":"#uuid与自增id的区别雪花算法分布式id","depth":2},{"value":"InnoDB如何解决幻读？","url":"#innodb如何解决幻读","depth":2},{"value":"缓存穿透、缓存雪崩、缓存击穿。","url":"#缓存穿透缓存雪崩缓存击穿","depth":2},{"value":"SQL注入","url":"#sql注入","depth":2},{"value":"布隆过滤器","url":"#布隆过滤器","depth":2},{"value":"为什么索引采用B+而不是平衡二叉树？","url":"#为什么索引采用b而不是平衡二叉树","depth":2},{"value":"Redis的分布式锁了解嘛？简单说一下？","url":"#redis的分布式锁了解嘛简单说一下","depth":2},{"value":"Redis的常用架构模式？","url":"#redis的常用架构模式","depth":2},{"value":"为什么不能用uuid作为唯一索引？","url":"#为什么不能用uuid作为唯一索引","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"MySQL面试必问（一）🔥","datePublished":"2024-05-24T04:43:33.000Z","dateModified":"2024-08-15T08:34:48.000Z","description":"数据库基础知识数据库三范式（3NF）简单来说，在关系型数据库汇总，三范式就是设计一个好的数据库所必须要遵循的一些规则。每列原子性（1NF）比如某一个数据表中有“地址”信息，但是实际业务场景下经常查询“地址”中的城市部分，那么就需要将“地址”拆分成多个部分来保存（否则的话，实际业务场景还需要在地...\r","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/kewfeh2gmbrr6p0q"}},{"title":"《操作系统随想录》","date":"2024-05-24T04:34:59.000Z","urlname":"kzeaege1xzso8hh8","is_nav":false,"updated":"2024-06-21T09:29:13.000Z","not_show":false,"description":"keywords: 操作系统，内存管理，进程，文件系统，IO管理，硬件设备操作系统这门课程，其实只有以下几个部分，内存管理、进程、文件、IO、网络、硬件设备，思维导图如下图所示：以下所有内容，均来自我当初校招求职时整理的资料，并备注转载链接，如有侵权请联系我处理。课前复习常问的操作系统问题，如...","cover":"https://cdn.nlark.com/yuque/0/2021/jpeg/22382235/1632813845745-81a4443b-8bd8-4d72-a7ea-291b0b49c2e4.jpeg","tags":[],"keywords":"操作系统，内存管理，进程，文件系统，IO管理，硬件设备","authors":["whitedew"],"type":"Post","readingTime":{"words":20009,"minutes":67,"text":"67 分钟"},"slug":"doc/📚 计算机基础/操作系统/kzeaege1xzso8hh8","path":"docs/doc/📚 计算机基础/操作系统/kzeaege1xzso8hh8","filePath":"docs/doc/📚 计算机基础/操作系统/kzeaege1xzso8hh8.md","toc":[{"value":"课前复习","url":"#课前复习","depth":1},{"value":"什么是操作系统？","url":"#什么是操作系统-2","depth":1},{"value":"内存管理","url":"#内存管理","depth":1},{"value":"连续与非连续管理","url":"#连续与非连续管理","depth":2},{"value":"分段和分页区别","url":"#分段和分页区别","depth":2},{"value":"逻辑地址/虚拟地址？物理地址？","url":"#逻辑地址虚拟地址物理地址","depth":2},{"value":"虚拟内存","url":"#虚拟内存","depth":2},{"value":"如何实现虚拟内存？","url":"#如何实现虚拟内存","depth":3},{"value":"CPU寻址与虚拟地址","url":"#cpu寻址与虚拟地址","depth":3},{"value":"MMU内部构造","url":"#mmu内部构造","depth":4},{"value":"TLB加速页查询机制","url":"#tlb加速页查询机制","depth":4},{"value":"分段下的虚拟地址","url":"#分段下的虚拟地址","depth":3},{"value":"分页下的虚拟地址","url":"#分页下的虚拟地址","depth":3},{"value":"多级页表的概念","url":"#多级页表的概念","depth":3},{"value":"页面置换算法？","url":"#页面置换算法","depth":3},{"value":"什么是颠簸现象","url":"#什么是颠簸现象","depth":3},{"value":"程序内存结构","url":"#程序内存结构","depth":3},{"value":"进程加载过程","url":"#进程加载过程","depth":3},{"value":"进程与线程","url":"#进程与线程","depth":1},{"value":"进程、线程与协程的区别","url":"#进程线程与协程的区别","depth":2},{"value":"进程构成与创建","url":"#进程构成与创建","depth":3},{"value":"进程创建过程 fork与exec","url":"#进程创建过程-fork与exec","depth":3},{"value":"进程栈的自动增长？","url":"#进程栈的自动增长","depth":3},{"value":"什么是协程","url":"#什么是协程","depth":3},{"value":"超线程是什么？","url":"#超线程是什么","depth":3},{"value":"进程与线程调度","url":"#进程与线程调度","depth":2},{"value":"僵尸/孤儿进程/init进程？","url":"#僵尸孤儿进程init进程","depth":3},{"value":"锁","url":"#锁","depth":3},{"value":"死锁的产生与预防","url":"#死锁的产生与预防","depth":3},{"value":"什么是银行家算法？","url":"#什么是银行家算法","depth":3},{"value":"","url":"#-13","depth":3},{"value":"抢占与非抢占式调度","url":"#抢占与非抢占式调度","depth":3},{"value":"经典调度算法","url":"#经典调度算法","depth":3},{"value":"多级反馈队列调度算法 Multilevel Feedback Queue（MLFQ）","url":"#多级反馈队列调度算法-multilevel-feedback-queuemlfq","depth":3},{"value":"优先级反转","url":"#优先级反转","depth":3},{"value":"线程切换和进程切换区别","url":"#线程切换和进程切换区别","depth":3},{"value":"进程间通信","url":"#进程间通信","depth":2},{"value":"管道","url":"#管道","depth":3},{"value":"共享内存","url":"#共享内存","depth":3},{"value":"信号量","url":"#信号量","depth":3},{"value":"信号","url":"#信号","depth":3},{"value":"线程间通信","url":"#线程间通信","depth":2},{"value":"文件系统/IO","url":"#文件系统io","depth":1},{"value":"零拷贝技术？Mmap？","url":"#零拷贝技术mmap","depth":2},{"value":"有哪些磁盘调度算法？","url":"#有哪些磁盘调度算法","depth":2},{"value":"文件的索引分配","url":"#文件的索引分配","depth":2},{"value":"GPT和MBR磁盘分区？","url":"#gpt和mbr磁盘分区","depth":2},{"value":"面试题","url":"#面试题","depth":1},{"value":"CPU内部结构","url":"#cpu内部结构","depth":2},{"value":"CPU的执行级别","url":"#cpu的执行级别","depth":2},{"value":"什么是系统调用？","url":"#什么是系统调用-2","depth":2},{"value":"中断和调用","url":"#中断和调用","depth":3},{"value":"中断向量表","url":"#中断向量表","depth":3},{"value":"CPU Cache与MESI","url":"#cpu-cache与mesi","depth":2},{"value":"什么是Cache","url":"#什么是cache","depth":3},{"value":"Cache如何定位数据","url":"#cache如何定位数据","depth":3},{"value":"Write Through与Write Back","url":"#write-through与write-back","depth":3},{"value":"缓存一致性协议MESI","url":"#缓存一致性协议mesi","depth":3},{"value":"内存屏障","url":"#内存屏障","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"《操作系统随想录》","datePublished":"2024-05-24T04:34:59.000Z","dateModified":"2024-06-21T09:29:13.000Z","description":"keywords: 操作系统，内存管理，进程，文件系统，IO管理，硬件设备操作系统这门课程，其实只有以下几个部分，内存管理、进程、文件、IO、网络、硬件设备，思维导图如下图所示：以下所有内容，均来自我当初校招求职时整理的资料，并备注转载链接，如有侵权请联系我处理。课前复习常问的操作系统问题，如...","url":"https://offernow.cn/docs/doc/📚 计算机基础/操作系统/kzeaege1xzso8hh8"}},{"title":"第12章 MySQL常用工具","date":"2024-05-24T04:21:44.000Z","urlname":"pogqdcgobu5gk60t","is_nav":false,"updated":"2024-06-27T11:37:15.000Z","not_show":false,"description":"MySQL的常用工具，包括MySQL Workbench、命令行工具以及其他一些有用的第三方工具。通过这些内容，你将学会如何高效地使用这些工具进行数据库管理和操作。12.1 MySQL Workbench12.1.1 简介MySQL Workbench是一款集成的可视化工具，用于数据库设计、开...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/d9d5503fce8c8f2def881b747762a7b3.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1331,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/MySQL/MySQL必知必会/pogqdcgobu5gk60t","path":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/pogqdcgobu5gk60t","filePath":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/pogqdcgobu5gk60t.md","toc":[{"value":"12.1 MySQL Workbench","url":"#121-mysql-workbench","depth":2},{"value":"12.1.1 简介","url":"#1211-简介","depth":3},{"value":"12.1.2 安装MySQL Workbench","url":"#1212-安装mysql-workbench","depth":3},{"value":"Windows系统","url":"#windows系统","depth":4},{"value":"macOS系统","url":"#macos系统","depth":4},{"value":"Linux系统","url":"#linux系统","depth":4},{"value":"12.1.3 使用MySQL Workbench","url":"#1213-使用mysql-workbench","depth":3},{"value":"创建新的数据库连接","url":"#创建新的数据库连接","depth":4},{"value":"管理数据库对象","url":"#管理数据库对象","depth":4},{"value":"查询和操作数据","url":"#查询和操作数据","depth":4},{"value":"12.1.4 MySQL Workbench图示","url":"#1214-mysql-workbench图示","depth":3},{"value":"MySQL Workbench图示","url":"#mysql-workbench图示","depth":4},{"value":"12.2 命令行工具","url":"#122-命令行工具","depth":2},{"value":"12.2.1 MySQL命令行客户端","url":"#1221-mysql命令行客户端","depth":3},{"value":"连接到MySQL服务器","url":"#连接到mysql服务器","depth":4},{"value":"连接到特定数据库","url":"#连接到特定数据库","depth":4},{"value":"12.2.2 常用命令","url":"#1222-常用命令","depth":3},{"value":"创建数据库","url":"#创建数据库","depth":4},{"value":"删除数据库","url":"#删除数据库","depth":4},{"value":"创建表","url":"#创建表","depth":4},{"value":"删除表","url":"#删除表","depth":4},{"value":"插入数据","url":"#插入数据-1","depth":4},{"value":"更新数据","url":"#更新数据","depth":4},{"value":"删除数据","url":"#删除数据","depth":4},{"value":"查询数据","url":"#查询数据-1","depth":4},{"value":"12.3 其他第三方工具","url":"#123-其他第三方工具","depth":2},{"value":"12.3.1 HeidiSQL","url":"#1231-heidisql","depth":3},{"value":"主要功能","url":"#主要功能","depth":4},{"value":"安装和使用","url":"#安装和使用","depth":4},{"value":"12.3.2 phpMyAdmin","url":"#1232-phpmyadmin","depth":3},{"value":"主要功能","url":"#主要功能-1","depth":4},{"value":"安装和使用","url":"#安装和使用-1","depth":4},{"value":"12.3.3 DBeaver","url":"#1233-dbeaver","depth":3},{"value":"主要功能","url":"#主要功能-2","depth":4},{"value":"安装和使用","url":"#安装和使用-2","depth":4},{"value":"12.4 常用工具图示","url":"#124-常用工具图示","depth":2},{"value":"常用工具图示","url":"#常用工具图示","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第12章 MySQL常用工具","datePublished":"2024-05-24T04:21:44.000Z","dateModified":"2024-06-27T11:37:15.000Z","description":"MySQL的常用工具，包括MySQL Workbench、命令行工具以及其他一些有用的第三方工具。通过这些内容，你将学会如何高效地使用这些工具进行数据库管理和操作。12.1 MySQL Workbench12.1.1 简介MySQL Workbench是一款集成的可视化工具，用于数据库设计、开...","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/MySQL必知必会/pogqdcgobu5gk60t"}},{"title":"第11章 MySQL性能优化","date":"2024-05-24T04:18:52.000Z","urlname":"lfe65y27k6wp1p0a","is_nav":false,"updated":"2024-06-27T11:36:48.000Z","not_show":false,"description":"MySQL的性能优化，包括查询优化、索引优化和数据库设计优化。通过这些内容，你将学会如何识别和解决性能瓶颈，提高数据库的运行效率，并理解MySQL查询优化器的工作原理。11.1 查询优化11.1.1 使用EXPLAIN分析查询EXPLAIN语句用于显示SQL查询的执行计划，帮助你理解查询的执行...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/5b56005966237fc1c4813ccbba0f1fa3.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1382,"minutes":5,"text":"5 分钟"},"slug":"doc/📚 计算机基础/MySQL/MySQL必知必会/lfe65y27k6wp1p0a","path":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/lfe65y27k6wp1p0a","filePath":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/lfe65y27k6wp1p0a.md","toc":[{"value":"11.1 查询优化","url":"#111-查询优化","depth":2},{"value":"11.1.1 使用EXPLAIN分析查询","url":"#1111-使用explain分析查询","depth":3},{"value":"语法","url":"#语法","depth":4},{"value":"示例","url":"#示例-36","depth":4},{"value":"解释EXPLAIN输出","url":"#解释explain输出","depth":4},{"value":"11.1.2 优化查询语句","url":"#1112-优化查询语句","depth":3},{"value":"避免全表扫描","url":"#避免全表扫描","depth":4},{"value":"避免SELECT *","url":"#避免select-","depth":4},{"value":"使用连接（JOIN）替代子查询","url":"#使用连接join替代子查询","depth":4},{"value":"11.1.3 索引优化","url":"#1113-索引优化","depth":3},{"value":"创建合适的索引","url":"#创建合适的索引","depth":4},{"value":"使用覆盖索引","url":"#使用覆盖索引","depth":4},{"value":"11.1.4 查询缓存","url":"#1114-查询缓存","depth":3},{"value":"11.2 索引优化","url":"#112-索引优化","depth":2},{"value":"11.2.1 创建和使用索引","url":"#1121-创建和使用索引","depth":3},{"value":"创建索引","url":"#创建索引","depth":4},{"value":"使用索引","url":"#使用索引","depth":4},{"value":"11.2.2 删除不必要的索引","url":"#1122-删除不必要的索引","depth":3},{"value":"删除索引","url":"#删除索引","depth":4},{"value":"11.2.3 索引优化图示","url":"#1123-索引优化图示","depth":3},{"value":"索引优化图示","url":"#索引优化图示","depth":4},{"value":"11.3 数据库设计优化","url":"#113-数据库设计优化","depth":2},{"value":"11.3.1 规范化","url":"#1131-规范化","depth":3},{"value":"第一范式（1NF）","url":"#第一范式1nf","depth":4},{"value":"第二范式（2NF）","url":"#第二范式2nf","depth":4},{"value":"第三范式（3NF）","url":"#第三范式3nf","depth":4},{"value":"11.3.2 反规范化","url":"#1132-反规范化","depth":3},{"value":"11.3.3 数据库设计优化图示","url":"#1133-数据库设计优化图示","depth":3},{"value":"数据库设计优化图示","url":"#数据库设计优化图示","depth":4},{"value":"11.4 底层原理：查询优化器的工作原理","url":"#114-底层原理查询优化器的工作原理","depth":2},{"value":"11.4.1 查询优化器的概述","url":"#1141-查询优化器的概述","depth":3},{"value":"11.4.2 优化器的工作流程","url":"#1142-优化器的工作流程","depth":3},{"value":"查询优化器工作流程图示","url":"#查询优化器工作流程图示","depth":3},{"value":"查询优化器工作流程图示","url":"#查询优化器工作流程图示-1","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第11章 MySQL性能优化","datePublished":"2024-05-24T04:18:52.000Z","dateModified":"2024-06-27T11:36:48.000Z","description":"MySQL的性能优化，包括查询优化、索引优化和数据库设计优化。通过这些内容，你将学会如何识别和解决性能瓶颈，提高数据库的运行效率，并理解MySQL查询优化器的工作原理。11.1 查询优化11.1.1 使用EXPLAIN分析查询EXPLAIN语句用于显示SQL查询的执行计划，帮助你理解查询的执行...","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/MySQL必知必会/lfe65y27k6wp1p0a"}},{"title":"第10章 MySQL用户管理与权限","date":"2024-05-24T04:17:00.000Z","urlname":"wcxhvtogvg6gsxc2","is_nav":false,"updated":"2024-06-27T11:36:30.000Z","not_show":false,"description":"MySQL的用户管理与权限系统，包括如何创建和删除用户、设置用户权限以及用户管理的最佳实践。通过这些内容，你将学会如何安全高效地管理数据库用户，并理解MySQL权限控制的实现机制。10.1 创建和删除用户10.1.1 创建用户使用CREATE USER语句创建新的数据库用户，并设置其登录凭证。...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/eb1987499e5fc06128a253439ff14a1a.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1142,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/MySQL/MySQL必知必会/wcxhvtogvg6gsxc2","path":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/wcxhvtogvg6gsxc2","filePath":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/wcxhvtogvg6gsxc2.md","toc":[{"value":"10.1 创建和删除用户","url":"#101-创建和删除用户","depth":2},{"value":"10.1.1 创建用户","url":"#1011-创建用户","depth":3},{"value":"语法","url":"#语法-13","depth":4},{"value":"示例","url":"#示例-56","depth":4},{"value":"10.1.2 删除用户","url":"#1012-删除用户","depth":3},{"value":"语法","url":"#语法-14","depth":4},{"value":"示例","url":"#示例-57","depth":4},{"value":"10.2 设置用户权限","url":"#102-设置用户权限","depth":2},{"value":"10.2.1 授予权限","url":"#1021-授予权限","depth":3},{"value":"语法","url":"#语法-15","depth":4},{"value":"示例","url":"#示例-58","depth":4},{"value":"10.2.2 撤销权限","url":"#1022-撤销权限","depth":3},{"value":"语法","url":"#语法-16","depth":4},{"value":"示例","url":"#示例-59","depth":4},{"value":"10.2.3 刷新权限","url":"#1023-刷新权限","depth":3},{"value":"10.3 显示用户权限","url":"#103-显示用户权限","depth":2},{"value":"语法","url":"#语法-17","depth":4},{"value":"示例","url":"#示例-60","depth":4},{"value":"10.4 用户管理的最佳实践","url":"#104-用户管理的最佳实践","depth":2},{"value":"10.4.1 使用强密码","url":"#1041-使用强密码","depth":3},{"value":"10.4.2 最小权限原则","url":"#1042-最小权限原则","depth":3},{"value":"10.4.3 定期审核权限","url":"#1043-定期审核权限","depth":3},{"value":"10.4.4 使用角色管理权限","url":"#1044-使用角色管理权限","depth":3},{"value":"创建角色","url":"#创建角色","depth":4},{"value":"授予角色权限","url":"#授予角色权限","depth":4},{"value":"将角色授予用户","url":"#将角色授予用户","depth":4},{"value":"10.5 底层原理：权限控制机制","url":"#105-底层原理权限控制机制","depth":2},{"value":"10.5.1 权限表","url":"#1051-权限表","depth":3},{"value":"10.5.2 权限检查过程","url":"#1052-权限检查过程","depth":3},{"value":"权限控制机制图示","url":"#权限控制机制图示","depth":3},{"value":"权限控制机制图示","url":"#权限控制机制图示-1","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第10章 MySQL用户管理与权限","datePublished":"2024-05-24T04:17:00.000Z","dateModified":"2024-06-27T11:36:30.000Z","description":"MySQL的用户管理与权限系统，包括如何创建和删除用户、设置用户权限以及用户管理的最佳实践。通过这些内容，你将学会如何安全高效地管理数据库用户，并理解MySQL权限控制的实现机制。10.1 创建和删除用户10.1.1 创建用户使用CREATE USER语句创建新的数据库用户，并设置其登录凭证。...","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/MySQL必知必会/wcxhvtogvg6gsxc2"}},{"title":"第9章 MySQL备份与恢复","date":"2024-05-24T04:15:29.000Z","urlname":"pigvhm70n8mbghmu","is_nav":false,"updated":"2024-06-27T11:36:12.000Z","not_show":false,"description":"MySQL的备份与恢复，包括备份数据的方法、恢复数据的步骤以及逻辑备份与物理备份的区别。通过这些内容，你将学会如何确保数据的安全和可恢复性，并理解MySQL备份与恢复的实现原理。为了更好地理解MySQL备份与恢复的实现原理，我们可以绘制了图片。9.1 备份数据备份是保护数据的重要手段，MySQ...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/a5d90415a400e1c9623afcb4fd31e153.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1071,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/MySQL/MySQL必知必会/pigvhm70n8mbghmu","path":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/pigvhm70n8mbghmu","filePath":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/pigvhm70n8mbghmu.md","toc":[{"value":"9.1.1 逻辑备份","url":"#911-逻辑备份","depth":3},{"value":"使用mysqldump工具","url":"#使用mysqldump工具","depth":4},{"value":"导出整个数据库","url":"#导出整个数据库","depth":4},{"value":"导出单个表","url":"#导出单个表","depth":4},{"value":"导出多个数据库","url":"#导出多个数据库","depth":4},{"value":"导出所有数据库","url":"#导出所有数据库","depth":4},{"value":"9.1.2 物理备份","url":"#912-物理备份","depth":3},{"value":"使用冷备份","url":"#使用冷备份","depth":4},{"value":"冷备份步骤","url":"#冷备份步骤","depth":4},{"value":"使用热备份","url":"#使用热备份","depth":4},{"value":"使用mysqlbackup工具","url":"#使用mysqlbackup工具","depth":4},{"value":"9.2 恢复数据","url":"#92-恢复数据","depth":2},{"value":"9.2.1 恢复逻辑备份","url":"#921-恢复逻辑备份","depth":3},{"value":"使用mysqldump工具恢复数据","url":"#使用mysqldump工具恢复数据","depth":4},{"value":"9.2.2 恢复物理备份","url":"#922-恢复物理备份","depth":3},{"value":"使用冷备份恢复数据","url":"#使用冷备份恢复数据","depth":4},{"value":"使用mysqlbackup工具恢复数据","url":"#使用mysqlbackup工具恢复数据","depth":4},{"value":"9.3 逻辑备份与物理备份的区别","url":"#93-逻辑备份与物理备份的区别","depth":2},{"value":"9.3.1 逻辑备份","url":"#931-逻辑备份","depth":3},{"value":"9.3.2 物理备份","url":"#932-物理备份","depth":3},{"value":"9.4 底层原理：逻辑备份与物理备份","url":"#94-底层原理逻辑备份与物理备份","depth":2},{"value":"9.4.1 逻辑备份的实现原理","url":"#941-逻辑备份的实现原理","depth":3},{"value":"9.4.2 物理备份的实现原理","url":"#942-物理备份的实现原理","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第9章 MySQL备份与恢复","datePublished":"2024-05-24T04:15:29.000Z","dateModified":"2024-06-27T11:36:12.000Z","description":"MySQL的备份与恢复，包括备份数据的方法、恢复数据的步骤以及逻辑备份与物理备份的区别。通过这些内容，你将学会如何确保数据的安全和可恢复性，并理解MySQL备份与恢复的实现原理。为了更好地理解MySQL备份与恢复的实现原理，我们可以绘制了图片。9.1 备份数据备份是保护数据的重要手段，MySQ...","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/MySQL必知必会/pigvhm70n8mbghmu"}},{"title":"第8章 MySQL存储引擎","date":"2024-05-24T04:14:31.000Z","urlname":"wfq73pht526qgytk","is_nav":false,"updated":"2024-06-27T11:29:00.000Z","not_show":false,"description":"本章将介绍MySQL的存储引擎，包括不同存储引擎的概述、特点、使用场景以及存储引擎的底层实现原理。通过这些内容，你将学会如何选择和使用最适合的存储引擎，并理解MySQL存储引擎的工作机制。8.1 存储引擎概述8.1.1 什么是存储引擎存储引擎是MySQL用于存储、处理和检索数据的模块。不同的存...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/2c8ad32b5ae3599765ae964abd3259a4.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1056,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/MySQL/MySQL必知必会/wfq73pht526qgytk","path":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/wfq73pht526qgytk","filePath":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/wfq73pht526qgytk.md","toc":[{"value":"8.1 存储引擎概述","url":"#81-存储引擎概述","depth":2},{"value":"8.1.1 什么是存储引擎","url":"#811-什么是存储引擎","depth":3},{"value":"8.1.2 查看可用存储引擎","url":"#812-查看可用存储引擎","depth":3},{"value":"8.2 InnoDB存储引擎","url":"#82-innodb存储引擎","depth":2},{"value":"8.2.1 InnoDB的概述","url":"#821-innodb的概述","depth":3},{"value":"8.2.2 InnoDB的特点","url":"#822-innodb的特点","depth":3},{"value":"8.2.3 使用InnoDB","url":"#823-使用innodb","depth":3},{"value":"创建InnoDB表","url":"#创建innodb表","depth":4},{"value":"修改表引擎为InnoDB","url":"#修改表引擎为innodb","depth":4},{"value":"8.3 MyISAM存储引擎","url":"#83-myisam存储引擎","depth":2},{"value":"8.3.1 MyISAM的概述","url":"#831-myisam的概述","depth":3},{"value":"8.3.2 MyISAM的特点","url":"#832-myisam的特点","depth":3},{"value":"8.3.3 使用MyISAM","url":"#833-使用myisam","depth":3},{"value":"创建MyISAM表","url":"#创建myisam表","depth":4},{"value":"修改表引擎为MyISAM","url":"#修改表引擎为myisam","depth":4},{"value":"8.4 MEMORY存储引擎","url":"#84-memory存储引擎","depth":2},{"value":"8.4.1 MEMORY的概述","url":"#841-memory的概述","depth":3},{"value":"8.4.2 MEMORY的特点","url":"#842-memory的特点","depth":3},{"value":"8.4.3 使用MEMORY","url":"#843-使用memory","depth":3},{"value":"创建MEMORY表","url":"#创建memory表","depth":4},{"value":"修改表引擎为MEMORY","url":"#修改表引擎为memory","depth":4},{"value":"8.5 底层原理：存储引擎的架构与实现","url":"#85-底层原理存储引擎的架构与实现","depth":2},{"value":"8.5.1 存储引擎的架构","url":"#851-存储引擎的架构","depth":3},{"value":"8.5.2 InnoDB的实现原理","url":"#852-innodb的实现原理","depth":3},{"value":"8.5.3 MyISAM的实现原理","url":"#853-myisam的实现原理","depth":3},{"value":"8.5.4 存储引擎架构图示","url":"#854-存储引擎架构图示","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第8章 MySQL存储引擎","datePublished":"2024-05-24T04:14:31.000Z","dateModified":"2024-06-27T11:29:00.000Z","description":"本章将介绍MySQL的存储引擎，包括不同存储引擎的概述、特点、使用场景以及存储引擎的底层实现原理。通过这些内容，你将学会如何选择和使用最适合的存储引擎，并理解MySQL存储引擎的工作机制。8.1 存储引擎概述8.1.1 什么是存储引擎存储引擎是MySQL用于存储、处理和检索数据的模块。不同的存...","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/MySQL必知必会/wfq73pht526qgytk"}},{"title":"MySQL必知必会","date":"2024-05-24T04:12:25.000Z","urlname":"dluq61e4yfx2q3sd","is_nav":false,"nav_path":"mysql_basic","updated":"2024-06-13T01:20:03.000Z","skip_nav":false,"not_show":false,"description":"---nav_path: mysql_basicskip_nav: false---MySQL入门教程目录 简介与安装 什么是MySQLMySQL的特点和优势MySQL的应用场景安装MySQL配置MySQL启动与停止MySQL服务 基本操作 连接数据库创建和删除数据库创建和删除表插入、更新和删...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":385,"minutes":1,"text":"1 分钟"},"slug":"doc/📚 计算机基础/MySQL/dluq61e4yfx2q3sd","path":"docs/doc/📚 计算机基础/MySQL/dluq61e4yfx2q3sd","filePath":"docs/doc/📚 计算机基础/MySQL/dluq61e4yfx2q3sd.md","toc":[{"value":"MySQL入门教程","url":"#mysql入门教程","depth":3},{"value":"目录","url":"#目录-1","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"MySQL必知必会","datePublished":"2024-05-24T04:12:25.000Z","dateModified":"2024-06-13T01:20:03.000Z","description":"---nav_path: mysql_basicskip_nav: false---MySQL入门教程目录 简介与安装 什么是MySQLMySQL的特点和优势MySQL的应用场景安装MySQL配置MySQL启动与停止MySQL服务 基本操作 连接数据库创建和删除数据库创建和删除表插入、更新和删...","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/dluq61e4yfx2q3sd"}},{"title":"Redis","date":"2024-05-24T04:12:12.000Z","urlname":"zk26wlg3ozzqospe","is_nav":true,"nav_path":"redis","updated":"2024-09-28T04:29:42.000Z","not_show":false,"description":"---is_nav: truenav_path: rediskeywords: redis教程,redis源码,redis面试问题---Redis 栏目介绍“Redis”栏目致力于为你提供全面的学习资源与深入的交流平台。一、学习知识基础数据结构：深入了解 Redis 的多种数据结构，如字符串（...","tags":[],"keywords":"redis教程,redis源码,redis面试问题","authors":["whitedew"],"type":"Post","readingTime":{"words":584,"minutes":2,"text":"2 分钟"},"slug":"doc/📚 计算机基础/zk26wlg3ozzqospe","path":"docs/doc/📚 计算机基础/zk26wlg3ozzqospe","filePath":"docs/doc/📚 计算机基础/zk26wlg3ozzqospe.md","toc":[{"value":"Redis 栏目介绍","url":"#redis-栏目介绍","depth":1},{"value":"一、学习知识","url":"#一学习知识-1","depth":3},{"value":"二、思考","url":"#二思考-1","depth":3},{"value":"三、面试题","url":"#三面试题-1","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Redis","datePublished":"2024-05-24T04:12:12.000Z","dateModified":"2024-09-28T04:29:42.000Z","description":"---is_nav: truenav_path: rediskeywords: redis教程,redis源码,redis面试问题---Redis 栏目介绍“Redis”栏目致力于为你提供全面的学习资源与深入的交流平台。一、学习知识基础数据结构：深入了解 Redis 的多种数据结构，如字符串（...","url":"https://offernow.cn/docs/doc/📚 计算机基础/zk26wlg3ozzqospe"}},{"title":"第7章 MySQL事务管理","date":"2024-05-24T04:11:44.000Z","urlname":"nuznm9xzxtg9fn0r","is_nav":false,"updated":"2024-06-27T11:25:46.000Z","not_show":false,"description":"MySQL的事务管理，包括事务的概念、ACID特性、事务的使用以及事务的底层实现原理。通过这些内容，你将学会如何在数据库中使用事务来确保数据的一致性和完整性，并理解MySQL事务的实现机制。7.1 事务的概念7.1.1 事务的定义事务（Transaction）是一个不可分割的工作单元，由一组S...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/e45b37cbd3abd81e343e51674e5cc364.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1149,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/MySQL/MySQL必知必会/nuznm9xzxtg9fn0r","path":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/nuznm9xzxtg9fn0r","filePath":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/nuznm9xzxtg9fn0r.md","toc":[{"value":"7.1 事务的概念","url":"#71-事务的概念","depth":2},{"value":"7.1.1 事务的定义","url":"#711-事务的定义","depth":3},{"value":"7.1.2 事务的ACID特性","url":"#712-事务的acid特性","depth":3},{"value":"7.2 事务的使用","url":"#72-事务的使用","depth":2},{"value":"7.2.1 开始事务","url":"#721-开始事务","depth":3},{"value":"7.2.2 提交事务","url":"#722-提交事务","depth":3},{"value":"7.2.3 回滚事务","url":"#723-回滚事务","depth":3},{"value":"7.2.4 示例","url":"#724-示例","depth":3},{"value":"7.3 事务的隔离级别","url":"#73-事务的隔离级别","depth":2},{"value":"7.3.1 隔离级别的概念","url":"#731-隔离级别的概念","depth":3},{"value":"7.3.2 设置隔离级别","url":"#732-设置隔离级别","depth":3},{"value":"7.3.3 示例","url":"#733-示例","depth":3},{"value":"7.4 底层原理：事务日志和两阶段提交","url":"#74-底层原理事务日志和两阶段提交","depth":2},{"value":"7.4.1 事务日志","url":"#741-事务日志","depth":3},{"value":"7.4.2 两阶段提交","url":"#742-两阶段提交","depth":3},{"value":"两阶段提交过程图示","url":"#两阶段提交过程图示","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第7章 MySQL事务管理","datePublished":"2024-05-24T04:11:44.000Z","dateModified":"2024-06-27T11:25:46.000Z","description":"MySQL的事务管理，包括事务的概念、ACID特性、事务的使用以及事务的底层实现原理。通过这些内容，你将学会如何在数据库中使用事务来确保数据的一致性和完整性，并理解MySQL事务的实现机制。7.1 事务的概念7.1.1 事务的定义事务（Transaction）是一个不可分割的工作单元，由一组S...","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/MySQL必知必会/nuznm9xzxtg9fn0r"}},{"title":"第6章 MySQL索引","date":"2024-05-24T04:11:07.000Z","urlname":"nphgk4npeh93y635","is_nav":false,"updated":"2024-06-27T11:15:56.000Z","not_show":false,"description":"MySQL的索引，包括什么是索引、如何创建和删除索引、索引的种类和使用场景。通过这些内容，你将学会如何使用索引来提高查询性能，并理解MySQL索引的实现原理。6.1 什么是索引6.1.1 索引的概述索引是一种用于加速数据检索的数据结构。通过索引，可以快速查找到表中符合条件的记录，而不必扫描整个...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/c4fa3515f34e474246c3e8da81251923.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":965,"minutes":3,"text":"3 分钟"},"slug":"doc/📚 计算机基础/MySQL/MySQL必知必会/nphgk4npeh93y635","path":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/nphgk4npeh93y635","filePath":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/nphgk4npeh93y635.md","toc":[{"value":"6.1 什么是索引","url":"#61-什么是索引","depth":2},{"value":"6.1.1 索引的概述","url":"#611-索引的概述","depth":3},{"value":"6.1.2 索引的工作原理","url":"#612-索引的工作原理","depth":3},{"value":"6.1.3 索引的优缺点","url":"#613-索引的优缺点","depth":3},{"value":"6.2 创建和删除索引","url":"#62-创建和删除索引","depth":2},{"value":"6.2.1 创建索引","url":"#621-创建索引","depth":3},{"value":"创建单列索引","url":"#创建单列索引","depth":4},{"value":"示例","url":"#示例-37","depth":4},{"value":"创建多列索引","url":"#创建多列索引","depth":4},{"value":"示例","url":"#示例-38","depth":4},{"value":"6.2.2 删除索引","url":"#622-删除索引","depth":3},{"value":"语法","url":"#语法-1","depth":4},{"value":"示例","url":"#示例-39","depth":4},{"value":"6.3 索引的种类和使用场景","url":"#63-索引的种类和使用场景","depth":2},{"value":"6.3.1 B树索引","url":"#631-b树索引","depth":3},{"value":"特点","url":"#特点-5","depth":4},{"value":"示例","url":"#示例-40","depth":4},{"value":"6.3.2 哈希索引","url":"#632-哈希索引","depth":3},{"value":"特点","url":"#特点-6","depth":4},{"value":"示例","url":"#示例-41","depth":4},{"value":"6.3.3 空间索引","url":"#633-空间索引","depth":3},{"value":"示例","url":"#示例-42","depth":4},{"value":"6.3.4 全文索引","url":"#634-全文索引","depth":3},{"value":"示例","url":"#示例-43","depth":4},{"value":"6.4 底层原理：B树和B+树索引的实现","url":"#64-底层原理b树和b树索引的实现","depth":2},{"value":"6.4.1 B树索引的实现原理","url":"#641-b树索引的实现原理","depth":3},{"value":"6.4.2 B+树索引的实现原理","url":"#642-b树索引的实现原理","depth":3},{"value":"6.4.3 B树与B+树的比较","url":"#643-b树与b树的比较","depth":3},{"value":"索引实现过程图示","url":"#索引实现过程图示","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第6章 MySQL索引","datePublished":"2024-05-24T04:11:07.000Z","dateModified":"2024-06-27T11:15:56.000Z","description":"MySQL的索引，包括什么是索引、如何创建和删除索引、索引的种类和使用场景。通过这些内容，你将学会如何使用索引来提高查询性能，并理解MySQL索引的实现原理。6.1 什么是索引6.1.1 索引的概述索引是一种用于加速数据检索的数据结构。通过索引，可以快速查找到表中符合条件的记录，而不必扫描整个...","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/MySQL必知必会/nphgk4npeh93y635"}},{"title":"第5章 MySQL主键、外键、唯一键","date":"2024-05-24T03:51:49.000Z","urlname":"wg57uzpv5k9xaawf","is_nav":false,"updated":"2024-06-27T11:05:58.000Z","not_show":false,"description":"MySQL的数据完整性，包括主键与外键、唯一约束与检查约束的使用。通过这些内容，你将学会如何在数据库中确保数据的准确性和一致性，并理解MySQL约束的实现机制。5.1 主键与外键5.1.1 主键（Primary Key）主键是表中一列或多列的组合，其值在表中必须唯一，并且不能为NULL。主键用...","cover":"https://cdn.nlark.com/yuque/__puml/7a724dba78148d402dc8940a912054b2.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":811,"minutes":3,"text":"3 分钟"},"slug":"doc/📚 计算机基础/MySQL/MySQL必知必会/wg57uzpv5k9xaawf","path":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/wg57uzpv5k9xaawf","filePath":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/wg57uzpv5k9xaawf.md","toc":[{"value":"5.1 主键与外键","url":"#51-主键与外键","depth":2},{"value":"5.1.1 主键（Primary Key）","url":"#511-主键primary-key","depth":3},{"value":"创建主键","url":"#创建主键","depth":4},{"value":"添加主键","url":"#添加主键","depth":4},{"value":"删除主键","url":"#删除主键","depth":4},{"value":"5.1.2 外键（Foreign Key）","url":"#512-外键foreign-key","depth":3},{"value":"创建外键","url":"#创建外键","depth":4},{"value":"添加外键","url":"#添加外键","depth":4},{"value":"删除外键","url":"#删除外键","depth":4},{"value":"5.1.3 底层原理：约束的实现机制","url":"#513-底层原理约束的实现机制","depth":3},{"value":"约束实现过程图示","url":"#约束实现过程图示","depth":4},{"value":"5.2 唯一约束","url":"#52-唯一约束","depth":2},{"value":"5.2.1 唯一约束（Unique Key）","url":"#521-唯一约束unique-key","depth":3},{"value":"创建唯一约束","url":"#创建唯一约束","depth":4},{"value":"添加唯一约束","url":"#添加唯一约束","depth":4},{"value":"删除唯一约束","url":"#删除唯一约束","depth":4},{"value":"5.2.2 底层原理:唯一约束","url":"#522-底层原理唯一约束","depth":3},{"value":"5.3.1 检查约束（Check Constraint）","url":"#531-检查约束check-constraint","depth":3},{"value":"创建检查约束","url":"#创建检查约束","depth":4},{"value":"添加检查约束","url":"#添加检查约束","depth":4},{"value":"删除检查约束","url":"#删除检查约束","depth":4},{"value":"5.3.2 底层原理:约束的实现机制","url":"#532-底层原理约束的实现机制","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第5章 MySQL主键、外键、唯一键","datePublished":"2024-05-24T03:51:49.000Z","dateModified":"2024-06-27T11:05:58.000Z","description":"MySQL的数据完整性，包括主键与外键、唯一约束与检查约束的使用。通过这些内容，你将学会如何在数据库中确保数据的准确性和一致性，并理解MySQL约束的实现机制。5.1 主键与外键5.1.1 主键（Primary Key）主键是表中一列或多列的组合，其值在表中必须唯一，并且不能为NULL。主键用...","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/MySQL必知必会/wg57uzpv5k9xaawf"}},{"title":"第4章 MySQL高级查询","date":"2024-05-24T03:40:07.000Z","urlname":"sopmax1eeghv3smd","is_nav":false,"updated":"2024-06-27T10:51:36.000Z","not_show":false,"description":"MySQL的高级查询，包括联合查询（JOIN）、子查询和视图的使用。通过这些内容，你将学会如何进行复杂的数据查询和操作，并理解MySQL高级查询的实现原理。4.1 联合查询（JOIN）4.1.1 联合查询的概述联合查询用于从多个表中检索数据。MySQL支持多种类型的联合查询，包括内连接（INN...","cover":"https://cdn.nlark.com/yuque/__puml/a33ebc8326fd5e0b056af13876f9b19c.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1080,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/MySQL/MySQL必知必会/sopmax1eeghv3smd","path":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/sopmax1eeghv3smd","filePath":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/sopmax1eeghv3smd.md","toc":[{"value":"4.1 联合查询（JOIN）","url":"#41-联合查询join","depth":2},{"value":"4.1.1 联合查询的概述","url":"#411-联合查询的概述","depth":3},{"value":"4.1.2 内连接（INNER JOIN）","url":"#412-内连接inner-join","depth":3},{"value":"语法","url":"#语法-2","depth":4},{"value":"示例","url":"#示例-44","depth":4},{"value":"4.1.3 左连接（LEFT JOIN）","url":"#413-左连接left-join","depth":3},{"value":"语法","url":"#语法-3","depth":4},{"value":"示例","url":"#示例-45","depth":4},{"value":"4.1.4 右连接（RIGHT JOIN）","url":"#414-右连接right-join","depth":3},{"value":"语法","url":"#语法-4","depth":4},{"value":"示例","url":"#示例-46","depth":4},{"value":"4.1.5 全连接（FULL JOIN）","url":"#415-全连接full-join","depth":3},{"value":"语法","url":"#语法-5","depth":4},{"value":"示例","url":"#示例-47","depth":4},{"value":"4.1.6 底层原理：JOIN操作的实现","url":"#416-底层原理join操作的实现","depth":3},{"value":"JOIN操作过程图示","url":"#join操作过程图示","depth":3},{"value":"4.2 子查询","url":"#42-子查询","depth":2},{"value":"4.2.1 子查询的概述","url":"#421-子查询的概述","depth":3},{"value":"4.2.2 使用子查询的SELECT语句","url":"#422-使用子查询的select语句","depth":3},{"value":"语法","url":"#语法-6","depth":4},{"value":"示例","url":"#示例-48","depth":4},{"value":"4.2.3 使用子查询的INSERT语句","url":"#423-使用子查询的insert语句","depth":3},{"value":"语法","url":"#语法-7","depth":4},{"value":"示例","url":"#示例-49","depth":4},{"value":"4.2.4 使用子查询的UPDATE语句","url":"#424-使用子查询的update语句","depth":3},{"value":"语法","url":"#语法-8","depth":4},{"value":"示例","url":"#示例-50","depth":4},{"value":"4.2.5 使用子查询的DELETE语句","url":"#425-使用子查询的delete语句","depth":3},{"value":"语法","url":"#语法-9","depth":4},{"value":"示例","url":"#示例-51","depth":4},{"value":"4.3 视图","url":"#43-视图","depth":2},{"value":"4.3.1 视图的概述","url":"#431-视图的概述","depth":3},{"value":"4.3.2 创建视图","url":"#432-创建视图","depth":3},{"value":"语法","url":"#语法-10","depth":4},{"value":"示例","url":"#示例-52","depth":4},{"value":"4.3.3 查询视图","url":"#433-查询视图","depth":3},{"value":"语法","url":"#语法-11","depth":4},{"value":"示例","url":"#示例-53","depth":4},{"value":"4.3.4 更新视图","url":"#434-更新视图","depth":3},{"value":"示例","url":"#示例-54","depth":4},{"value":"4.3.5 删除视图","url":"#435-删除视图","depth":3},{"value":"语法","url":"#语法-12","depth":4},{"value":"示例","url":"#示例-55","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第4章 MySQL高级查询","datePublished":"2024-05-24T03:40:07.000Z","dateModified":"2024-06-27T10:51:36.000Z","description":"MySQL的高级查询，包括联合查询（JOIN）、子查询和视图的使用。通过这些内容，你将学会如何进行复杂的数据查询和操作，并理解MySQL高级查询的实现原理。4.1 联合查询（JOIN）4.1.1 联合查询的概述联合查询用于从多个表中检索数据。MySQL支持多种类型的联合查询，包括内连接（INN...","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/MySQL必知必会/sopmax1eeghv3smd"}},{"title":"第3章 MySQL查询数据","date":"2024-05-24T03:33:04.000Z","urlname":"aatkm5bcecwh82zb","is_nav":false,"updated":"2024-06-27T10:50:40.000Z","not_show":false,"description":"MySQL的数据查询，包括基本查询语法、条件查询、排序与分页、聚合函数与分组查询等内容。通过这些内容，你将学会如何从数据库中检索所需的数据，并理解MySQL查询的执行过程。3.1 基本查询语法3.1.1 SELECT语句SELECT语句用于从数据库中检索数据。最简单的查询语法如下：SELECT...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/b3ff23ead9cd81425fe8cd9a239730e2.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1119,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/MySQL/MySQL必知必会/aatkm5bcecwh82zb","path":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/aatkm5bcecwh82zb","filePath":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/aatkm5bcecwh82zb.md","toc":[{"value":"3.1 基本查询语法","url":"#31-基本查询语法","depth":2},{"value":"3.1.1 SELECT语句","url":"#311-select语句","depth":3},{"value":"示例","url":"#示例-26","depth":4},{"value":"3.1.2 查询所有列","url":"#312-查询所有列","depth":3},{"value":"示例","url":"#示例-27","depth":4},{"value":"3.2 条件查询","url":"#32-条件查询","depth":2},{"value":"3.2.1 WHERE子句","url":"#321-where子句","depth":3},{"value":"示例","url":"#示例-28","depth":4},{"value":"3.2.2 常见条件运算符","url":"#322-常见条件运算符","depth":3},{"value":"示例","url":"#示例-29","depth":4},{"value":"3.2.3 逻辑运算符","url":"#323-逻辑运算符","depth":3},{"value":"示例","url":"#示例-30","depth":4},{"value":"3.3 排序与分页","url":"#33-排序与分页","depth":2},{"value":"3.3.1 ORDER BY子句","url":"#331-order-by子句","depth":3},{"value":"示例","url":"#示例-31","depth":4},{"value":"3.3.2 LIMIT子句","url":"#332-limit子句","depth":3},{"value":"示例","url":"#示例-32","depth":4},{"value":"3.4 聚合函数与分组查询","url":"#34-聚合函数与分组查询","depth":2},{"value":"3.4.1 聚合函数","url":"#341-聚合函数","depth":3},{"value":"示例","url":"#示例-33","depth":4},{"value":"3.4.2 GROUP BY子句","url":"#342-group-by子句","depth":3},{"value":"示例","url":"#示例-34","depth":4},{"value":"3.4.3 HAVING子句","url":"#343-having子句","depth":3},{"value":"示例","url":"#示例-35","depth":4},{"value":"3.5 底层原理：查询执行过程","url":"#35-底层原理查询执行过程","depth":2},{"value":"3.5.1 查询优化器","url":"#351-查询优化器","depth":3},{"value":"查询优化的主要步骤","url":"#查询优化的主要步骤","depth":4},{"value":"3.5.2 查询执行计划","url":"#352-查询执行计划","depth":3},{"value":"3.5.3 查询执行过程图示","url":"#353-查询执行过程图示","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第3章 MySQL查询数据","datePublished":"2024-05-24T03:33:04.000Z","dateModified":"2024-06-27T10:50:40.000Z","description":"MySQL的数据查询，包括基本查询语法、条件查询、排序与分页、聚合函数与分组查询等内容。通过这些内容，你将学会如何从数据库中检索所需的数据，并理解MySQL查询的执行过程。3.1 基本查询语法3.1.1 SELECT语句SELECT语句用于从数据库中检索数据。最简单的查询语法如下：SELECT...","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/MySQL必知必会/aatkm5bcecwh82zb"}},{"title":"第2章 MySQL基本操作","date":"2024-05-24T03:31:15.000Z","urlname":"pz0w9p1xmrhrw4vc","is_nav":false,"updated":"2024-06-27T10:50:10.000Z","not_show":false,"description":"MySQL的基本操作，包括如何连接数据库、创建和删除数据库、创建和删除表，以及插入、更新和删除数据。这些操作是使用MySQL进行数据管理的基础。2.1 连接数据库2.1.1 使用MySQL命令行客户端连接数据库启动MySQL命令行客户端mysql -u root -p-u root：指定用户名...","cover":"https://cdn.nlark.com/yuque/__puml/3ee2c7e3b83a484ac20acb8b2eb6770c.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1309,"minutes":4,"text":"4 分钟"},"slug":"doc/📚 计算机基础/MySQL/MySQL必知必会/pz0w9p1xmrhrw4vc","path":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/pz0w9p1xmrhrw4vc","filePath":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/pz0w9p1xmrhrw4vc.md","toc":[{"value":"2.1 连接数据库","url":"#21-连接数据库","depth":2},{"value":"2.1.1 使用MySQL命令行客户端连接数据库","url":"#211-使用mysql命令行客户端连接数据库","depth":3},{"value":"启动MySQL命令行客户端","url":"#启动mysql命令行客户端","depth":4},{"value":"连接到特定数据库","url":"#连接到特定数据库-1","depth":4},{"value":"2.1.2 使用MySQL Workbench连接数据库","url":"#212-使用mysql-workbench连接数据库","depth":3},{"value":"打开MySQL Workbench","url":"#打开mysql-workbench","depth":4},{"value":"连接到数据库","url":"#连接到数据库","depth":4},{"value":"2.2 创建和删除数据库","url":"#22-创建和删除数据库","depth":2},{"value":"2.2.1 创建数据库","url":"#221-创建数据库","depth":3},{"value":"使用命令行客户端创建数据库","url":"#使用命令行客户端创建数据库","depth":4},{"value":"使用MySQL Workbench创建数据库","url":"#使用mysql-workbench创建数据库","depth":4},{"value":"2.2.2 删除数据库","url":"#222-删除数据库","depth":3},{"value":"使用命令行客户端删除数据库","url":"#使用命令行客户端删除数据库","depth":4},{"value":"使用MySQL Workbench删除数据库","url":"#使用mysql-workbench删除数据库","depth":4},{"value":"2.3 创建和删除表","url":"#23-创建和删除表","depth":2},{"value":"2.3.1 创建表","url":"#231-创建表","depth":3},{"value":"使用命令行客户端创建表","url":"#使用命令行客户端创建表","depth":4},{"value":"使用MySQL Workbench创建表","url":"#使用mysql-workbench创建表","depth":4},{"value":"2.3.2 删除表","url":"#232-删除表","depth":3},{"value":"使用命令行客户端删除表","url":"#使用命令行客户端删除表","depth":4},{"value":"使用MySQL Workbench删除表","url":"#使用mysql-workbench删除表","depth":4},{"value":"2.4 插入、更新和删除数据","url":"#24-插入更新和删除数据","depth":2},{"value":"2.4.1 插入数据","url":"#241-插入数据","depth":3},{"value":"使用命令行客户端插入数据","url":"#使用命令行客户端插入数据","depth":4},{"value":"使用MySQL Workbench插入数据","url":"#使用mysql-workbench插入数据","depth":4},{"value":"2.4.2 更新数据","url":"#242-更新数据","depth":3},{"value":"使用命令行客户端更新数据","url":"#使用命令行客户端更新数据","depth":4},{"value":"使用MySQL Workbench更新数据","url":"#使用mysql-workbench更新数据","depth":4},{"value":"2.4.3 删除数据","url":"#243-删除数据","depth":3},{"value":"使用命令行客户端删除数据","url":"#使用命令行客户端删除数据","depth":4},{"value":"使用MySQL Workbench删除数据","url":"#使用mysql-workbench删除数据","depth":4},{"value":"2.5 底层原理：存储引擎架构","url":"#25-底层原理存储引擎架构","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第2章 MySQL基本操作","datePublished":"2024-05-24T03:31:15.000Z","dateModified":"2024-06-27T10:50:10.000Z","description":"MySQL的基本操作，包括如何连接数据库、创建和删除数据库、创建和删除表，以及插入、更新和删除数据。这些操作是使用MySQL进行数据管理的基础。2.1 连接数据库2.1.1 使用MySQL命令行客户端连接数据库启动MySQL命令行客户端mysql -u root -p-u root：指定用户名...","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/MySQL必知必会/pz0w9p1xmrhrw4vc"}},{"title":"第1章 MySQL简介与安装","date":"2024-05-24T03:30:28.000Z","urlname":"rggr746er445f1as","is_nav":false,"updated":"2024-06-27T10:46:38.000Z","not_show":false,"description":"本章将介绍MySQL的基本概念、特点和应用场景，并详细讲解在不同操作系统上安装和配置MySQL的方法。通过这些内容，你将了解MySQL的基本特性，并成功安装和配置MySQL数据库。1.1 什么是MySQL1.1.1 定义MySQL是一个开源的关系型数据库管理系统（RDBMS），由瑞典公司MyS...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1024,"minutes":3,"text":"3 分钟"},"slug":"doc/📚 计算机基础/MySQL/MySQL必知必会/rggr746er445f1as","path":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/rggr746er445f1as","filePath":"docs/doc/📚 计算机基础/MySQL/MySQL必知必会/rggr746er445f1as.md","toc":[{"value":"1.1 什么是MySQL","url":"#11-什么是mysql","depth":2},{"value":"1.1.1 定义","url":"#111-定义","depth":3},{"value":"1.1.2 历史","url":"#112-历史","depth":3},{"value":"1.1.3 应用场景","url":"#113-应用场景","depth":3},{"value":"1.1.4 MySQL的特点和优势","url":"#114-mysql的特点和优势","depth":3},{"value":"1.2 安装MySQL","url":"#12-安装mysql","depth":2},{"value":"1.2.1 安装前准备","url":"#121-安装前准备","depth":3},{"value":"1.2.2 安装MySQL","url":"#122-安装mysql","depth":3},{"value":"在Windows上安装MySQL","url":"#在windows上安装mysql","depth":4},{"value":"在Linux上安装MySQL","url":"#在linux上安装mysql","depth":4},{"value":"在macOS上安装MySQL","url":"#在macos上安装mysql","depth":4},{"value":"1.2.3 配置MySQL","url":"#123-配置mysql","depth":3},{"value":"配置文件示例","url":"#配置文件示例","depth":4},{"value":"1.2.4 启动与停止MySQL服务","url":"#124-启动与停止mysql服务","depth":3},{"value":"在Windows上","url":"#在windows上","depth":4},{"value":"在Linux上","url":"#在linux上","depth":4},{"value":"在macOS上","url":"#在macos上","depth":4},{"value":"1.3 验证安装","url":"#13-验证安装","depth":2},{"value":"1.3.1 使用命令行工具连接MySQL","url":"#131-使用命令行工具连接mysql","depth":3},{"value":"启动MySQL命令行客户端","url":"#启动mysql命令行客户端-1","depth":4},{"value":"检查MySQL服务状态","url":"#检查mysql服务状态","depth":4},{"value":"1.3.2 创建测试数据库","url":"#132-创建测试数据库","depth":3},{"value":"创建数据库","url":"#创建数据库-1","depth":4},{"value":"切换到测试数据库","url":"#切换到测试数据库","depth":4},{"value":"创建测试表","url":"#创建测试表","depth":4},{"value":"插入测试数据","url":"#插入测试数据","depth":4},{"value":"查询测试数据","url":"#查询测试数据","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第1章 MySQL简介与安装","datePublished":"2024-05-24T03:30:28.000Z","dateModified":"2024-06-27T10:46:38.000Z","description":"本章将介绍MySQL的基本概念、特点和应用场景，并详细讲解在不同操作系统上安装和配置MySQL的方法。通过这些内容，你将了解MySQL的基本特性，并成功安装和配置MySQL数据库。1.1 什么是MySQL1.1.1 定义MySQL是一个开源的关系型数据库管理系统（RDBMS），由瑞典公司MyS...","url":"https://offernow.cn/docs/doc/📚 计算机基础/MySQL/MySQL必知必会/rggr746er445f1as"}},{"title":"11、Java新技术探索:云原生","date":"2024-05-24T01:57:06.000Z","urlname":"sh85l5yfgmlm3uh5","is_nav":false,"updated":"2024-05-24T01:59:38.000Z","not_show":false,"description":"本章将探讨Java在现代软件开发中的一些新技术趋势，包括微服务架构与Spring Cloud、容器化与Docker，以及Java在云原生时代的应用。11.1 微服务架构与Spring Cloud微服务架构是一种将应用程序拆分为多个独立服务的设计方法，每个服务可以独立开发、部署和扩展。Sprin...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1469,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/Java/😄 Java编程大师手册/sh85l5yfgmlm3uh5","path":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/sh85l5yfgmlm3uh5","filePath":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/sh85l5yfgmlm3uh5.md","toc":[{"value":"11.1 微服务架构与Spring Cloud","url":"#111-微服务架构与spring-cloud","depth":2},{"value":"11.1.1 什么是微服务架构","url":"#1111-什么是微服务架构","depth":3},{"value":"11.1.2 Spring Cloud简介","url":"#1112-spring-cloud简介","depth":3},{"value":"11.1.3 Spring Cloud组件","url":"#1113-spring-cloud组件","depth":3},{"value":"11.1.4 示例：使用Spring Cloud构建微服务","url":"#1114-示例使用spring-cloud构建微服务","depth":3},{"value":"创建Spring Cloud项目","url":"#创建spring-cloud项目","depth":4},{"value":"设置Config Server","url":"#设置config-server","depth":4},{"value":"设置Eureka Server","url":"#设置eureka-server","depth":4},{"value":"创建一个简单的微服务","url":"#创建一个简单的微服务","depth":4},{"value":"11.1.5 运行和测试微服务","url":"#1115-运行和测试微服务","depth":3},{"value":"11.2 容器化与Docker","url":"#112-容器化与docker","depth":2},{"value":"11.2.1 什么是Docker","url":"#1121-什么是docker","depth":3},{"value":"11.2.2 Docker的基本概念","url":"#1122-docker的基本概念","depth":3},{"value":"11.2.3 示例：Docker化Spring Boot应用","url":"#1123-示例docker化spring-boot应用","depth":3},{"value":"创建Dockerfile","url":"#创建dockerfile","depth":4},{"value":"构建Docker镜像","url":"#构建docker镜像","depth":4},{"value":"运行Docker容器","url":"#运行docker容器","depth":4},{"value":"11.3 Java在云原生时代的应用","url":"#113-java在云原生时代的应用","depth":2},{"value":"11.3.1 什么是云原生应用","url":"#1131-什么是云原生应用","depth":3},{"value":"11.3.2 云原生架构的特性","url":"#1132-云原生架构的特性","depth":3},{"value":"11.3.3 使用Kubernetes管理容器化应用","url":"#1133-使用kubernetes管理容器化应用","depth":3},{"value":"示例：在Kubernetes上部署Spring Boot应用","url":"#示例在kubernetes上部署spring-boot应用","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"11、Java新技术探索:云原生","datePublished":"2024-05-24T01:57:06.000Z","dateModified":"2024-05-24T01:59:38.000Z","description":"本章将探讨Java在现代软件开发中的一些新技术趋势，包括微服务架构与Spring Cloud、容器化与Docker，以及Java在云原生时代的应用。11.1 微服务架构与Spring Cloud微服务架构是一种将应用程序拆分为多个独立服务的设计方法，每个服务可以独立开发、部署和扩展。Sprin...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/😄 Java编程大师手册/sh85l5yfgmlm3uh5"}},{"title":"10、Java项目实战","date":"2024-05-24T01:55:54.000Z","urlname":"egdut651nmx8bwzm","is_nav":false,"updated":"2024-05-24T01:56:59.000Z","not_show":false,"description":"本章将通过一个实战项目演示如何应用前面所学的Java知识，构建一个完整的个人记账本Web应用。10.1 实战项目：个人记账本Web应用10.1.1 项目概述我们将构建一个简单的个人记账本Web应用，用户可以记录和查看他们的收入和支出。10.1.2 技术栈Spring Boot：用于快速构建和部...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1024,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Java/😄 Java编程大师手册/egdut651nmx8bwzm","path":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/egdut651nmx8bwzm","filePath":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/egdut651nmx8bwzm.md","toc":[{"value":"10.1 实战项目：个人记账本Web应用","url":"#101-实战项目个人记账本web应用","depth":2},{"value":"10.1.1 项目概述","url":"#1011-项目概述","depth":3},{"value":"10.1.2 技术栈","url":"#1012-技术栈","depth":3},{"value":"10.2 项目架构设计与实现","url":"#102-项目架构设计与实现","depth":2},{"value":"10.2.1 创建项目结构","url":"#1021-创建项目结构","depth":3},{"value":"10.2.2 定义实体类","url":"#1022-定义实体类","depth":3},{"value":"示例：定义交易记录实体类","url":"#示例定义交易记录实体类","depth":4},{"value":"10.2.3 创建JPA仓库接口","url":"#1023-创建jpa仓库接口","depth":3},{"value":"示例：创建交易记录仓库","url":"#示例创建交易记录仓库","depth":4},{"value":"10.2.4 创建服务类","url":"#1024-创建服务类","depth":3},{"value":"示例：创建交易记录服务","url":"#示例创建交易记录服务","depth":4},{"value":"10.2.5 创建控制器类","url":"#1025-创建控制器类","depth":3},{"value":"示例：创建交易记录控制器","url":"#示例创建交易记录控制器","depth":4},{"value":"10.2.6 创建视图模板","url":"#1026-创建视图模板","depth":3},{"value":"示例：创建显示交易记录的视图模板","url":"#示例创建显示交易记录的视图模板","depth":4},{"value":"示例：创建新增交易记录的视图模板","url":"#示例创建新增交易记录的视图模板","depth":4},{"value":"10.3 测试与部署","url":"#103-测试与部署","depth":2},{"value":"10.3.1 单元测试","url":"#1031-单元测试","depth":3},{"value":"示例：测试交易记录服务","url":"#示例测试交易记录服务","depth":4},{"value":"10.3.2 集成测试","url":"#1032-集成测试","depth":3},{"value":"10.3.3 部署应用","url":"#1033-部署应用","depth":3},{"value":"示例：打包和运行Spring Boot应用","url":"#示例打包和运行spring-boot应用","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"10、Java项目实战","datePublished":"2024-05-24T01:55:54.000Z","dateModified":"2024-05-24T01:56:59.000Z","description":"本章将通过一个实战项目演示如何应用前面所学的Java知识，构建一个完整的个人记账本Web应用。10.1 实战项目：个人记账本Web应用10.1.1 项目概述我们将构建一个简单的个人记账本Web应用，用户可以记录和查看他们的收入和支出。10.1.2 技术栈Spring Boot：用于快速构建和部...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/😄 Java编程大师手册/egdut651nmx8bwzm"}},{"title":"9、Java Web开发","date":"2024-05-24T01:55:02.000Z","urlname":"dc8asrncbtqn2gvr","is_nav":false,"updated":"2024-05-24T01:57:02.000Z","not_show":false,"description":"本章介绍如何使用Java进行Web开发，包括Servlet与JSP、Spring框架入门以及如何构建RESTful Web服务与Spring Boot应用。9.1 Servlet与JSPServlet和JSP是Java Web开发的基础技术，Servlet用于处理请求和响应，JSP用于生成动态...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1160,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Java/😄 Java编程大师手册/dc8asrncbtqn2gvr","path":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/dc8asrncbtqn2gvr","filePath":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/dc8asrncbtqn2gvr.md","toc":[{"value":"9.1 Servlet与JSP","url":"#91-servlet与jsp","depth":2},{"value":"9.1.1 什么是Servlet","url":"#911-什么是servlet","depth":3},{"value":"示例：创建一个简单的Servlet","url":"#示例创建一个简单的servlet","depth":4},{"value":"9.1.2 什么是JSP","url":"#912-什么是jsp","depth":3},{"value":"示例：创建一个简单的JSP页面","url":"#示例创建一个简单的jsp页面","depth":4},{"value":"9.1.3 Servlet与JSP的结合使用","url":"#913-servlet与jsp的结合使用","depth":3},{"value":"示例：通过Servlet传递数据到JSP","url":"#示例通过servlet传递数据到jsp","depth":4},{"value":"9.2 Spring框架入门","url":"#92-spring框架入门","depth":2},{"value":"9.2.1 什么是Spring框架","url":"#921-什么是spring框架","depth":3},{"value":"9.2.2 依赖注入","url":"#922-依赖注入","depth":3},{"value":"示例：使用Spring管理Bean","url":"#示例使用spring管理bean","depth":4},{"value":"9.3 RESTful Web服务与Spring Boot","url":"#93-restful-web服务与spring-boot","depth":2},{"value":"9.3.1 什么是RESTful Web服务","url":"#931-什么是restful-web服务","depth":3},{"value":"9.3.2 Spring Boot简介","url":"#932-spring-boot简介","depth":3},{"value":"9.3.3 使用Spring Boot构建RESTful Web服务","url":"#933-使用spring-boot构建restful-web服务","depth":3},{"value":"示例：创建一个简单的Spring Boot应用","url":"#示例创建一个简单的spring-boot应用","depth":4},{"value":"9.3.4 使用DTO和服务层","url":"#934-使用dto和服务层","depth":3},{"value":"示例：添加DTO和服务层","url":"#示例添加dto和服务层","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"9、Java Web开发","datePublished":"2024-05-24T01:55:02.000Z","dateModified":"2024-05-24T01:57:02.000Z","description":"本章介绍如何使用Java进行Web开发，包括Servlet与JSP、Spring框架入门以及如何构建RESTful Web服务与Spring Boot应用。9.1 Servlet与JSPServlet和JSP是Java Web开发的基础技术，Servlet用于处理请求和响应，JSP用于生成动态...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/😄 Java编程大师手册/dc8asrncbtqn2gvr"}},{"title":"8、Java 8新特性","date":"2024-05-24T01:47:28.000Z","urlname":"uey01tcc9noh9y0w","is_nav":false,"updated":"2024-05-24T01:57:04.000Z","not_show":false,"description":"Java 8引入了许多强大且实用的新特性，使得Java编程更加简洁和高效。本章将介绍其中一些最重要的特性。8.1 Lambda表达式与函数式编程Lambda表达式是Java 8引入的一种新语法，用于实现函数式编程。它允许你以更简洁的方式来表示匿名函数。8.1.1 Lambda表达式的语法Lam...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":919,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Java/😄 Java编程大师手册/uey01tcc9noh9y0w","path":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/uey01tcc9noh9y0w","filePath":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/uey01tcc9noh9y0w.md","toc":[{"value":"8.1 Lambda表达式与函数式编程","url":"#81-lambda表达式与函数式编程","depth":2},{"value":"8.1.1 Lambda表达式的语法","url":"#811-lambda表达式的语法","depth":3},{"value":"示例","url":"#示例-20","depth":4},{"value":"使用Lambda表达式替代匿名类","url":"#使用lambda表达式替代匿名类","depth":4},{"value":"8.1.2 方法引用","url":"#812-方法引用","depth":3},{"value":"四种方法引用类型","url":"#四种方法引用类型","depth":4},{"value":"示例","url":"#示例-21","depth":4},{"value":"8.2 Stream API：数据流处理","url":"#82-stream-api数据流处理","depth":2},{"value":"8.2.1 创建Stream","url":"#821-创建stream","depth":3},{"value":"示例","url":"#示例-22","depth":4},{"value":"8.2.2 常用操作","url":"#822-常用操作","depth":3},{"value":"过滤（filter）","url":"#过滤filter","depth":4},{"value":"映射（map）","url":"#映射map","depth":4},{"value":"归约（reduce）","url":"#归约reduce","depth":4},{"value":"聚合操作","url":"#聚合操作","depth":4},{"value":"8.3 Optional：优雅的空指针处理","url":"#83-optional优雅的空指针处理","depth":2},{"value":"8.3.1 创建Optional对象","url":"#831-创建optional对象","depth":3},{"value":"示例","url":"#示例-23","depth":4},{"value":"8.3.2 使用Optional对象","url":"#832-使用optional对象","depth":3},{"value":"示例","url":"#示例-24","depth":4},{"value":"8.3.3 Optional的链式操作","url":"#833-optional的链式操作","depth":3},{"value":"示例","url":"#示例-25","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"8、Java 8新特性","datePublished":"2024-05-24T01:47:28.000Z","dateModified":"2024-05-24T01:57:04.000Z","description":"Java 8引入了许多强大且实用的新特性，使得Java编程更加简洁和高效。本章将介绍其中一些最重要的特性。8.1 Lambda表达式与函数式编程Lambda表达式是Java 8引入的一种新语法，用于实现函数式编程。它允许你以更简洁的方式来表示匿名函数。8.1.1 Lambda表达式的语法Lam...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/😄 Java编程大师手册/uey01tcc9noh9y0w"}},{"title":"7、Java虚拟机（JVM）","date":"2024-05-24T01:47:24.000Z","urlname":"piqeakcxrghiq16l","is_nav":false,"updated":"2024-05-24T02:02:26.000Z","not_show":false,"description":"Java虚拟机（JVM）是运行Java程序的抽象计算机，它在实际的硬件和操作系统上提供了一个执行环境。理解JVM的内部机制对于优化和调试Java程序至关重要。7.1 JVM架构解析JVM的架构由多个组件组成，每个组件在Java程序的执行过程中都扮演着重要角色。7.1.1 JVM的主要组件类加载...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/1a98304cb5278f98d89137ef94334269.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1036,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Java/😄 Java编程大师手册/piqeakcxrghiq16l","path":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/piqeakcxrghiq16l","filePath":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/piqeakcxrghiq16l.md","toc":[{"value":"7.1 JVM架构解析","url":"#71-jvm架构解析","depth":2},{"value":"7.1.1 JVM的主要组件","url":"#711-jvm的主要组件","depth":3},{"value":"7.1.2 JVM架构图","url":"#712-jvm架构图","depth":3},{"value":"7.2 垃圾回收机制与调优","url":"#72-垃圾回收机制与调优","depth":2},{"value":"7.2.1 垃圾回收的基本原理","url":"#721-垃圾回收的基本原理","depth":3},{"value":"7.2.2 常见的垃圾回收器","url":"#722-常见的垃圾回收器","depth":3},{"value":"7.2.3 垃圾回收调优","url":"#723-垃圾回收调优","depth":3},{"value":"示例：设置GC选项","url":"#示例设置gc选项","depth":4},{"value":"7.2.4 GC日志分析","url":"#724-gc日志分析","depth":3},{"value":"示例：打开GC日志","url":"#示例打开gc日志","depth":4},{"value":"7.3 类加载机制","url":"#73-类加载机制","depth":2},{"value":"7.3.1 类加载的三个步骤","url":"#731-类加载的三个步骤","depth":3},{"value":"7.3.2 类加载器的类型","url":"#732-类加载器的类型","depth":3},{"value":"7.3.3 自定义类加载器","url":"#733-自定义类加载器","depth":3},{"value":"示例：自定义类加载器","url":"#示例自定义类加载器","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"7、Java虚拟机（JVM）","datePublished":"2024-05-24T01:47:24.000Z","dateModified":"2024-05-24T02:02:26.000Z","description":"Java虚拟机（JVM）是运行Java程序的抽象计算机，它在实际的硬件和操作系统上提供了一个执行环境。理解JVM的内部机制对于优化和调试Java程序至关重要。7.1 JVM架构解析JVM的架构由多个组件组成，每个组件在Java程序的执行过程中都扮演着重要角色。7.1.1 JVM的主要组件类加载...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/😄 Java编程大师手册/piqeakcxrghiq16l"}},{"title":"5、Java玩转I/O","date":"2024-05-24T01:47:03.000Z","urlname":"gwtxhkglgx6m77r7","is_nav":false,"updated":"2024-05-24T01:50:13.000Z","not_show":false,"description":"5.1 文件操作Java提供了丰富的类和方法用于文件操作，例如读取和写入文件。5.1.1 读取文件使用FileReader和BufferedReader类可以读取文件内容。import java.io.BufferedReader; import java.io.FileReader; imp...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":820,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Java/😄 Java编程大师手册/gwtxhkglgx6m77r7","path":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/gwtxhkglgx6m77r7","filePath":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/gwtxhkglgx6m77r7.md","toc":[{"value":"5.1 文件操作","url":"#51-文件操作-1","depth":2},{"value":"5.1.1 读取文件","url":"#511-读取文件","depth":3},{"value":"5.1.2 写入文件","url":"#512-写入文件","depth":3},{"value":"5.2 网络编程基础","url":"#52-网络编程基础","depth":2},{"value":"5.2.1 创建一个简单的服务器","url":"#521-创建一个简单的服务器","depth":3},{"value":"5.2.2 创建一个简单的客户端","url":"#522-创建一个简单的客户端","depth":3},{"value":"5.3 Java NIO：高效I/O的秘密","url":"#53-java-nio高效io的秘密","depth":2},{"value":"5.3.1 读取文件","url":"#531-读取文件","depth":3},{"value":"5.3.2 写入文件","url":"#532-写入文件","depth":3},{"value":"5.3.3 非阻塞I/O","url":"#533-非阻塞io","depth":3},{"value":"示例：非阻塞服务器","url":"#示例非阻塞服务器","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"5、Java玩转I/O","datePublished":"2024-05-24T01:47:03.000Z","dateModified":"2024-05-24T01:50:13.000Z","description":"5.1 文件操作Java提供了丰富的类和方法用于文件操作，例如读取和写入文件。5.1.1 读取文件使用FileReader和BufferedReader类可以读取文件内容。import java.io.BufferedReader; import java.io.FileReader; imp...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/😄 Java编程大师手册/gwtxhkglgx6m77r7"}},{"title":"6、Java并发编程","date":"2024-05-24T01:47:02.000Z","urlname":"tkc45sgkfghf6cwq","is_nav":false,"updated":"2024-05-24T01:51:33.000Z","not_show":false,"description":"并发编程是指同时执行多个任务，以提高程序的性能和响应速度。Java提供了丰富的并发编程工具和类。6.1 线程的创建与运行6.1.1 继承Thread类我们可以通过继承Thread类来创建线程。示例// 创建一个继承Thread类的自定义线程类 class MyThread extends Th...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1325,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Java/😄 Java编程大师手册/tkc45sgkfghf6cwq","path":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/tkc45sgkfghf6cwq","filePath":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/tkc45sgkfghf6cwq.md","toc":[{"value":"6.1 线程的创建与运行","url":"#61-线程的创建与运行","depth":2},{"value":"6.1.1 继承Thread类","url":"#611-继承thread类","depth":3},{"value":"示例","url":"#示例-14","depth":4},{"value":"6.1.2 实现Runnable接口","url":"#612-实现runnable接口","depth":3},{"value":"示例","url":"#示例-15","depth":4},{"value":"6.2 并发工具类","url":"#62-并发工具类-1","depth":2},{"value":"6.2.1 Executors","url":"#621-executors","depth":3},{"value":"示例","url":"#示例-16","depth":4},{"value":"6.2.2 CountDownLatch","url":"#622-countdownlatch","depth":3},{"value":"示例","url":"#示例-17","depth":4},{"value":"6.3 Java内存模型与锁","url":"#63-java内存模型与锁","depth":2},{"value":"6.3.1 synchronized关键字","url":"#631-synchronized关键字","depth":3},{"value":"示例","url":"#示例-18","depth":4},{"value":"6.3.2 ReentrantLock","url":"#632-reentrantlock","depth":3},{"value":"示例","url":"#示例-19","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"6、Java并发编程","datePublished":"2024-05-24T01:47:02.000Z","dateModified":"2024-05-24T01:51:33.000Z","description":"并发编程是指同时执行多个任务，以提高程序的性能和响应速度。Java提供了丰富的并发编程工具和类。6.1 线程的创建与运行6.1.1 继承Thread类我们可以通过继承Thread类来创建线程。示例// 创建一个继承Thread类的自定义线程类 class MyThread extends Th...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/😄 Java编程大师手册/tkc45sgkfghf6cwq"}},{"title":"4、Java中的基础类","date":"2024-05-24T01:46:42.000Z","urlname":"eyigfudhdxqiuax4","is_nav":false,"updated":"2024-05-24T01:49:13.000Z","not_show":false,"description":"4.1 字符串处理字符串是Java中常用的数据类型，用于表示和操作字符序列。Java提供了丰富的字符串处理类。4.1.1 创建字符串String str1 = \"Hello, World!\"; String str2 = new String(\"Hello, World!\");4.1.2 字符...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":857,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Java/😄 Java编程大师手册/eyigfudhdxqiuax4","path":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/eyigfudhdxqiuax4","filePath":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/eyigfudhdxqiuax4.md","toc":[{"value":"4.1 字符串处理","url":"#41-字符串处理","depth":2},{"value":"4.1.1 创建字符串","url":"#411-创建字符串","depth":3},{"value":"4.1.2 字符串方法","url":"#412-字符串方法","depth":3},{"value":"获取字符串长度","url":"#获取字符串长度","depth":4},{"value":"字符串拼接","url":"#字符串拼接","depth":4},{"value":"字符串比较","url":"#字符串比较","depth":4},{"value":"查找子字符串","url":"#查找子字符串","depth":4},{"value":"截取子字符串","url":"#截取子字符串","depth":4},{"value":"转换大小写","url":"#转换大小写","depth":4},{"value":"4.2 集合框架：List、Set、Map","url":"#42-集合框架listsetmap","depth":2},{"value":"4.2.1 List接口","url":"#421-list接口","depth":3},{"value":"ArrayList示例","url":"#arraylist示例","depth":4},{"value":"4.2.2 Set接口","url":"#422-set接口","depth":3},{"value":"HashSet示例","url":"#hashset示例","depth":4},{"value":"4.2.3 Map接口","url":"#423-map接口","depth":3},{"value":"HashMap示例","url":"#hashmap示例","depth":4},{"value":"4.3 异常处理：失败的艺术","url":"#43-异常处理失败的艺术","depth":2},{"value":"4.3.1 基本语法","url":"#431-基本语法","depth":3},{"value":"try-catch","url":"#try-catch","depth":4},{"value":"try-catch-finally","url":"#try-catch-finally","depth":4},{"value":"4.3.2 自定义异常","url":"#432-自定义异常","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"4、Java中的基础类","datePublished":"2024-05-24T01:46:42.000Z","dateModified":"2024-05-24T01:49:13.000Z","description":"4.1 字符串处理字符串是Java中常用的数据类型，用于表示和操作字符序列。Java提供了丰富的字符串处理类。4.1.1 创建字符串String str1 = \"Hello, World!\"; String str2 = new String(\"Hello, World!\");4.1.2 字符...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/😄 Java编程大师手册/eyigfudhdxqiuax4"}},{"title":"3、面向对象的Java","date":"2024-05-24T01:45:53.000Z","urlname":"cmycpz0uonvbubaf","is_nav":false,"updated":"2024-05-24T01:46:41.000Z","not_show":false,"description":"3.1 类与对象：Java的心脏Java是一种面向对象的编程语言，类和对象是其核心概念。3.1.1 类的定义类是对象的模板，定义了对象的属性和行为。在Java中，类使用class关键字定义。public class Person {     String name;     int age; ...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":869,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Java/😄 Java编程大师手册/cmycpz0uonvbubaf","path":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/cmycpz0uonvbubaf","filePath":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/cmycpz0uonvbubaf.md","toc":[{"value":"3.1 类与对象：Java的心脏","url":"#31-类与对象java的心脏","depth":2},{"value":"3.1.1 类的定义","url":"#311-类的定义","depth":3},{"value":"3.1.2 创建对象","url":"#312-创建对象","depth":3},{"value":"3.1.3 构造方法","url":"#313-构造方法","depth":3},{"value":"3.2 继承：站在巨人的肩膀上","url":"#32-继承站在巨人的肩膀上","depth":2},{"value":"3.2.1 基本语法","url":"#321-基本语法","depth":3},{"value":"3.2.2 方法重写","url":"#322-方法重写","depth":3},{"value":"3.3 封装：隐藏实现的艺术","url":"#33-封装隐藏实现的艺术","depth":2},{"value":"3.3.1 使用访问修饰符","url":"#331-使用访问修饰符","depth":3},{"value":"3.3.2 使用封装","url":"#332-使用封装","depth":3},{"value":"3.4 多态：形态多变的Java","url":"#34-多态形态多变的java","depth":2},{"value":"3.4.1 方法重写中的多态","url":"#341-方法重写中的多态","depth":3},{"value":"3.4.2 接口实现中的多态","url":"#342-接口实现中的多态","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"3、面向对象的Java","datePublished":"2024-05-24T01:45:53.000Z","dateModified":"2024-05-24T01:46:41.000Z","description":"3.1 类与对象：Java的心脏Java是一种面向对象的编程语言，类和对象是其核心概念。3.1.1 类的定义类是对象的模板，定义了对象的属性和行为。在Java中，类使用class关键字定义。public class Person {     String name;     int age; ...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/😄 Java编程大师手册/cmycpz0uonvbubaf"}},{"title":"2、Java基础语法","date":"2024-05-24T01:45:13.000Z","urlname":"oac96glbs6zlqy4q","is_nav":false,"updated":"2024-05-24T01:45:58.000Z","not_show":false,"description":"2.1 变量与数据类型在Java中，变量是用来存储数据的命名内存位置。数据类型决定了变量可以存储的数据的类型。2.1.1 基本数据类型Java中有八种基本数据类型：byte：8位整数，范围是-128到127。short：16位整数，范围是-32768到32767。int：32位整数，范围是-2...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":974,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Java/😄 Java编程大师手册/oac96glbs6zlqy4q","path":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/oac96glbs6zlqy4q","filePath":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/oac96glbs6zlqy4q.md","toc":[{"value":"2.1 变量与数据类型","url":"#21-变量与数据类型","depth":2},{"value":"2.1.1 基本数据类型","url":"#211-基本数据类型","depth":3},{"value":"2.1.2 声明变量","url":"#212-声明变量","depth":3},{"value":"2.1.3 类型转换","url":"#213-类型转换","depth":3},{"value":"2.2 运算符与表达式","url":"#22-运算符与表达式","depth":2},{"value":"2.2.1 算术运算符","url":"#221-算术运算符","depth":3},{"value":"2.2.2 关系运算符","url":"#222-关系运算符","depth":3},{"value":"2.2.3 逻辑运算符","url":"#223-逻辑运算符","depth":3},{"value":"2.2.4 赋值运算符","url":"#224-赋值运算符","depth":3},{"value":"2.3 控制流程：条件语句与循环语句","url":"#23-控制流程条件语句与循环语句","depth":2},{"value":"2.3.1 条件语句","url":"#231-条件语句","depth":3},{"value":"if语句","url":"#if语句","depth":4},{"value":"if-else if-else语句","url":"#if-else-if-else语句","depth":4},{"value":"switch语句","url":"#switch语句","depth":4},{"value":"2.3.2 循环语句","url":"#232-循环语句","depth":3},{"value":"for循环","url":"#for循环","depth":4},{"value":"while循环","url":"#while循环-1","depth":4},{"value":"do-while循环","url":"#do-while循环","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"2、Java基础语法","datePublished":"2024-05-24T01:45:13.000Z","dateModified":"2024-05-24T01:45:58.000Z","description":"2.1 变量与数据类型在Java中，变量是用来存储数据的命名内存位置。数据类型决定了变量可以存储的数据的类型。2.1.1 基本数据类型Java中有八种基本数据类型：byte：8位整数，范围是-128到127。short：16位整数，范围是-32768到32767。int：32位整数，范围是-2...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/😄 Java编程大师手册/oac96glbs6zlqy4q"}},{"title":"1、Java的安装与配置","date":"2024-05-24T01:44:39.000Z","urlname":"ewu8fhrp6gm1yvpa","is_nav":false,"updated":"2024-05-24T01:45:14.000Z","not_show":false,"description":"1.1 选择并下载JDKJava开发工具包（JDK）是我们编写、编译和运行Java程序的必备工具。您可以从Oracle官网或OpenJDK下载最新版本的JDK。安装步骤： 下载JDK：访问Oracle官网或OpenJDK网站，选择适合您操作系统的JDK版本进行下载。  安装JDK：双击下载的安...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":681,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/Java/😄 Java编程大师手册/ewu8fhrp6gm1yvpa","path":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/ewu8fhrp6gm1yvpa","filePath":"docs/doc/💻 编程语言/Java/😄 Java编程大师手册/ewu8fhrp6gm1yvpa.md","toc":[{"value":"1.1 选择并下载JDK","url":"#11-选择并下载jdk","depth":3},{"value":"安装步骤：","url":"#安装步骤-2","depth":4},{"value":"1.2 第一个Java程序：Hello World!","url":"#12-第一个java程序hello-world","depth":3},{"value":"编写Hello World程序：","url":"#编写hello-world程序","depth":4},{"value":"解释代码：","url":"#解释代码","depth":4},{"value":"编译并运行程序：","url":"#编译并运行程序","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"1、Java的安装与配置","datePublished":"2024-05-24T01:44:39.000Z","dateModified":"2024-05-24T01:45:14.000Z","description":"1.1 选择并下载JDKJava开发工具包（JDK）是我们编写、编译和运行Java程序的必备工具。您可以从Oracle官网或OpenJDK下载最新版本的JDK。安装步骤： 下载JDK：访问Oracle官网或OpenJDK网站，选择适合您操作系统的JDK版本进行下载。  安装JDK：双击下载的安...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/😄 Java编程大师手册/ewu8fhrp6gm1yvpa"}},{"title":"😄 Java编程大师手册","date":"2024-05-24T01:38:51.000Z","urlname":"ybp7dzzpfx11hkms","is_nav":false,"nav_path":"java_master","updated":"2024-05-28T04:27:57.000Z","not_show":false,"description":"---nav_path: java_master---第一部分：Java基础篇第1章 初识JavaJava的安装与配置第一个Java程序：Hello World!第2章 Java基础语法变量与数据类型运算符与表达式控制流程：条件语句与循环语句第3章 面向对象的Java类与对象：Java的心脏继...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":357,"minutes":1,"text":"1 分钟"},"slug":"doc/💻 编程语言/Java/ybp7dzzpfx11hkms","path":"docs/doc/💻 编程语言/Java/ybp7dzzpfx11hkms","filePath":"docs/doc/💻 编程语言/Java/ybp7dzzpfx11hkms.md","toc":[{"value":"第一部分：Java基础篇","url":"#第一部分java基础篇","depth":3},{"value":"第1章 初识Java","url":"#第1章-初识java","depth":4},{"value":"第2章 Java基础语法","url":"#第2章-java基础语法","depth":4},{"value":"第3章 面向对象的Java","url":"#第3章-面向对象的java","depth":4},{"value":"第4章 Java中的基础类","url":"#第4章-java中的基础类","depth":4},{"value":"第5章 玩转I/O","url":"#第5章-玩转io","depth":4},{"value":"第二部分：Java进阶篇","url":"#第二部分java进阶篇","depth":3},{"value":"第6章 Java并发编程","url":"#第6章-java并发编程","depth":4},{"value":"第7章 Java虚拟机（JVM）","url":"#第7章-java虚拟机jvm","depth":4},{"value":"第8章 Java 8新特性","url":"#第8章-java-8新特性","depth":4},{"value":"第9章 Java Web开发","url":"#第9章-java-web开发","depth":4},{"value":"第三部分：Java实战篇","url":"#第三部分java实战篇","depth":3},{"value":"","url":"#-6","depth":4},{"value":"第10章 Java项目实战","url":"#第10章-java项目实战","depth":4},{"value":"第11章 Java新技术探索","url":"#第11章-java新技术探索","depth":4},{"value":"","url":"#-7","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"😄 Java编程大师手册","datePublished":"2024-05-24T01:38:51.000Z","dateModified":"2024-05-28T04:27:57.000Z","description":"---nav_path: java_master---第一部分：Java基础篇第1章 初识JavaJava的安装与配置第一个Java程序：Hello World!第2章 Java基础语法变量与数据类型运算符与表达式控制流程：条件语句与循环语句第3章 面向对象的Java类与对象：Java的心脏继...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/ybp7dzzpfx11hkms"}},{"title":"Go 新手入门","date":"2024-05-24T01:29:15.000Z","urlname":"eigb7p6levvwasze","is_nav":false,"nav_path":"noob\r","updated":"2024-08-06T11:28:49.000Z","not_show":false,"description":"---nav_path: noob---","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":0,"minutes":0,"text":"小于一分钟"},"slug":"doc/💻 编程语言/Go/eigb7p6levvwasze","path":"docs/doc/💻 编程语言/Go/eigb7p6levvwasze","filePath":"docs/doc/💻 编程语言/Go/eigb7p6levvwasze.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Go 新手入门","datePublished":"2024-05-24T01:29:15.000Z","dateModified":"2024-08-06T11:28:49.000Z","description":"---nav_path: noob---","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/eigb7p6levvwasze"}},{"title":"网站作者","date":"2024-05-23T05:27:20.000Z","urlname":"srte6wq59tapieq4","is_nav":false,"nav_path":"whitedew\r","updated":"2024-09-24T13:56:44.000Z","not_show":false,"description":"---nav_path: whitedew---青玉白露，现役程序员，曾任职于阿里、字节，6年开发经验，前端+后端全栈。写过 C/C++、Go、Java、Python、Typescript、Node.js, 迷恋上了 AI 。正在学习全栈开发，喜欢 Nextjs、ChakaUI、Tailwin...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":374,"minutes":1,"text":"1 分钟"},"slug":"doc/🏄 关于/srte6wq59tapieq4","path":"docs/doc/🏄 关于/srte6wq59tapieq4","filePath":"docs/doc/🏄 关于/srte6wq59tapieq4.md","toc":[{"value":"关于本站","url":"#关于本站","depth":2},{"value":"联系我","url":"#联系我","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"网站作者","datePublished":"2024-05-23T05:27:20.000Z","dateModified":"2024-09-24T13:56:44.000Z","description":"---nav_path: whitedew---青玉白露，现役程序员，曾任职于阿里、字节，6年开发经验，前端+后端全栈。写过 C/C++、Go、Java、Python、Typescript、Node.js, 迷恋上了 AI 。正在学习全栈开发，喜欢 Nextjs、ChakaUI、Tailwin...","url":"https://offernow.cn/docs/doc/🏄 关于/srte6wq59tapieq4"}},{"title":"枚举陷阱：如何避免“未知值”引发的灾难","date":"2024-05-23T02:46:07.000Z","urlname":"az40vm4vsa7g6rpx","is_nav":false,"updated":"2024-05-24T01:33:23.000Z","not_show":false,"description":"在编程的海洋里，有一个常见的暗礁，即错误地处理枚举类型，特别是在Go语言中，这个问题更是隐蔽且普遍。这篇文章将带你深入探讨如何安全地航行过这片险水，这也是“Go十大常见错误”系列的开篇之作，来源于资深工程师Teiva Harsanyi的实战经验。更多源代码和错误分析，欢迎访问Go十大常见错误源...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":432,"minutes":1,"text":"1 分钟"},"slug":"doc/💻 编程语言/Go/🎁 最佳实践/az40vm4vsa7g6rpx","path":"docs/doc/💻 编程语言/Go/🎁 最佳实践/az40vm4vsa7g6rpx","filePath":"docs/doc/💻 编程语言/Go/🎁 最佳实践/az40vm4vsa7g6rpx.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"枚举陷阱：如何避免“未知值”引发的灾难","datePublished":"2024-05-23T02:46:07.000Z","dateModified":"2024-05-24T01:33:23.000Z","description":"在编程的海洋里，有一个常见的暗礁，即错误地处理枚举类型，特别是在Go语言中，这个问题更是隐蔽且普遍。这篇文章将带你深入探讨如何安全地航行过这片险水，这也是“Go十大常见错误”系列的开篇之作，来源于资深工程师Teiva Harsanyi的实战经验。更多源代码和错误分析，欢迎访问Go十大常见错误源...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🎁 最佳实践/az40vm4vsa7g6rpx"}},{"title":"匿名结构体的奇妙用途","date":"2024-05-23T02:41:34.000Z","urlname":"ifewuztzgoqgac68","is_nav":false,"updated":"2024-05-24T01:33:51.000Z","not_show":false,"description":"Go语言像一个充满魔法的世界，你可以在其中找到许多有趣的语法糖。其中，匿名结构体就如隐形斗篷一般，虽不显眼，却能在特定场景释放强大的魔法。比如，我们熟知的闭包（Closure）、结构体中的匿名字段（Anonymous Fields）以及本文的主角——匿名结构体（Anonymous Struct...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":750,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Go/🎁 最佳实践/ifewuztzgoqgac68","path":"docs/doc/💻 编程语言/Go/🎁 最佳实践/ifewuztzgoqgac68","filePath":"docs/doc/💻 编程语言/Go/🎁 最佳实践/ifewuztzgoqgac68.md","toc":[{"value":"整合全局变量","url":"#整合全局变量","depth":3},{"value":"局部拼图","url":"#局部拼图","depth":3},{"value":"测试数据的工匠","url":"#测试数据的工匠","depth":3},{"value":"锁的嵌套","url":"#锁的嵌套","depth":3},{"value":"JSON的魔法使","url":"#json的魔法使","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"匿名结构体的奇妙用途","datePublished":"2024-05-23T02:41:34.000Z","dateModified":"2024-05-24T01:33:51.000Z","description":"Go语言像一个充满魔法的世界，你可以在其中找到许多有趣的语法糖。其中，匿名结构体就如隐形斗篷一般，虽不显眼，却能在特定场景释放强大的魔法。比如，我们熟知的闭包（Closure）、结构体中的匿名字段（Anonymous Fields）以及本文的主角——匿名结构体（Anonymous Struct...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🎁 最佳实践/ifewuztzgoqgac68"}},{"title":"你知道引用传递与引用变量？","date":"2024-05-23T02:36:44.000Z","urlname":"vdg53p6km14umie5","is_nav":false,"updated":"2024-05-24T01:34:13.000Z","not_show":false,"description":"当我们在Go语言中使用map和channel时，你可能会注意到，将这些类型作为函数参数传递时，并不需要在形参中为map和channel添加指针符号*，依然能在函数体内改变外部map和channel的值。这种现象可能会让一些人联想到C++中的引用变量和引用传递。比如，考虑以下Go代码片段：pac...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":976,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Go/🎁 最佳实践/vdg53p6km14umie5","path":"docs/doc/💻 编程语言/Go/🎁 最佳实践/vdg53p6km14umie5","filePath":"docs/doc/💻 编程语言/Go/🎁 最佳实践/vdg53p6km14umie5.md","toc":[{"value":"什么是引用变量和引用传递","url":"#什么是引用变量和引用传递","depth":2},{"value":"Go有引用变量和引用传递吗？","url":"#go有引用变量和引用传递吗","depth":2},{"value":"有map不是使用引用传递的反例吗？","url":"#有map不是使用引用传递的反例吗","depth":2},{"value":"那map和channel是如何工作的呢？","url":"#那map和channel是如何工作的呢","depth":2},{"value":"总结","url":"#总结-26","depth":2},{"value":"参考链接","url":"#参考链接-1","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"你知道引用传递与引用变量？","datePublished":"2024-05-23T02:36:44.000Z","dateModified":"2024-05-24T01:34:13.000Z","description":"当我们在Go语言中使用map和channel时，你可能会注意到，将这些类型作为函数参数传递时，并不需要在形参中为map和channel添加指针符号*，依然能在函数体内改变外部map和channel的值。这种现象可能会让一些人联想到C++中的引用变量和引用传递。比如，考虑以下Go代码片段：pac...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🎁 最佳实践/vdg53p6km14umie5"}},{"title":"send-only channel和receive-only channel的争议","date":"2024-05-23T02:31:47.000Z","urlname":"reg9kozm27gdfcfa","is_nav":false,"updated":"2024-05-24T01:34:58.000Z","not_show":false,"description":"在Go语言中，channel是一个非常重要的内置数据结构，几乎每个Go开发者都非常熟悉。它不仅能帮助实现goroutine之间的通信和同步，还通过goroutine和channel实现了CSP（Communicating Sequential Processes）模型。Go语言的共同创始人之一...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1490,"minutes":5,"text":"5 分钟"},"slug":"doc/💻 编程语言/Go/🎁 最佳实践/reg9kozm27gdfcfa","path":"docs/doc/💻 编程语言/Go/🎁 最佳实践/reg9kozm27gdfcfa","filePath":"docs/doc/💻 编程语言/Go/🎁 最佳实践/reg9kozm27gdfcfa.md","toc":[{"value":"问题","url":"#问题","depth":2},{"value":"题目1","url":"#题目1","depth":3},{"value":"题目2","url":"#题目2","depth":3},{"value":"解析","url":"#解析","depth":2},{"value":"答案","url":"#答案","depth":3},{"value":"衍生问题","url":"#衍生问题","depth":3},{"value":"推荐阅读","url":"#推荐阅读","depth":2},{"value":"总结","url":"#总结-25","depth":2},{"value":"","url":"#-22","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"send-only channel和receive-only channel的争议","datePublished":"2024-05-23T02:31:47.000Z","dateModified":"2024-05-24T01:34:58.000Z","description":"在Go语言中，channel是一个非常重要的内置数据结构，几乎每个Go开发者都非常熟悉。它不仅能帮助实现goroutine之间的通信和同步，还通过goroutine和channel实现了CSP（Communicating Sequential Processes）模型。Go语言的共同创始人之一...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🎁 最佳实践/reg9kozm27gdfcfa"}},{"title":"new与make的差异及使用策略","date":"2024-05-23T02:31:30.000Z","urlname":"cucnu4x7f111nups","is_nav":false,"updated":"2024-05-24T01:35:24.000Z","not_show":false,"description":"Go语言在数据结构初始化时，经常会用到new和make两个内置函数。这两个函数都能分配内存空间，但它们具体有什么不同？而在编码实践中，如何正确高效地使用new和make呢？new的内涵让我们先来探讨new函数：func new(Type) *Type new函数用于分配内存。它的第一个参数是类...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1136,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Go/🎁 最佳实践/cucnu4x7f111nups","path":"docs/doc/💻 编程语言/Go/🎁 最佳实践/cucnu4x7f111nups","filePath":"docs/doc/💻 编程语言/Go/🎁 最佳实践/cucnu4x7f111nups.md","toc":[{"value":"new的内涵","url":"#new的内涵","depth":2},{"value":"make的本质","url":"#make的本质","depth":2},{"value":"常见疑惑的解答","url":"#常见疑惑的解答","depth":2},{"value":"最优使用建议","url":"#最优使用建议","depth":2},{"value":"参考资料","url":"#参考资料-3","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"new与make的差异及使用策略","datePublished":"2024-05-23T02:31:30.000Z","dateModified":"2024-05-24T01:35:24.000Z","description":"Go语言在数据结构初始化时，经常会用到new和make两个内置函数。这两个函数都能分配内存空间，但它们具体有什么不同？而在编码实践中，如何正确高效地使用new和make呢？new的内涵让我们先来探讨new函数：func new(Type) *Type new函数用于分配内存。它的第一个参数是类...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🎁 最佳实践/cucnu4x7f111nups"}},{"title":"🎁 最佳实践","date":"2024-05-22T12:17:02.000Z","urlname":"htpzy6yum72pgula","is_nav":false,"nav_path":"best_practice","updated":"2024-05-24T01:36:08.000Z","not_show":false,"description":"---nav_path: best_practice---Go语言中的defer特性详解在Go语言中，defer关键字用于预定函数或方法的执行，这常用于处理成对的操作如打开关闭文件、加解锁、记录时间等。defer的独特之处在于，无论包含它的函数通过何种路径返回，它都确保调用被defer的函数。...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":573,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/Go/htpzy6yum72pgula","path":"docs/doc/💻 编程语言/Go/htpzy6yum72pgula","filePath":"docs/doc/💻 编程语言/Go/htpzy6yum72pgula.md","toc":[{"value":"Go语言中的defer特性详解","url":"#go语言中的defer特性详解","depth":1},{"value":"示例分析","url":"#示例分析","depth":2},{"value":"示例1：defer在函数正常返回前执行","url":"#示例1defer在函数正常返回前执行","depth":3},{"value":"示例2：defer在函数因panic结束前执行","url":"#示例2defer在函数因panic结束前执行","depth":3},{"value":"探究：defer是否总会执行？","url":"#探究defer是否总会执行","depth":2},{"value":"defer的四个基本原则回顾","url":"#defer的四个基本原则回顾","depth":2},{"value":"Go语言的defer实现原理","url":"#go语言的defer实现原理","depth":2},{"value":"总结","url":"#总结-1","depth":2},{"value":"","url":"#-5","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"🎁 最佳实践","datePublished":"2024-05-22T12:17:02.000Z","dateModified":"2024-05-24T01:36:08.000Z","description":"---nav_path: best_practice---Go语言中的defer特性详解在Go语言中，defer关键字用于预定函数或方法的执行，这常用于处理成对的操作如打开关闭文件、加解锁、记录时间等。defer的独特之处在于，无论包含它的函数通过何种路径返回，它都确保调用被defer的函数。...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/htpzy6yum72pgula"}},{"title":"第7章：Go航天器 - 模块化与测试","date":"2024-05-22T12:16:57.000Z","urlname":"keyfqrqqbpiaa3ug","is_nav":false,"updated":"2024-08-06T11:13:56.000Z","not_show":false,"description":"包与模块的管理、单元测试与性能测试，以及并发编程模式和同步机制将是我们的重点。航天工程 - 包与模块的创建与管理在Go语言中，包和模块是代码组织和依赖管理的基石。创建和管理包创建包：在Go项目中，每个目录都可以视为一个包，包名通常与目录名相同。创建一个新的包，只需创建一个新的目录，并在其中添加...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":875,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Go/Go 新手入门/keyfqrqqbpiaa3ug","path":"docs/doc/💻 编程语言/Go/Go 新手入门/keyfqrqqbpiaa3ug","filePath":"docs/doc/💻 编程语言/Go/Go 新手入门/keyfqrqqbpiaa3ug.md","toc":[{"value":"航天工程 - 包与模块的创建与管理","url":"#航天工程---包与模块的创建与管理","depth":4},{"value":"创建和管理包","url":"#创建和管理包","depth":5},{"value":"创建和使用模块","url":"#创建和使用模块-1","depth":5},{"value":"系统检测 - 编写单元测试与性能测试","url":"#系统检测---编写单元测试与性能测试","depth":4},{"value":"编写单元测试","url":"#编写单元测试","depth":5},{"value":"编写性能测试","url":"#编写性能测试","depth":5},{"value":"航天实验 - 探索并发编程模式与同步机制","url":"#航天实验---探索并发编程模式与同步机制","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第7章：Go航天器 - 模块化与测试","datePublished":"2024-05-22T12:16:57.000Z","dateModified":"2024-08-06T11:13:56.000Z","description":"包与模块的管理、单元测试与性能测试，以及并发编程模式和同步机制将是我们的重点。航天工程 - 包与模块的创建与管理在Go语言中，包和模块是代码组织和依赖管理的基石。创建和管理包创建包：在Go项目中，每个目录都可以视为一个包，包名通常与目录名相同。创建一个新的包，只需创建一个新的目录，并在其中添加...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/Go 新手入门/keyfqrqqbpiaa3ug"}},{"title":"第7章：Go航天器 - 模块化与测试","date":"2024-05-22T12:16:57.000Z","urlname":"keyfqrqqbpiaa3ug","is_nav":false,"updated":"2024-05-28T09:32:34.000Z","not_show":false,"description":"欢迎进入Go航天器的世界，这里我们将探索Go语言的模块化构建和测试机制，保障你的代码质量和性能。包与模块的管理、单元测试与性能测试，以及并发编程模式和同步机制将是我们的重点。航天工程 - 包与模块的创建与管理在Go语言中，包和模块是代码组织和依赖管理的基石。创建和管理包创建包：在Go项目中，每...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":918,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Go/🏫 新手入门/keyfqrqqbpiaa3ug","path":"docs/doc/💻 编程语言/Go/🏫 新手入门/keyfqrqqbpiaa3ug","filePath":"docs/doc/💻 编程语言/Go/🏫 新手入门/keyfqrqqbpiaa3ug.md","toc":[{"value":"航天工程 - 包与模块的创建与管理","url":"#航天工程---包与模块的创建与管理-1","depth":4},{"value":"创建和管理包","url":"#创建和管理包-1","depth":5},{"value":"创建和使用模块","url":"#创建和使用模块-2","depth":5},{"value":"系统检测 - 编写单元测试与性能测试","url":"#系统检测---编写单元测试与性能测试-1","depth":4},{"value":"编写单元测试","url":"#编写单元测试-1","depth":5},{"value":"编写性能测试","url":"#编写性能测试-1","depth":5},{"value":"航天实验 - 探索并发编程模式与同步机制","url":"#航天实验---探索并发编程模式与同步机制-1","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第7章：Go航天器 - 模块化与测试","datePublished":"2024-05-22T12:16:57.000Z","dateModified":"2024-05-28T09:32:34.000Z","description":"欢迎进入Go航天器的世界，这里我们将探索Go语言的模块化构建和测试机制，保障你的代码质量和性能。包与模块的管理、单元测试与性能测试，以及并发编程模式和同步机制将是我们的重点。航天工程 - 包与模块的创建与管理在Go语言中，包和模块是代码组织和依赖管理的基石。创建和管理包创建包：在Go项目中，每...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🏫 新手入门/keyfqrqqbpiaa3ug"}},{"title":"第6章：Go操控台 - 高级特性","date":"2024-05-22T12:07:10.000Z","urlname":"fkhl2h5k4efw4611","is_nav":false,"updated":"2024-08-06T11:13:24.000Z","not_show":false,"description":"这一章节将带你进入Go语言高级特性的操控台，从接口的灵活性到并发编程的强大，再到异常处理的艺术。接口定义 - 接口的声明与实现接口在Go语言中是一种类型，它定义了一组方法，但不实现这些方法。当一个类型为接口中的所有方法提供了实现，它被称为实现该接口。接口声明// 定义一个动物的接口 type ...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":710,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/Go/Go 新手入门/fkhl2h5k4efw4611","path":"docs/doc/💻 编程语言/Go/Go 新手入门/fkhl2h5k4efw4611","filePath":"docs/doc/💻 编程语言/Go/Go 新手入门/fkhl2h5k4efw4611.md","toc":[{"value":"接口定义 - 接口的声明与实现","url":"#接口定义---接口的声明与实现","depth":4},{"value":"接口声明","url":"#接口声明","depth":5},{"value":"接口实现","url":"#接口实现","depth":5},{"value":"多线程驱动 - 并发编程的goroutine与channel","url":"#多线程驱动---并发编程的goroutine与channel","depth":4},{"value":"Goroutine","url":"#goroutine","depth":5},{"value":"Channel","url":"#channel","depth":5},{"value":"紧急处理 - 使用defer、panic、recover处理异常","url":"#紧急处理---使用deferpanicrecover处理异常","depth":4},{"value":"使用defer","url":"#使用defer","depth":5},{"value":"使用panic","url":"#使用panic","depth":5},{"value":"使用recover","url":"#使用recover","depth":5}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第6章：Go操控台 - 高级特性","datePublished":"2024-05-22T12:07:10.000Z","dateModified":"2024-08-06T11:13:24.000Z","description":"这一章节将带你进入Go语言高级特性的操控台，从接口的灵活性到并发编程的强大，再到异常处理的艺术。接口定义 - 接口的声明与实现接口在Go语言中是一种类型，它定义了一组方法，但不实现这些方法。当一个类型为接口中的所有方法提供了实现，它被称为实现该接口。接口声明// 定义一个动物的接口 type ...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/Go 新手入门/fkhl2h5k4efw4611"}},{"title":"第6章：Go操控台 - 高级特性","date":"2024-05-22T12:07:10.000Z","urlname":"fkhl2h5k4efw4611","is_nav":false,"updated":"2024-05-24T01:28:53.000Z","not_show":false,"description":"这一章节将带你进入Go语言高级特性的操控台，从接口的灵活性到并发编程的强大，再到异常处理的艺术。让我们逐一深入解析。接口定义 - 接口的声明与实现接口在Go语言中是一种类型，它定义了一组方法，但不实现这些方法。当一个类型为接口中的所有方法提供了实现，它被称为实现该接口。接口声明// 定义一个动...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":719,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/Go/🏫 新手入门/fkhl2h5k4efw4611","path":"docs/doc/💻 编程语言/Go/🏫 新手入门/fkhl2h5k4efw4611","filePath":"docs/doc/💻 编程语言/Go/🏫 新手入门/fkhl2h5k4efw4611.md","toc":[{"value":"接口定义 - 接口的声明与实现","url":"#接口定义---接口的声明与实现-1","depth":4},{"value":"接口声明","url":"#接口声明-1","depth":5},{"value":"接口实现","url":"#接口实现-1","depth":5},{"value":"多线程驱动 - 并发编程的goroutine与channel","url":"#多线程驱动---并发编程的goroutine与channel-1","depth":4},{"value":"Goroutine","url":"#goroutine-1","depth":5},{"value":"Channel","url":"#channel-1","depth":5},{"value":"紧急处理 - 使用defer、panic、recover处理异常","url":"#紧急处理---使用deferpanicrecover处理异常-1","depth":4},{"value":"使用defer","url":"#使用defer-1","depth":5},{"value":"使用panic","url":"#使用panic-1","depth":5},{"value":"使用recover","url":"#使用recover-1","depth":5}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第6章：Go操控台 - 高级特性","datePublished":"2024-05-22T12:07:10.000Z","dateModified":"2024-05-24T01:28:53.000Z","description":"这一章节将带你进入Go语言高级特性的操控台，从接口的灵活性到并发编程的强大，再到异常处理的艺术。让我们逐一深入解析。接口定义 - 接口的声明与实现接口在Go语言中是一种类型，它定义了一组方法，但不实现这些方法。当一个类型为接口中的所有方法提供了实现，它被称为实现该接口。接口声明// 定义一个动...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🏫 新手入门/fkhl2h5k4efw4611"}},{"title":"第5章：Go动力核心 - 函数与方法","date":"2024-05-22T11:49:53.000Z","urlname":"ri9u49otr6ib48c2","is_nav":false,"updated":"2024-05-24T01:28:49.000Z","not_show":false,"description":"在这一章中，我们将探讨Go中的函数与方法，它们是构建强大和高效程序的动力核心。让我们来详细了解能量转换的艺术，动力系统的构建，以及能量场的奥秘。能量转换 - 编写和调用函数函数是Go中用来封装一段执行特定任务代码的单元。理解函数的编写和调用对于开发高效且可复用代码至关重要。编写函数// 定义一...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1010,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Go/🏫 新手入门/ri9u49otr6ib48c2","path":"docs/doc/💻 编程语言/Go/🏫 新手入门/ri9u49otr6ib48c2","filePath":"docs/doc/💻 编程语言/Go/🏫 新手入门/ri9u49otr6ib48c2.md","toc":[{"value":"能量转换 - 编写和调用函数","url":"#能量转换---编写和调用函数","depth":4},{"value":"编写函数","url":"#编写函数","depth":5},{"value":"函数作为参数和返回值","url":"#函数作为参数和返回值","depth":5},{"value":"匿名函数和立即执行函数","url":"#匿名函数和立即执行函数","depth":5},{"value":"动力系统 - 方法的定义与使用","url":"#动力系统---方法的定义与使用","depth":4},{"value":"定义方法","url":"#定义方法","depth":5},{"value":"方法接收者","url":"#方法接收者","depth":5},{"value":"能量场 - 闭包的魔力","url":"#能量场---闭包的魔力","depth":4},{"value":"使用闭包","url":"#使用闭包","depth":5},{"value":"捕获外部变量","url":"#捕获外部变量","depth":5},{"value":"生成器模式","url":"#生成器模式","depth":5}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第5章：Go动力核心 - 函数与方法","datePublished":"2024-05-22T11:49:53.000Z","dateModified":"2024-05-24T01:28:49.000Z","description":"在这一章中，我们将探讨Go中的函数与方法，它们是构建强大和高效程序的动力核心。让我们来详细了解能量转换的艺术，动力系统的构建，以及能量场的奥秘。能量转换 - 编写和调用函数函数是Go中用来封装一段执行特定任务代码的单元。理解函数的编写和调用对于开发高效且可复用代码至关重要。编写函数// 定义一...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🏫 新手入门/ri9u49otr6ib48c2"}},{"title":"第4章：Go组件库 - 数据结构与集合","date":"2024-05-22T11:42:09.000Z","urlname":"glme2cxvpkbflykn","is_nav":false,"updated":"2024-08-06T11:11:09.000Z","not_show":false,"description":"在本章节中，我们将深入探讨Go语言中的数组与切片、Map以及结构体与指针的高效使用与实战应用。装载资源 - 数组与切片的高效使用数组和切片是Go语言中处理一系列数据的基本工具。数组的大小在声明时固定，而切片则更加灵活，支持动态扩展。数组数组是具有固定大小和类型的元素序列。var planets...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":958,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Go/Go 新手入门/glme2cxvpkbflykn","path":"docs/doc/💻 编程语言/Go/Go 新手入门/glme2cxvpkbflykn","filePath":"docs/doc/💻 编程语言/Go/Go 新手入门/glme2cxvpkbflykn.md","toc":[{"value":"装载资源 - 数组与切片的高效使用","url":"#装载资源---数组与切片的高效使用","depth":4},{"value":"数组","url":"#数组-1","depth":5},{"value":"切片","url":"#切片-1","depth":5},{"value":"数组的基本操作","url":"#数组的基本操作","depth":4},{"value":"声明和初始化","url":"#声明和初始化","depth":5},{"value":"访问和修改","url":"#访问和修改","depth":5},{"value":"遍历数组","url":"#遍历数组","depth":5},{"value":"切片的灵活操作","url":"#切片的灵活操作","depth":4},{"value":"创建和构造","url":"#创建和构造","depth":5},{"value":"切片操作","url":"#切片操作","depth":5},{"value":"复制和追加","url":"#复制和追加","depth":5},{"value":"地图导航 - 深入理解Map的特性与操作","url":"#地图导航---深入理解map的特性与操作","depth":4},{"value":"组装机器人 - 结构体与指针的实战应用","url":"#组装机器人---结构体与指针的实战应用","depth":4},{"value":"结构体","url":"#结构体-1","depth":5},{"value":"指针","url":"#指针-1","depth":5}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第4章：Go组件库 - 数据结构与集合","datePublished":"2024-05-22T11:42:09.000Z","dateModified":"2024-08-06T11:11:09.000Z","description":"在本章节中，我们将深入探讨Go语言中的数组与切片、Map以及结构体与指针的高效使用与实战应用。装载资源 - 数组与切片的高效使用数组和切片是Go语言中处理一系列数据的基本工具。数组的大小在声明时固定，而切片则更加灵活，支持动态扩展。数组数组是具有固定大小和类型的元素序列。var planets...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/Go 新手入门/glme2cxvpkbflykn"}},{"title":"第4章：Go组件库 - 数据结构与集合","date":"2024-05-22T11:42:09.000Z","urlname":"glme2cxvpkbflykn","is_nav":false,"updated":"2024-05-24T01:28:43.000Z","not_show":false,"description":"在本章节中，我们将深入探讨Go语言中的数组与切片、Map以及结构体与指针的高效使用与实战应用。这些是构建Go应用程序中不可或缺的基石，能够帮助我们更好地管理和操作数据。装载资源 - 数组与切片的高效使用数组和切片是Go语言中处理一系列数据的基本工具。数组的大小在声明时固定，而切片则更加灵活，支...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1022,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/Go/🏫 新手入门/glme2cxvpkbflykn","path":"docs/doc/💻 编程语言/Go/🏫 新手入门/glme2cxvpkbflykn","filePath":"docs/doc/💻 编程语言/Go/🏫 新手入门/glme2cxvpkbflykn.md","toc":[{"value":"装载资源 - 数组与切片的高效使用","url":"#装载资源---数组与切片的高效使用-1","depth":4},{"value":"数组","url":"#数组-3","depth":5},{"value":"切片","url":"#切片-3","depth":5},{"value":"数组的基本操作","url":"#数组的基本操作-1","depth":4},{"value":"声明和初始化","url":"#声明和初始化-1","depth":5},{"value":"访问和修改","url":"#访问和修改-1","depth":5},{"value":"遍历数组","url":"#遍历数组-1","depth":5},{"value":"切片的灵活操作","url":"#切片的灵活操作-1","depth":4},{"value":"创建和构造","url":"#创建和构造-1","depth":5},{"value":"切片操作","url":"#切片操作-1","depth":5},{"value":"复制和追加","url":"#复制和追加-1","depth":5},{"value":"地图导航 - 深入理解Map的特性与操作","url":"#地图导航---深入理解map的特性与操作-1","depth":4},{"value":"组装机器人 - 结构体与指针的实战应用","url":"#组装机器人---结构体与指针的实战应用-1","depth":4},{"value":"结构体","url":"#结构体-3","depth":5},{"value":"指针","url":"#指针-2","depth":5}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第4章：Go组件库 - 数据结构与集合","datePublished":"2024-05-22T11:42:09.000Z","dateModified":"2024-05-24T01:28:43.000Z","description":"在本章节中，我们将深入探讨Go语言中的数组与切片、Map以及结构体与指针的高效使用与实战应用。这些是构建Go应用程序中不可或缺的基石，能够帮助我们更好地管理和操作数据。装载资源 - 数组与切片的高效使用数组和切片是Go语言中处理一系列数据的基本工具。数组的大小在声明时固定，而切片则更加灵活，支...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🏫 新手入门/glme2cxvpkbflykn"}},{"title":"第3章：Go行动指南 - 流程控制与决策","date":"2024-05-22T11:42:06.000Z","urlname":"gcu7t8o1hfh3tgks","is_nav":false,"updated":"2024-08-06T11:09:32.000Z","not_show":false,"description":"深入了解条件语句和循环语句的使用，是时候做出决策和循环巡航了。路线选择 - 条件语句if/switch的使用在Go的世界中，条件语句就像是在路口做出选择的指南针，它帮助我们根据不同的条件走向不同的路径。使用if语句if语句是最基础的条件判断语句，它允许程序根据条件的真假执行不同的代码段。if ...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":469,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/Go/Go 新手入门/gcu7t8o1hfh3tgks","path":"docs/doc/💻 编程语言/Go/Go 新手入门/gcu7t8o1hfh3tgks","filePath":"docs/doc/💻 编程语言/Go/Go 新手入门/gcu7t8o1hfh3tgks.md","toc":[{"value":"路线选择 - 条件语句if/switch的使用","url":"#路线选择---条件语句ifswitch的使用","depth":4},{"value":"使用if语句","url":"#使用if语句","depth":5},{"value":"使用switch语句","url":"#使用switch语句","depth":5},{"value":"循环巡航 - 理解for与控制流指令","url":"#循环巡航---理解for与控制流指令","depth":4},{"value":"基本for循环","url":"#基本for循环","depth":5},{"value":"while式循环","url":"#while式循环","depth":5},{"value":"无限循环与循环控制","url":"#无限循环与循环控制","depth":5}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第3章：Go行动指南 - 流程控制与决策","datePublished":"2024-05-22T11:42:06.000Z","dateModified":"2024-08-06T11:09:32.000Z","description":"深入了解条件语句和循环语句的使用，是时候做出决策和循环巡航了。路线选择 - 条件语句if/switch的使用在Go的世界中，条件语句就像是在路口做出选择的指南针，它帮助我们根据不同的条件走向不同的路径。使用if语句if语句是最基础的条件判断语句，它允许程序根据条件的真假执行不同的代码段。if ...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/Go 新手入门/gcu7t8o1hfh3tgks"}},{"title":"第3章：Go行动指南 - 流程控制与决策","date":"2024-05-22T11:42:06.000Z","urlname":"gcu7t8o1hfh3tgks","is_nav":false,"updated":"2024-05-24T01:28:39.000Z","not_show":false,"description":"本章节将引导你穿越Go语言的逻辑迷宫，深入了解条件语句和循环语句的使用，是时候做出决策和循环巡航了。路线选择 - 条件语句if/switch的使用在Go的世界中，条件语句就像是在路口做出选择的指南针，它帮助我们根据不同的条件走向不同的路径。使用if语句if语句是最基础的条件判断语句，它允许程序...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":524,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/Go/🏫 新手入门/gcu7t8o1hfh3tgks","path":"docs/doc/💻 编程语言/Go/🏫 新手入门/gcu7t8o1hfh3tgks","filePath":"docs/doc/💻 编程语言/Go/🏫 新手入门/gcu7t8o1hfh3tgks.md","toc":[{"value":"路线选择 - 条件语句if/switch的使用","url":"#路线选择---条件语句ifswitch的使用-1","depth":4},{"value":"使用if语句","url":"#使用if语句-1","depth":5},{"value":"使用switch语句","url":"#使用switch语句-1","depth":5},{"value":"循环巡航 - 理解for与控制流指令","url":"#循环巡航---理解for与控制流指令-1","depth":4},{"value":"基本for循环","url":"#基本for循环-1","depth":5},{"value":"while式循环","url":"#while式循环-1","depth":5},{"value":"无限循环与循环控制","url":"#无限循环与循环控制-1","depth":5}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第3章：Go行动指南 - 流程控制与决策","datePublished":"2024-05-22T11:42:06.000Z","dateModified":"2024-05-24T01:28:39.000Z","description":"本章节将引导你穿越Go语言的逻辑迷宫，深入了解条件语句和循环语句的使用，是时候做出决策和循环巡航了。路线选择 - 条件语句if/switch的使用在Go的世界中，条件语句就像是在路口做出选择的指南针，它帮助我们根据不同的条件走向不同的路径。使用if语句if语句是最基础的条件判断语句，它允许程序...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🏫 新手入门/gcu7t8o1hfh3tgks"}},{"title":"第2章：Go工具箱 - 基础语法全接触","date":"2024-05-22T11:41:38.000Z","urlname":"yvlmw16u6dg0bnyb","is_nav":false,"updated":"2024-08-06T11:08:43.000Z","not_show":false,"description":"本章将全方位接触Go的基础语法，从数据类型、变量与常量的声明与初始化，到运算符与表达式的应用，为你绘制出Go语言的基本脉络。处理信号 - 数据类型的运用与转换在Go语言的行星上，正确地处理数据类型和进行类型转换就像是在浩瀚的宇宙中发送和接收信号一样重要。基本数据类型Go语言提供了丰富的数据类型...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":669,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/Go/Go 新手入门/yvlmw16u6dg0bnyb","path":"docs/doc/💻 编程语言/Go/Go 新手入门/yvlmw16u6dg0bnyb","filePath":"docs/doc/💻 编程语言/Go/Go 新手入门/yvlmw16u6dg0bnyb.md","toc":[{"value":"处理信号 - 数据类型的运用与转换","url":"#处理信号---数据类型的运用与转换","depth":4},{"value":"基本数据类型","url":"#基本数据类型","depth":5},{"value":"类型转换","url":"#类型转换-1","depth":5},{"value":"设置变量 - 变量与常量的声明与初始化","url":"#设置变量---变量与常量的声明与初始化","depth":4},{"value":"变量","url":"#变量","depth":5},{"value":"常量","url":"#常量","depth":5},{"value":"连接器搭建 - 运算符与表达式","url":"#连接器搭建---运算符与表达式","depth":4},{"value":"算术运算符","url":"#算术运算符-2","depth":5},{"value":"比较运算符","url":"#比较运算符-2","depth":5},{"value":"逻辑运算符","url":"#逻辑运算符-2","depth":5}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第2章：Go工具箱 - 基础语法全接触","datePublished":"2024-05-22T11:41:38.000Z","dateModified":"2024-08-06T11:08:43.000Z","description":"本章将全方位接触Go的基础语法，从数据类型、变量与常量的声明与初始化，到运算符与表达式的应用，为你绘制出Go语言的基本脉络。处理信号 - 数据类型的运用与转换在Go语言的行星上，正确地处理数据类型和进行类型转换就像是在浩瀚的宇宙中发送和接收信号一样重要。基本数据类型Go语言提供了丰富的数据类型...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/Go 新手入门/yvlmw16u6dg0bnyb"}},{"title":"第2章：Go工具箱 - 基础语法全接触","date":"2024-05-22T11:41:38.000Z","urlname":"yvlmw16u6dg0bnyb","is_nav":false,"updated":"2024-05-24T01:28:33.000Z","not_show":false,"description":"进一步深入Go语言的世界，本章将全方位接触Go的基础语法，从数据类型、变量与常量的声明与初始化，到运算符与表达式的应用，为你绘制出Go语言的基本脉络。处理信号 - 数据类型的运用与转换在Go语言的行星上，正确地处理数据类型和进行类型转换就像是在浩瀚的宇宙中发送和接收信号一样重要。基本数据类型G...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":720,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/Go/🏫 新手入门/yvlmw16u6dg0bnyb","path":"docs/doc/💻 编程语言/Go/🏫 新手入门/yvlmw16u6dg0bnyb","filePath":"docs/doc/💻 编程语言/Go/🏫 新手入门/yvlmw16u6dg0bnyb.md","toc":[{"value":"处理信号 - 数据类型的运用与转换","url":"#处理信号---数据类型的运用与转换-1","depth":4},{"value":"基本数据类型","url":"#基本数据类型-1","depth":5},{"value":"类型转换","url":"#类型转换-2","depth":5},{"value":"设置变量 - 变量与常量的声明与初始化","url":"#设置变量---变量与常量的声明与初始化-1","depth":4},{"value":"变量","url":"#变量-1","depth":5},{"value":"常量","url":"#常量-1","depth":5},{"value":"连接器搭建 - 运算符与表达式","url":"#连接器搭建---运算符与表达式-1","depth":4},{"value":"算术运算符","url":"#算术运算符-3","depth":5},{"value":"比较运算符","url":"#比较运算符-3","depth":5},{"value":"逻辑运算符","url":"#逻辑运算符-3","depth":5}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第2章：Go工具箱 - 基础语法全接触","datePublished":"2024-05-22T11:41:38.000Z","dateModified":"2024-05-24T01:28:33.000Z","description":"进一步深入Go语言的世界，本章将全方位接触Go的基础语法，从数据类型、变量与常量的声明与初始化，到运算符与表达式的应用，为你绘制出Go语言的基本脉络。处理信号 - 数据类型的运用与转换在Go语言的行星上，正确地处理数据类型和进行类型转换就像是在浩瀚的宇宙中发送和接收信号一样重要。基本数据类型G...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🏫 新手入门/yvlmw16u6dg0bnyb"}},{"title":"第1章：Go启航 - 快速入门指南","date":"2024-05-22T11:36:24.000Z","urlname":"tgkdc0idgg402xt1","is_nav":false,"updated":"2024-08-06T11:07:35.000Z","not_show":false,"description":"在这个章节中，我们将深入探索Go的程序结构，包括包声明、导入包、函数、变量、语句和表达式以及注释等各个部分。通过详细解析和配合实例代码，让你对Go程序的基本结构有个全面的了解。1.1 包声明在Go语言中，每个文件都属于一个包，而一个程序可能由多个包组成。包是Go语言组织代码的基本单位，有助于代...\r","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1073,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Go/Go 新手入门/tgkdc0idgg402xt1","path":"docs/doc/💻 编程语言/Go/Go 新手入门/tgkdc0idgg402xt1","filePath":"docs/doc/💻 编程语言/Go/Go 新手入门/tgkdc0idgg402xt1.md","toc":[{"value":"1.1 包声明","url":"#11-包声明","depth":4},{"value":"1.2 导入包","url":"#12-导入包","depth":4},{"value":"1.3 函数","url":"#13-函数","depth":4},{"value":"1.4 变量","url":"#14-变量","depth":4},{"value":"1.5 语句和表达式","url":"#15-语句和表达式","depth":4},{"value":"1.6 注释","url":"#16-注释","depth":4},{"value":"1.7 控制流程","url":"#17-控制流程","depth":4},{"value":"if 语句","url":"#if-语句-2","depth":5},{"value":"switch 语句","url":"#switch-语句","depth":5},{"value":"for 循环","url":"#for-循环-2","depth":5},{"value":"1.8 数据类型与结构","url":"#18-数据类型与结构","depth":4},{"value":"数组","url":"#数组-2","depth":5},{"value":"切片","url":"#切片-2","depth":5},{"value":"映射","url":"#映射","depth":5},{"value":"结构体","url":"#结构体-2","depth":5},{"value":"1.9 接口与方法","url":"#19-接口与方法","depth":4},{"value":"1.10 并发编程","url":"#110-并发编程","depth":4},{"value":"goroutines","url":"#goroutines","depth":5},{"value":"channels","url":"#channels","depth":5}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第1章：Go启航 - 快速入门指南","datePublished":"2024-05-22T11:36:24.000Z","dateModified":"2024-08-06T11:07:35.000Z","description":"在这个章节中，我们将深入探索Go的程序结构，包括包声明、导入包、函数、变量、语句和表达式以及注释等各个部分。通过详细解析和配合实例代码，让你对Go程序的基本结构有个全面的了解。1.1 包声明在Go语言中，每个文件都属于一个包，而一个程序可能由多个包组成。包是Go语言组织代码的基本单位，有助于代...\r","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/Go 新手入门/tgkdc0idgg402xt1"}},{"title":"第1章：Go启航 - 快速入门指南","date":"2024-05-22T11:36:24.000Z","urlname":"tgkdc0idgg402xt1","is_nav":false,"updated":"2024-05-24T01:28:30.000Z","not_show":false,"description":"在这个章节中，我们将深入探索Go的程序结构，包括包声明、导入包、函数、变量、语句和表达式以及注释等各个部分。通过详细解析和配合实例代码，让你对Go程序的基本结构有个全面的了解。1.1 包声明在Go语言中，每个文件都属于一个包，而一个程序可能由多个包组成。包是Go语言组织代码的基本单位，有助于代...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1160,"minutes":4,"text":"4 分钟"},"slug":"doc/💻 编程语言/Go/🏫 新手入门/tgkdc0idgg402xt1","path":"docs/doc/💻 编程语言/Go/🏫 新手入门/tgkdc0idgg402xt1","filePath":"docs/doc/💻 编程语言/Go/🏫 新手入门/tgkdc0idgg402xt1.md","toc":[{"value":"1.1 包声明","url":"#11-包声明-1","depth":4},{"value":"1.2 导入包","url":"#12-导入包-1","depth":4},{"value":"1.3 函数","url":"#13-函数-1","depth":4},{"value":"1.4 变量","url":"#14-变量-1","depth":4},{"value":"1.5 语句和表达式","url":"#15-语句和表达式-1","depth":4},{"value":"1.6 注释","url":"#16-注释-1","depth":4},{"value":"1.7 控制流程","url":"#17-控制流程-1","depth":4},{"value":"if 语句","url":"#if-语句-3","depth":5},{"value":"switch 语句","url":"#switch-语句-1","depth":5},{"value":"for 循环","url":"#for-循环-3","depth":5},{"value":"1.8 数据类型与结构","url":"#18-数据类型与结构-1","depth":4},{"value":"数组","url":"#数组-4","depth":5},{"value":"切片","url":"#切片-4","depth":5},{"value":"映射","url":"#映射-1","depth":5},{"value":"结构体","url":"#结构体-4","depth":5},{"value":"1.9 接口与方法","url":"#19-接口与方法-1","depth":4},{"value":"1.10 并发编程","url":"#110-并发编程-1","depth":4},{"value":"goroutines","url":"#goroutines-1","depth":5},{"value":"channels","url":"#channels-1","depth":5}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"第1章：Go启航 - 快速入门指南","datePublished":"2024-05-22T11:36:24.000Z","dateModified":"2024-05-24T01:28:30.000Z","description":"在这个章节中，我们将深入探索Go的程序结构，包括包声明、导入包、函数、变量、语句和表达式以及注释等各个部分。通过详细解析和配合实例代码，让你对Go程序的基本结构有个全面的了解。1.1 包声明在Go语言中，每个文件都属于一个包，而一个程序可能由多个包组成。包是Go语言组织代码的基本单位，有助于代...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/🏫 新手入门/tgkdc0idgg402xt1"}},{"title":"🤔Golang语法速查手册","date":"2024-05-22T11:12:04.000Z","urlname":"rwa8n4f482ryn4o9","is_nav":false,"nav_path":"golang_instant_reference\r","updated":"2024-09-18T07:14:47.000Z","not_show":false,"description":"---nav_path: golang_instant_reference---golang-cheat-sheet是目前GitHub上最流行的golang代码速查表。作者Ariel Mashraki也是Facebook著名ORM框架ent(2019年开源)的作者和首席布道师。这一篇是中文翻译...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":4253,"minutes":14,"text":"14 分钟"},"slug":"doc/💻 编程语言/Go/rwa8n4f482ryn4o9","path":"docs/doc/💻 编程语言/Go/rwa8n4f482ryn4o9","filePath":"docs/doc/💻 编程语言/Go/rwa8n4f482ryn4o9.md","toc":[{"value":"致谢","url":"#致谢","depth":2},{"value":"Go特性一览","url":"#go特性一览","depth":2},{"value":"基础语法","url":"#基础语法","depth":1},{"value":"Hello World","url":"#hello-world-1","depth":2},{"value":"操作符","url":"#操作符","depth":2},{"value":"算术操作符","url":"#算术操作符","depth":3},{"value":"比较操作符","url":"#比较操作符","depth":3},{"value":"逻辑操作符","url":"#逻辑操作符","depth":3},{"value":"其它","url":"#其它","depth":3},{"value":"声明","url":"#声明","depth":2},{"value":"函数","url":"#函数","depth":2},{"value":"函数作为值和闭包","url":"#函数作为值和闭包","depth":3},{"value":"参数可变的函数","url":"#参数可变的函数","depth":3},{"value":"内置类型","url":"#内置类型","depth":2},{"value":"类型转换","url":"#类型转换","depth":2},{"value":"包","url":"#包","depth":2},{"value":"控制结构","url":"#控制结构","depth":2},{"value":"If","url":"#if","depth":3},{"value":"循环","url":"#循环","depth":3},{"value":"Switch","url":"#switch","depth":3},{"value":"数组，切片和range迭代","url":"#数组切片和range迭代","depth":2},{"value":"数组","url":"#数组","depth":3},{"value":"切片","url":"#切片","depth":3},{"value":"数组和切片上的操作","url":"#数组和切片上的操作","depth":3},{"value":"集合","url":"#集合","depth":2},{"value":"结构体","url":"#结构体","depth":2},{"value":"指针","url":"#指针","depth":2},{"value":"接口","url":"#接口","depth":2},{"value":"接口和结构体嵌套","url":"#接口和结构体嵌套","depth":2},{"value":"错误处理","url":"#错误处理","depth":2},{"value":"并发","url":"#并发","depth":1},{"value":"协程Goroutine","url":"#协程goroutine","depth":2},{"value":"管道Channel","url":"#管道channel","depth":2},{"value":"Channel原则","url":"#channel原则","depth":3},{"value":"打印","url":"#打印","depth":2},{"value":"反射","url":"#反射","depth":2},{"value":"类型Switch","url":"#类型switch","depth":3},{"value":"代码片段","url":"#代码片段","depth":1},{"value":"文件嵌入","url":"#文件嵌入","depth":2},{"value":"HTTP服务器","url":"#http服务器","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"🤔Golang语法速查手册","datePublished":"2024-05-22T11:12:04.000Z","dateModified":"2024-09-18T07:14:47.000Z","description":"---nav_path: golang_instant_reference---golang-cheat-sheet是目前GitHub上最流行的golang代码速查表。作者Ariel Mashraki也是Facebook著名ORM框架ent(2019年开源)的作者和首席布道师。这一篇是中文翻译...","url":"https://offernow.cn/docs/doc/💻 编程语言/Go/rwa8n4f482ryn4o9"}},{"title":"Go","date":"2024-05-22T09:04:00.000Z","urlname":"gzdu2g90x1k7goos","is_nav":true,"nav_path":"golang","updated":"2024-09-28T04:15:21.000Z","not_show":false,"description":"---nav_path: golangis_nav: true---Go 开发者路线图 20241. 基础知识1.1 语法基础变量、常量、数据类型控制结构（if、for、switch）函数和方法包管理错误处理1.2 数据结构数组和切片映射（Map）结构体接口1.3 并发基础Goroutines...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/23323cea8b284be9547a58448ae06501.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":603,"minutes":2,"text":"2 分钟"},"slug":"doc/💻 编程语言/gzdu2g90x1k7goos","path":"docs/doc/💻 编程语言/gzdu2g90x1k7goos","filePath":"docs/doc/💻 编程语言/gzdu2g90x1k7goos.md","toc":[{"value":"Go 开发者路线图 2024","url":"#go-开发者路线图-2024","depth":1},{"value":"1. 基础知识","url":"#1-基础知识","depth":2},{"value":"1.1 语法基础","url":"#11-语法基础","depth":3},{"value":"1.2 数据结构","url":"#12-数据结构","depth":3},{"value":"1.3 并发基础","url":"#13-并发基础","depth":3},{"value":"2. 中级概念","url":"#2-中级概念","depth":2},{"value":"2.1 Web开发","url":"#21-web开发","depth":3},{"value":"2.2 数据库操作","url":"#22-数据库操作","depth":3},{"value":"2.3 测试与性能优化","url":"#23-测试与性能优化","depth":3},{"value":"3. 高级主题","url":"#3-高级主题","depth":2},{"value":"3.1 高级并发模式","url":"#31-高级并发模式","depth":3},{"value":"3.2 系统编程","url":"#32-系统编程","depth":3},{"value":"3.3 微服务架构","url":"#33-微服务架构","depth":3},{"value":"4. 专业化领域","url":"#4-专业化领域","depth":2},{"value":"4.1 云原生开发","url":"#41-云原生开发","depth":3},{"value":"4.2 人工智能与机器学习","url":"#42-人工智能与机器学习","depth":3},{"value":"4.3 区块链开发","url":"#43-区块链开发","depth":3},{"value":"5. 最佳实践与工具","url":"#5-最佳实践与工具","depth":2},{"value":"6. 社区参与和持续学习","url":"#6-社区参与和持续学习","depth":2},{"value":"学习资源","url":"#学习资源","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Go","datePublished":"2024-05-22T09:04:00.000Z","dateModified":"2024-09-28T04:15:21.000Z","description":"---nav_path: golangis_nav: true---Go 开发者路线图 20241. 基础知识1.1 语法基础变量、常量、数据类型控制结构（if、for、switch）函数和方法包管理错误处理1.2 数据结构数组和切片映射（Map）结构体接口1.3 并发基础Goroutines...","url":"https://offernow.cn/docs/doc/💻 编程语言/gzdu2g90x1k7goos"}},{"title":"💻 编程语言","date":"2024-05-22T09:03:34.000Z","urlname":"gu2a0qdxqzzgwob6","is_nav":true,"nav_path":"language","updated":"2024-06-23T12:33:54.000Z","not_show":false,"description":"在数字化迅速发展的时代，编程语言成为探索数字世界的重要工具。了解热门编程语言如C++、Java、Go、Python、JavaScript和TypeScript，提升你的职业竞争力和逻辑思维能力。开始你的编程之旅，创造性地表达与全球开发者交流。","tags":[],"keywords":"编程语言，数字化时代，热门编程语言，职业机会，逻辑思维","authors":["whitedew"],"type":"Post","readingTime":{"words":601,"minutes":2,"text":"2 分钟"},"slug":"doc/gu2a0qdxqzzgwob6","path":"docs/doc/gu2a0qdxqzzgwob6","filePath":"docs/doc/gu2a0qdxqzzgwob6.md","toc":[{"value":"热门编程语言速达","url":"#热门编程语言速达","depth":3},{"value":"为何学习编程语言？","url":"#为何学习编程语言","depth":3},{"value":"开始你的编程旅程","url":"#开始你的编程旅程","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"💻 编程语言","datePublished":"2024-05-22T09:03:34.000Z","dateModified":"2024-06-23T12:33:54.000Z","description":"在数字化迅速发展的时代，编程语言成为探索数字世界的重要工具。了解热门编程语言如C++、Java、Go、Python、JavaScript和TypeScript，提升你的职业竞争力和逻辑思维能力。开始你的编程之旅，创造性地表达与全球开发者交流。","url":"https://offernow.cn/docs/doc/gu2a0qdxqzzgwob6"}},{"title":"📖 Java速查手册","date":"2024-05-22T00:50:43.000Z","urlname":"ovnsrnr6cn8gasi5","is_nav":false,"nav_path":"java_instant_reference","updated":"2024-05-24T04:49:57.000Z","not_show":false,"description":"---nav_path: java_instant_reference---下面是Java速查手册的一个大纲，涵盖了基本语法、常用类和方法、异常处理等内容。这样的手册对初学者和有经验的开发者都非常有用，可以节省查找文档和在线搜索的时间。1. 基本语法1.1 数据类型 基本数据类型： byte ...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":2485,"minutes":8,"text":"8 分钟"},"slug":"doc/💻 编程语言/Java/ovnsrnr6cn8gasi5","path":"docs/doc/💻 编程语言/Java/ovnsrnr6cn8gasi5","filePath":"docs/doc/💻 编程语言/Java/ovnsrnr6cn8gasi5.md","toc":[{"value":"1. 基本语法","url":"#1-基本语法","depth":2},{"value":"1.1 数据类型","url":"#11-数据类型","depth":3},{"value":"1.2 变量与常量","url":"#12-变量与常量","depth":3},{"value":"1.3 运算符","url":"#13-运算符","depth":3},{"value":"1.4 控制结构","url":"#14-控制结构","depth":3},{"value":"2. 面向对象编程","url":"#2-面向对象编程","depth":2},{"value":"2.1 类与对象","url":"#21-类与对象","depth":3},{"value":"2.2 继承","url":"#22-继承","depth":3},{"value":"2.3 多态","url":"#23-多态","depth":3},{"value":"3. 常用类与方法","url":"#3-常用类与方法","depth":2},{"value":"3.1 字符串处理","url":"#31-字符串处理","depth":3},{"value":"3.2 集合框架","url":"#32-集合框架","depth":3},{"value":"4. 异常处理","url":"#4-异常处理","depth":2},{"value":"4.1 try-catch块","url":"#41-try-catch块","depth":3},{"value":"4.2 自定义异常","url":"#42-自定义异常","depth":3},{"value":"5. 输入输出（I/O）","url":"#5-输入输出io","depth":2},{"value":"5.1 文件操作","url":"#51-文件操作","depth":3},{"value":"6. 并发编程","url":"#6-并发编程","depth":2},{"value":"6.1 创建线程","url":"#61-创建线程","depth":3},{"value":"6. 并发编程 (续)","url":"#6-并发编程-续","depth":2},{"value":"6.1 创建线程","url":"#61-创建线程-1","depth":3},{"value":"6.2 并发工具类","url":"#62-并发工具类","depth":3},{"value":"7. 网络编程","url":"#7-网络编程","depth":2},{"value":"7.1 创建服务器","url":"#71-创建服务器","depth":3},{"value":"7.2 创建客户端","url":"#72-创建客户端","depth":3},{"value":"8. 数据库操作","url":"#8-数据库操作","depth":2},{"value":"8.1 使用JDBC连接数据库","url":"#81-使用jdbc连接数据库","depth":3},{"value":"8.2 执行SQL查询","url":"#82-执行sql查询","depth":3},{"value":"8.3 更新数据","url":"#83-更新数据","depth":3},{"value":"8.4 插入数据","url":"#84-插入数据","depth":3},{"value":"8.5 删除数据","url":"#85-删除数据","depth":3},{"value":"9. 网络编程","url":"#9-网络编程","depth":2},{"value":"9.1 创建服务器","url":"#91-创建服务器","depth":3},{"value":"9.2 创建客户端","url":"#92-创建客户端","depth":3},{"value":"10. Web开发","url":"#10-web开发","depth":2},{"value":"10.1 创建Servlet","url":"#101-创建servlet","depth":3},{"value":"10.2 创建JSP页面","url":"#102-创建jsp页面","depth":3},{"value":"10.3 Spring Boot","url":"#103-spring-boot","depth":3},{"value":"10.4 Spring MVC","url":"#104-spring-mvc","depth":3},{"value":"11. 测试","url":"#11-测试","depth":2},{"value":"11.1 使用JUnit","url":"#111-使用junit","depth":3},{"value":"11.2 使用Mockito","url":"#112-使用mockito","depth":3},{"value":"12. 常见问题","url":"#12-常见问题","depth":2},{"value":"12.1 NullPointerException","url":"#121-nullpointerexception","depth":3},{"value":"12.2 ClassCastException","url":"#122-classcastexception","depth":3},{"value":"12.3 ArrayIndexOutOfBoundsException","url":"#123-arrayindexoutofboundsexception","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"📖 Java速查手册","datePublished":"2024-05-22T00:50:43.000Z","dateModified":"2024-05-24T04:49:57.000Z","description":"---nav_path: java_instant_reference---下面是Java速查手册的一个大纲，涵盖了基本语法、常用类和方法、异常处理等内容。这样的手册对初学者和有经验的开发者都非常有用，可以节省查找文档和在线搜索的时间。1. 基本语法1.1 数据类型 基本数据类型： byte ...","url":"https://offernow.cn/docs/doc/💻 编程语言/Java/ovnsrnr6cn8gasi5"}},{"title":"MySQL","date":"2024-05-22T00:50:06.000Z","urlname":"oawe7ufgang93sac","is_nav":true,"nav_path":"mysql","updated":"2024-09-28T04:28:20.000Z","not_show":false,"description":"MySQL数据库管理系统，支持SQL语言，提供高效的数据存储和数据库优化解决方案。了解更多关于MySQL的详细信息。","tags":[],"keywords":"MySQL, 数据库管理, SQL语言, 数据存储, 数据库优化","authors":["whitedew"],"type":"Post","readingTime":{"words":362,"minutes":1,"text":"1 分钟"},"slug":"doc/📚 计算机基础/oawe7ufgang93sac","path":"docs/doc/📚 计算机基础/oawe7ufgang93sac","filePath":"docs/doc/📚 计算机基础/oawe7ufgang93sac.md","toc":[{"value":"MySQL 栏目介绍","url":"#mysql-栏目介绍","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"MySQL","datePublished":"2024-05-22T00:50:06.000Z","dateModified":"2024-09-28T04:28:20.000Z","description":"MySQL数据库管理系统，支持SQL语言，提供高效的数据存储和数据库优化解决方案。了解更多关于MySQL的详细信息。","url":"https://offernow.cn/docs/doc/📚 计算机基础/oawe7ufgang93sac"}},{"title":"Linux解密","date":"2024-05-22T00:49:10.000Z","urlname":"giovviztpgb64iw5","is_nav":false,"nav_path":"linux","updated":"2024-06-21T09:09:07.000Z","not_show":false,"description":"了解Linux解密的技术与方法，提高操作系统的安全性和效率。","tags":[],"keywords":"Linux, 解密, 操作系统, 技术, 安全","authors":["whitedew"],"type":"Post","readingTime":{"words":0,"minutes":0,"text":"小于一分钟"},"slug":"doc/📚 计算机基础/giovviztpgb64iw5","path":"docs/doc/📚 计算机基础/giovviztpgb64iw5","filePath":"docs/doc/📚 计算机基础/giovviztpgb64iw5.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Linux解密","datePublished":"2024-05-22T00:49:10.000Z","dateModified":"2024-06-21T09:09:07.000Z","description":"了解Linux解密的技术与方法，提高操作系统的安全性和效率。","url":"https://offernow.cn/docs/doc/📚 计算机基础/giovviztpgb64iw5"}},{"title":"编译原理","date":"2024-05-22T00:48:53.000Z","urlname":"pmgc87gi7d1cap66","is_nav":false,"nav_path":"compile","updated":"2024-06-28T03:43:02.000Z","not_show":false,"description":"探讨编译原理，从词法分析到语法分析，再到代码优化。了解编译器设计与实现的核心内容和前沿技术，全面掌握编译器的结构与功能。","tags":[],"keywords":"编译原理, 编译器设计, 词法分析, 语法分析, 代码优化","authors":["whitedew"],"type":"Post","readingTime":{"words":565,"minutes":2,"text":"2 分钟"},"slug":"doc/📚 计算机基础/pmgc87gi7d1cap66","path":"docs/doc/📚 计算机基础/pmgc87gi7d1cap66","filePath":"docs/doc/📚 计算机基础/pmgc87gi7d1cap66.md","toc":[{"value":"编译原理章节目录","url":"#编译原理章节目录","depth":3},{"value":"第1章 引言","url":"#第1章-引言","depth":4},{"value":"第2章 词法分析","url":"#第2章-词法分析","depth":4},{"value":"第3章 语法分析","url":"#第3章-语法分析","depth":4},{"value":"第4章 语义分析","url":"#第4章-语义分析","depth":4},{"value":"第5章 中间代码生成","url":"#第5章-中间代码生成","depth":4},{"value":"第6章 代码优化","url":"#第6章-代码优化","depth":4},{"value":"第7章 目标代码生成","url":"#第7章-目标代码生成","depth":4},{"value":"第8章 运行时环境","url":"#第8章-运行时环境","depth":4},{"value":"第9章 编译器的实现","url":"#第9章-编译器的实现","depth":4},{"value":"第10章 编译器前沿技术","url":"#第10章-编译器前沿技术","depth":4}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"编译原理","datePublished":"2024-05-22T00:48:53.000Z","dateModified":"2024-06-28T03:43:02.000Z","description":"探讨编译原理，从词法分析到语法分析，再到代码优化。了解编译器设计与实现的核心内容和前沿技术，全面掌握编译器的结构与功能。","url":"https://offernow.cn/docs/doc/📚 计算机基础/pmgc87gi7d1cap66"}},{"title":"Java","date":"2024-05-22T00:48:41.000Z","urlname":"qnf5c4s774uxb7s4","is_nav":true,"nav_path":"java","updated":"2024-09-28T04:04:59.000Z","not_show":false,"description":"---nav_path: javais_nav: true2024年Java开发者学习路线图1. 基础知识1.1 Java语法变量、数据类型、运算符控制流程（if-else, switch, loops）方法和参数传递数组和字符串操作1.2 面向对象编程(OOP)概念类和对象继承、封装、多态抽...","cover":"https://cdn.nlark.com/yuque/__mermaid_v3/3dfd7076e3fd2cae25db4b4ea5aa127b.svg","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":1040,"minutes":3,"text":"3 分钟"},"slug":"doc/💻 编程语言/qnf5c4s774uxb7s4","path":"docs/doc/💻 编程语言/qnf5c4s774uxb7s4","filePath":"docs/doc/💻 编程语言/qnf5c4s774uxb7s4.md","toc":[{"value":"2024年Java开发者学习路线图","url":"#2024年java开发者学习路线图","depth":1},{"value":"1. 基础知识","url":"#1-基础知识-1","depth":2},{"value":"1.1 Java语法","url":"#11-java语法","depth":3},{"value":"1.2 面向对象编程(OOP)概念","url":"#12-面向对象编程oop概念","depth":3},{"value":"1.3 异常处理","url":"#13-异常处理","depth":3},{"value":"1.4 集合框架","url":"#14-集合框架","depth":3},{"value":"2. 核心Java","url":"#2-核心java","depth":2},{"value":"2.1 多线程与并发","url":"#21-多线程与并发","depth":3},{"value":"2.2 I/O与NIO","url":"#22-io与nio","depth":3},{"value":"2.3 注解与反射","url":"#23-注解与反射","depth":3},{"value":"2.4 Lambda表达式与Stream API","url":"#24-lambda表达式与stream-api","depth":3},{"value":"3. 高级Java","url":"#3-高级java","depth":2},{"value":"3.1 设计模式","url":"#31-设计模式","depth":3},{"value":"3.2 JVM原理与调优","url":"#32-jvm原理与调优","depth":3},{"value":"3.3 性能优化","url":"#33-性能优化","depth":3},{"value":"3.4 函数式编程","url":"#34-函数式编程","depth":3},{"value":"4. Java生态系统","url":"#4-java生态系统","depth":2},{"value":"4.1 Spring生态","url":"#41-spring生态","depth":3},{"value":"4.2 数据库与ORM","url":"#42-数据库与orm","depth":3},{"value":"4.3 构建工具","url":"#43-构建工具","depth":3},{"value":"4.4 测试框架","url":"#44-测试框架","depth":3},{"value":"5. 专业化领域","url":"#5-专业化领域","depth":2},{"value":"5.1 微服务架构","url":"#51-微服务架构","depth":3},{"value":"5.2 云原生开发","url":"#52-云原生开发","depth":3},{"value":"5.3 大数据处理","url":"#53-大数据处理","depth":3},{"value":"5.4 安全与加密","url":"#54-安全与加密","depth":3},{"value":"6. 最佳实践与工具","url":"#6-最佳实践与工具","depth":2},{"value":"6.1 代码质量","url":"#61-代码质量","depth":3},{"value":"6.2 CI/CD","url":"#62-cicd","depth":3},{"value":"6.3 文档与API设计","url":"#63-文档与api设计","depth":3},{"value":"6.4 容器化","url":"#64-容器化","depth":3},{"value":"7. 持续学习与社区参与","url":"#7-持续学习与社区参与","depth":2},{"value":"7.1 开源贡献","url":"#71-开源贡献","depth":3},{"value":"7.2 技术博客","url":"#72-技术博客","depth":3},{"value":"7.3 会议参与","url":"#73-会议参与","depth":3},{"value":"7.4 新特性学习","url":"#74-新特性学习","depth":3},{"value":"学习建议","url":"#学习建议","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"Java","datePublished":"2024-05-22T00:48:41.000Z","dateModified":"2024-09-28T04:04:59.000Z","description":"---nav_path: javais_nav: true2024年Java开发者学习路线图1. 基础知识1.1 Java语法变量、数据类型、运算符控制流程（if-else, switch, loops）方法和参数传递数组和字符串操作1.2 面向对象编程(OOP)概念类和对象继承、封装、多态抽...","url":"https://offernow.cn/docs/doc/💻 编程语言/qnf5c4s774uxb7s4"}},{"title":"操作系统","date":"2024-05-22T00:48:36.000Z","urlname":"wqxa4oybgctzpy2u","is_nav":true,"nav_path":"os","updated":"2024-09-28T04:26:12.000Z","not_show":false,"description":"了解操作系统的基本概念和功能，探索系统软件的架构和应用，掌握IT基础知识。","tags":[],"keywords":"操作系统, OS, 系统软件, IT基础","authors":["whitedew"],"type":"Post","readingTime":{"words":413,"minutes":1,"text":"1 分钟"},"slug":"doc/📚 计算机基础/wqxa4oybgctzpy2u","path":"docs/doc/📚 计算机基础/wqxa4oybgctzpy2u","filePath":"docs/doc/📚 计算机基础/wqxa4oybgctzpy2u.md","toc":[{"value":"操作系统栏目介绍","url":"#操作系统栏目介绍","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"操作系统","datePublished":"2024-05-22T00:48:36.000Z","dateModified":"2024-09-28T04:26:12.000Z","description":"了解操作系统的基本概念和功能，探索系统软件的架构和应用，掌握IT基础知识。","url":"https://offernow.cn/docs/doc/📚 计算机基础/wqxa4oybgctzpy2u"}},{"title":"更新日志","date":"2024-05-22T00:47:22.000Z","urlname":"qfaugcu7d1ucqdq5","is_nav":false,"nav_path":"changelog\r","updated":"2024-10-10T12:58:04.000Z","not_show":false,"description":"---nav_path: changelog---介绍当前网站的更新计划以及快要更新的东西，如果大家有特别的需要也可以进行留言。2024-10新增：写一个脚本，每日定时更新网站切换为静态生成网页修改仓库名称为AirBlog首页修改-新增标签墙切换邮件通知功能到163邮箱，防止被设置为垃圾邮箱新...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":617,"minutes":2,"text":"2 分钟"},"slug":"doc/🏄 关于/qfaugcu7d1ucqdq5","path":"docs/doc/🏄 关于/qfaugcu7d1ucqdq5","filePath":"docs/doc/🏄 关于/qfaugcu7d1ucqdq5.md","toc":[{"value":"2024-10","url":"#2024-10","depth":2},{"value":"2024-09","url":"#2024-09","depth":2},{"value":"2024-7-17","url":"#2024-7-17","depth":2},{"value":"2024-6-24","url":"#2024-6-24","depth":2},{"value":"2024-6-23","url":"#2024-6-23","depth":2},{"value":"2024-6-19","url":"#2024-6-19","depth":2},{"value":"2024-6-13","url":"#2024-6-13","depth":2},{"value":"2024-6-06","url":"#2024-6-06","depth":2},{"value":"2024-5-22","url":"#2024-5-22","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"更新日志","datePublished":"2024-05-22T00:47:22.000Z","dateModified":"2024-10-10T12:58:04.000Z","description":"---nav_path: changelog---介绍当前网站的更新计划以及快要更新的东西，如果大家有特别的需要也可以进行留言。2024-10新增：写一个脚本，每日定时更新网站切换为静态生成网页修改仓库名称为AirBlog首页修改-新增标签墙切换邮件通知功能到163邮箱，防止被设置为垃圾邮箱新...","url":"https://offernow.cn/docs/doc/🏄 关于/qfaugcu7d1ucqdq5"}},{"title":"TinyWebServer","date":"2024-05-22T00:44:52.000Z","urlname":"tihx6bwirgug3b9d","is_nav":false,"nav_path":"tiny_web_server","updated":"2024-06-21T09:00:02.000Z","not_show":false,"description":"Linux下C++轻量级Web服务器TinyWebServer，帮助初学者快速实践网络编程。使用线程池、非阻塞socket、epoll的并发模型及状态机解析HTTP请求。了解更多关于TinyWebServer的开发和功能。","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1716527116265-facee58e-37f6-42ad-bd7e-65dfac72b542.png","tags":[],"keywords":"TinyWebServer, C++轻量级Web服务器, 线程池, 非阻塞socket, epoll","authors":["whitedew"],"type":"Post","readingTime":{"words":12755,"minutes":43,"text":"43 分钟"},"slug":"doc/🧰 实践项目/tihx6bwirgug3b9d","path":"docs/doc/🧰 实践项目/tihx6bwirgug3b9d","filePath":"docs/doc/🧰 实践项目/tihx6bwirgug3b9d.md","toc":[{"value":"前言","url":"#前言","depth":1},{"value":"一、Web基础知识","url":"#一web基础知识","depth":1},{"value":"什么是web sever？","url":"#什么是web-sever","depth":2},{"value":"什么是socket？","url":"#什么是socket","depth":2},{"value":"IO复用是什么？","url":"#io复用是什么","depth":2},{"value":"什么是多线程？","url":"#什么是多线程","depth":2},{"value":"二、项目学习","url":"#二项目学习","depth":1},{"value":"代码架构","url":"#代码架构","depth":2},{"value":"编译运行","url":"#编译运行","depth":2},{"value":"功能细究","url":"#功能细究","depth":2},{"value":"三、拔萝带泥——HTTP","url":"#三拔萝带泥http","depth":1},{"value":"Epoll","url":"#epoll","depth":2},{"value":"常用函数","url":"#常用函数","depth":3},{"value":"典例","url":"#典例","depth":3},{"value":"HTTP","url":"#http","depth":2},{"value":"HTTP介绍","url":"#http介绍","depth":3},{"value":"HTTP处理流程","url":"#http处理流程","depth":3},{"value":"连接处理","url":"#连接处理","depth":4},{"value":"请求报文处理","url":"#请求报文处理","depth":4},{"value":"返回响应报文","url":"#返回响应报文","depth":4},{"value":"四、线程池","url":"#四线程池","depth":1},{"value":"定义","url":"#定义","depth":2},{"value":"线程池创建","url":"#线程池创建","depth":2},{"value":"加入请求队列","url":"#加入请求队列","depth":2},{"value":"线程处理","url":"#线程处理","depth":2},{"value":"五、定时器","url":"#五定时器","depth":1},{"value":"原理解析","url":"#原理解析","depth":2},{"value":"代码与框图","url":"#代码与框图","depth":2},{"value":"六、日志系统","url":"#六日志系统","depth":1},{"value":"七、其他","url":"#七其他","depth":1},{"value":"数据库连接池","url":"#数据库连接池","depth":2},{"value":"封装同步类","url":"#封装同步类","depth":2},{"value":"压力测试","url":"#压力测试","depth":2},{"value":"优雅关闭连接","url":"#优雅关闭连接","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"TinyWebServer","datePublished":"2024-05-22T00:44:52.000Z","dateModified":"2024-06-21T09:00:02.000Z","description":"Linux下C++轻量级Web服务器TinyWebServer，帮助初学者快速实践网络编程。使用线程池、非阻塞socket、epoll的并发模型及状态机解析HTTP请求。了解更多关于TinyWebServer的开发和功能。","url":"https://offernow.cn/docs/doc/🧰 实践项目/tihx6bwirgug3b9d"}},{"title":"经典智力题","date":"2024-05-22T00:44:28.000Z","urlname":"bzcgeyqlpmluo6ln","is_nav":true,"nav_path":"iq","updated":"2024-06-25T13:47:25.000Z","not_show":false,"description":"---is_nav: truenav_path: iq大家好，我是白露啊。互联网行业为全球发展带来了巨大的推动力，同时也孕育了无数的工作机会。无论是刚刚步入职场的应届毕业生，还是希望挪岗换位的职场精英，互联网公司的面试都如一座大山，等待着我们去攀登。而其中尤为令人头疼的，便是那一系列考验智力和...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":487,"minutes":2,"text":"2 分钟"},"slug":"doc/💹 大厂面经/bzcgeyqlpmluo6ln","path":"docs/doc/💹 大厂面经/bzcgeyqlpmluo6ln","filePath":"docs/doc/💹 大厂面经/bzcgeyqlpmluo6ln.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"经典智力题","datePublished":"2024-05-22T00:44:28.000Z","dateModified":"2024-06-25T13:47:25.000Z","description":"---is_nav: truenav_path: iq大家好，我是白露啊。互联网行业为全球发展带来了巨大的推动力，同时也孕育了无数的工作机会。无论是刚刚步入职场的应届毕业生，还是希望挪岗换位的职场精英，互联网公司的面试都如一座大山，等待着我们去攀登。而其中尤为令人头疼的，便是那一系列考验智力和...","url":"https://offernow.cn/docs/doc/💹 大厂面经/bzcgeyqlpmluo6ln"}},{"title":"高频场景题","date":"2024-05-22T00:44:13.000Z","urlname":"ddiqc8kv6p73lgsu","is_nav":true,"nav_path":"scene","updated":"2024-06-25T13:47:11.000Z","not_show":false,"description":"---is_nav: truenav_path: scene大家好，我是白露啊。在互联网行业求职的道路上，过五关斩六将不仅仅需要扎实的知识储备和丰富的项目经验，还需要应对各种刁钻的面试题目。除了常见的技术问题，场景题作为一种重要的考查方式，常常让求职者感到束手无策。为了解决这一难题，我特别推出...","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":855,"minutes":3,"text":"3 分钟"},"slug":"doc/💹 大厂面经/ddiqc8kv6p73lgsu","path":"docs/doc/💹 大厂面经/ddiqc8kv6p73lgsu","filePath":"docs/doc/💹 大厂面经/ddiqc8kv6p73lgsu.md","toc":[{"value":"专栏内容一览","url":"#专栏内容一览","depth":3},{"value":"通过这个专栏，你将获得：","url":"#通过这个专栏你将获得","depth":3},{"value":"为你的互联网面试保驾护航","url":"#为你的互联网面试保驾护航","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"高频场景题","datePublished":"2024-05-22T00:44:13.000Z","dateModified":"2024-06-25T13:47:11.000Z","description":"---is_nav: truenav_path: scene大家好，我是白露啊。在互联网行业求职的道路上，过五关斩六将不仅仅需要扎实的知识储备和丰富的项目经验，还需要应对各种刁钻的面试题目。除了常见的技术问题，场景题作为一种重要的考查方式，常常让求职者感到束手无策。为了解决这一难题，我特别推出...","url":"https://offernow.cn/docs/doc/💹 大厂面经/ddiqc8kv6p73lgsu"}},{"title":"计算机网络","date":"2024-05-16T14:30:55.000Z","urlname":"kbo5ucr66rpm0n73","is_nav":true,"nav_path":"network","updated":"2024-09-28T04:22:32.000Z","not_show":false,"description":"本文探讨了计算机网络的相关技术和应用，包括信息传输、网络安全和网络架构等内容。","tags":[],"keywords":"计算机网络, 网络技术, 信息传输, 网络安全, 网络架构, 数据通信","authors":["whitedew"],"type":"Post","readingTime":{"words":475,"minutes":2,"text":"2 分钟"},"slug":"doc/📚 计算机基础/kbo5ucr66rpm0n73","path":"docs/doc/📚 计算机基础/kbo5ucr66rpm0n73","filePath":"docs/doc/📚 计算机基础/kbo5ucr66rpm0n73.md","toc":[{"value":"计算机网络栏目介绍","url":"#计算机网络栏目介绍","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"计算机网络","datePublished":"2024-05-16T14:30:55.000Z","dateModified":"2024-09-28T04:22:32.000Z","description":"本文探讨了计算机网络的相关技术和应用，包括信息传输、网络安全和网络架构等内容。","url":"https://offernow.cn/docs/doc/📚 计算机基础/kbo5ucr66rpm0n73"}},{"title":"互联网新闻","date":"2024-05-14T13:16:02.000Z","urlname":"bxxwzvxxq58cnace","is_nav":true,"nav_path":"chat_view\r","updated":"2024-09-24T03:35:06.000Z","not_show":false,"description":"---is_nav: truenav_path: chat_view---公司的选择，会直接影响一个人生活的喜悦成都。面试，不只是拿下面试官，还得了解最新的职场信息~「互联网新闻」通过相关职场信息+面试问题，让大家了解互联网领域的最新消息，选择更加合适的公司！","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":82,"minutes":0,"text":"小于一分钟"},"slug":"doc/💹 大厂面经/bxxwzvxxq58cnace","path":"docs/doc/💹 大厂面经/bxxwzvxxq58cnace","filePath":"docs/doc/💹 大厂面经/bxxwzvxxq58cnace.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"互联网新闻","datePublished":"2024-05-14T13:16:02.000Z","dateModified":"2024-09-24T03:35:06.000Z","description":"---is_nav: truenav_path: chat_view---公司的选择，会直接影响一个人生活的喜悦成都。面试，不只是拿下面试官，还得了解最新的职场信息~「互联网新闻」通过相关职场信息+面试问题，让大家了解互联网领域的最新消息，选择更加合适的公司！","url":"https://offernow.cn/docs/doc/💹 大厂面经/bxxwzvxxq58cnace"}},{"title":"校招必备的面经小程序","date":"2024-05-14T13:15:56.000Z","urlname":"rnwghpv7c59vgtuo","is_nav":false,"updated":"2024-09-24T13:43:58.000Z","not_show":false,"description":"大家好，我是白露。面试准备对于每一个校招、社招求职的人来说都是折磨。。。。。。吐了！为什么要考八股文？太难背了啊……到底要背什么题目啊大厂都会怎么问啊？……我和朋友开发了一个小程序，目标是：帮助一万个程序员拿到 Offer。这小程序做什么？全面的题库我们汇总了Java、C++、Go、前端、大数...\r","cover":"https://cdn.nlark.com/yuque/0/2024/png/22382235/1718811751273-adc0a552-fc72-43d2-bffa-8b7e683804e4.png","tags":[],"authors":["whitedew"],"type":"Post","readingTime":{"words":851,"minutes":3,"text":"3 分钟"},"slug":"doc/💹 大厂面经/rnwghpv7c59vgtuo","path":"docs/doc/💹 大厂面经/rnwghpv7c59vgtuo","filePath":"docs/doc/💹 大厂面经/rnwghpv7c59vgtuo.md","toc":[{"value":"这小程序做什么？","url":"#这小程序做什么","depth":1},{"value":"全面的题库","url":"#全面的题库","depth":2},{"value":"专家答案","url":"#专家答案","depth":2},{"value":"真题实战","url":"#真题实战","depth":2},{"value":"场景题","url":"#场景题","depth":2},{"value":"清晰分类","url":"#清晰分类","depth":2},{"value":"实时更新","url":"#实时更新","depth":2},{"value":"八股文面试不应该成为你求职的负担","url":"#八股文面试不应该成为你求职的负担","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"校招必备的面经小程序","datePublished":"2024-05-14T13:15:56.000Z","dateModified":"2024-09-24T13:43:58.000Z","description":"大家好，我是白露。面试准备对于每一个校招、社招求职的人来说都是折磨。。。。。。吐了！为什么要考八股文？太难背了啊……到底要背什么题目啊大厂都会怎么问啊？……我和朋友开发了一个小程序，目标是：帮助一万个程序员拿到 Offer。这小程序做什么？全面的题库我们汇总了Java、C++、Go、前端、大数...\r","url":"https://offernow.cn/docs/doc/💹 大厂面经/rnwghpv7c59vgtuo"}},{"title":"📚 计算机基础","date":"2024-05-14T13:15:35.000Z","urlname":"lee28kbqshx46bn8","is_nav":true,"nav_path":"cs_base","updated":"2024-06-21T08:49:24.000Z","not_show":false,"description":"在软件开发领域，\"八股文\"通常指技术面试中的理论问题和常见编程题目。准备这些问题有助于求职者展示技术实力和理论知识。本文涵盖数据结构与算法、操作系统、网络协议、设计模式和数据库等核心知识。","tags":[],"keywords":"计算机基础, 软件开发, 数据结构, 算法, 操作系统, 网络协议","authors":["whitedew"],"type":"Post","readingTime":{"words":525,"minutes":2,"text":"2 分钟"},"slug":"doc/lee28kbqshx46bn8","path":"docs/doc/lee28kbqshx46bn8","filePath":"docs/doc/lee28kbqshx46bn8.md","toc":[{"value":"八股文速达","url":"#八股文速达","depth":3},{"value":"为什么八股文重要？","url":"#为什么八股文重要","depth":3},{"value":"如何准备八股文？","url":"#如何准备八股文","depth":3},{"value":"","url":"#","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"📚 计算机基础","datePublished":"2024-05-14T13:15:35.000Z","dateModified":"2024-06-21T08:49:24.000Z","description":"在软件开发领域，\"八股文\"通常指技术面试中的理论问题和常见编程题目。准备这些问题有助于求职者展示技术实力和理论知识。本文涵盖数据结构与算法、操作系统、网络协议、设计模式和数据库等核心知识。","url":"https://offernow.cn/docs/doc/lee28kbqshx46bn8"}},{"title":"🧰 实践项目","date":"2024-05-14T13:15:30.000Z","urlname":"ttymzn2156q6eim1","is_nav":true,"nav_path":"project","updated":"2024-06-23T12:34:37.000Z","not_show":false,"description":"通过实践项目将编程知识应用到实际问题中，提升编程技能，增强职业竞争力。推荐个人网站、博客平台、社交媒体应用、电子商务网站、数据分析工具等实践项目，帮助你加深对编程概念的理解。","tags":[],"keywords":"编程实践项目, 编程学习, 个人作品集, 编程技能, 职业竞争力","authors":["whitedew"],"type":"Post","readingTime":{"words":578,"minutes":2,"text":"2 分钟"},"slug":"doc/ttymzn2156q6eim1","path":"docs/doc/ttymzn2156q6eim1","filePath":"docs/doc/ttymzn2156q6eim1.md","toc":[{"value":"推荐实践项目","url":"#推荐实践项目","depth":3},{"value":"为何实践项目重要？","url":"#为何实践项目重要","depth":3},{"value":"如何开始？","url":"#如何开始","depth":3},{"value":"","url":"#-1","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"🧰 实践项目","datePublished":"2024-05-14T13:15:30.000Z","dateModified":"2024-06-23T12:34:37.000Z","description":"通过实践项目将编程知识应用到实际问题中，提升编程技能，增强职业竞争力。推荐个人网站、博客平台、社交媒体应用、电子商务网站、数据分析工具等实践项目，帮助你加深对编程概念的理解。","url":"https://offernow.cn/docs/doc/ttymzn2156q6eim1"}},{"title":"💹 大厂面经","date":"2024-05-14T13:15:22.000Z","urlname":"gc6kwq2a9iufudga","is_nav":true,"nav_path":"interview","updated":"2024-06-21T08:47:53.000Z","not_show":false,"description":"面试大厂是软件开发者职业生涯的重要目标，包括算法、数据结构、系统设计和行为面试等多个环节。了解常见面试题型与准备策略，助你成功迈向字节、阿里、腾讯等大厂。","tags":[],"keywords":"大厂面经, 算法面试, 数据结构, 系统设计, 行为面试, 智力题","authors":["whitedew"],"type":"Post","readingTime":{"words":595,"minutes":2,"text":"2 分钟"},"slug":"doc/gc6kwq2a9iufudga","path":"docs/doc/gc6kwq2a9iufudga","filePath":"docs/doc/gc6kwq2a9iufudga.md","toc":[{"value":"面试真题与智力题类型","url":"#面试真题与智力题类型","depth":3},{"value":"算法与数据结构","url":"#算法与数据结构","depth":4},{"value":"系统设计","url":"#系统设计","depth":4},{"value":"行为面试","url":"#行为面试","depth":4},{"value":"智力题","url":"#智力题","depth":4},{"value":"准备策略","url":"#准备策略","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"💹 大厂面经","datePublished":"2024-05-14T13:15:22.000Z","dateModified":"2024-06-21T08:47:53.000Z","description":"面试大厂是软件开发者职业生涯的重要目标，包括算法、数据结构、系统设计和行为面试等多个环节。了解常见面试题型与准备策略，助你成功迈向字节、阿里、腾讯等大厂。","url":"https://offernow.cn/docs/doc/gc6kwq2a9iufudga"}},{"title":"🏄 关于","date":"2022-06-01T11:34:04.000Z","urlname":"gu7y1k","is_nav":false,"nav_path":"web","updated":"2024-07-03T05:14:34.000Z","not_show":false,"description":"关于页面提供最新的更新信息和网站导航。了解更多关于我们的网站及其最新功能。","cover":"https://cdn.nlark.com/yuque/0/2022/png/22382235/1654084105084-db848bc6-9549-487f-ab10-78708de3dec5.png","tags":[],"keywords":"关于网站, 网站更新, 网站信息,网站导航,友情链接","authors":["whitedew"],"type":"Post","readingTime":{"words":58,"minutes":0,"text":"小于一分钟"},"slug":"doc/gu7y1k","path":"docs/doc/gu7y1k","filePath":"docs/doc/gu7y1k.md","toc":[],"structuredData":{"@context":"https://schema.org","@type":"ComPost","headline":"🏄 关于","datePublished":"2022-06-01T11:34:04.000Z","dateModified":"2024-07-03T05:14:34.000Z","description":"关于页面提供最新的更新信息和网站导航。了解更多关于我们的网站及其最新功能。","url":"https://offernow.cn/docs/doc/gu7y1k"}}]