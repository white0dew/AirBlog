{
    domain: null,
    service: Service {
      config: Config {
        credentials: [Object],
        credentialProvider: [CredentialProviderChain],
        region: 'automatic',
        logger: null,
        apiVersions: {},
        apiVersion: null,
        endpoint: 'https://cos.ap-guangzhou.myqcloud.com',
        httpOptions: [Object],
        maxRetries: undefined,
        maxRedirects: 10,
        paramValidation: true,
        sslEnabled: true,
        s3ForcePathStyle: false,
        s3BucketEndpoint: false,
        s3DisableBodySigning: true,
        s3UsEast1RegionalEndpoint: 'legacy',
        s3UseArnRegion: undefined,
        computeChecksums: true,
        convertResponseTypes: true,
        correctClockSkew: false,
        customUserAgent: null,
        dynamoDbCrc32: true,
        systemClockOffset: 0,
        signatureVersion: null,
        signatureCache: true,
        retryDelayOptions: {},
        useAccelerateEndpoint: false,
        clientSideMonitoring: false,
        endpointDiscoveryEnabled: undefined,
        endpointCacheSize: 1000,
        hostPrefixEnabled: true,
        stsRegionalEndpoints: 'legacy',
        useFipsEndpoint: false,
        useDualstackEndpoint: false,
        token: null,
        tokenProvider: [TokenProviderChain],
        params: [Object]
      },
      endpoint: Endpoint {
        protocol: 'https:',
        host: 'cos.ap-guangzhou.myqcloud.com',
        port: 443,
        hostname: 'cos.ap-guangzhou.myqcloud.com',
        pathname: '/',
        path: '/',
        href: 'https://cos.ap-guangzhou.myqcloud.com/'
      },
      _events: { apiCallAttempt: [Array], apiCall: [Array] },
      MONITOR_EVENTS_BUBBLE: [Function: EVENTS_BUBBLE],
      CALL_EVENTS_BUBBLE: [Function: CALL_EVENTS_BUBBLE],
      _clientId: 1
    },
    operation: 'putObject',
    params: {
      Bucket: 's-gz-6611-oss1-1258813047',
      Key: '/hsh/image/99dc1c16-57f8-4792-b5d9-e8925abca34d_1725455207145850466~tplv-a9rns2rl98-web-thumb-ud84bgsfqv6wuwx5uw7oha5t.webp',        
      Body: <Buffer 52 49 46 46 7c c5 04 00 57 45 42 50 56 50 38 4c 70 c5 04 00 2f 43 c2 90 00 8d 48 8c 64 3b 6c 9b b9 07 98 90 e6 1e fa 2f 18 10 93 12 22 fa 3f 01 cb 7f ... 312658 more bytes>,
      ContentType: 'image/webp'
    },
    httpRequest: HttpRequest {
      method: 'POST',
      path: '/',
      headers: { 'User-Agent': 'aws-sdk-nodejs/2.1692.0 win32/v20.13.1' },
      body: '',
      endpoint: {
        protocol: 'https:',
        host: 'cos.ap-guangzhou.myqcloud.com',
        port: 443,
        hostname: 'cos.ap-guangzhou.myqcloud.com',
        pathname: '/',
        path: '/',
        href: 'https://cos.ap-guangzhou.myqcloud.com/',
        constructor: [Function]
      },
      region: 'automatic',
      _userAgent: 'aws-sdk-nodejs/2.1692.0 win32/v20.13.1'
    },
    startTime: 2024-11-24T07:20:07.743Z,
    response: Response {
      request: [Circular *1],
      data: null,
      error: null,
      retryCount: 0,
      redirectCount: 0,
      httpResponse: HttpResponse {
        statusCode: undefined,
        headers: {},
        body: undefined,
        streaming: false,
        stream: null
      },
      maxRetries: 3,
      maxRedirects: 10
    },
    _asm: AcceptorStateMachine {
      currentState: 'validate',
      states: {
        validate: [Object],
        build: [Object],
        afterBuild: [Object],
        sign: [Object],
        retry: [Object],
        afterRetry: [Object],
        send: [Object],
        validateResponse: [Object],
        extractError: [Object],
        extractData: [Object],
        restart: [Object],
        success: [Object],
        error: [Object],
        complete: [Object]
      }
    },
    _haltHandlersOnError: false,
    _events: {
      validate: [
        [Function (anonymous)],
        [Function: optInUsEast1RegionalEndpoint],
        [Function: validateBucketName],
        [Function],
        [Function: BUILD_IDEMPOTENCY_TOKENS],
        [Function: VALIDATE_PARAMETERS],
        [Function: validateScheme],
        [Function: validateBucketEndpoint],
        [Function: correctBucketRegionFromCache]
      ],
      afterBuild: [
        [Function: COMPUTE_CHECKSUM],
        [Function: SET_CONTENT_LENGTH],
        [Function: SET_HTTP_HOST],
        [Function: SET_TRACE_ID],
        [Function: addExpect100Continue],
        [Function: disableBodySigning]
      ],
      restart: [ [Function: RESTART] ],
      sign: [ [Function (anonymous)], [Function], [Function] ],
      validateResponse: [
        [Function: VALIDATE_RESPONSE],
        [Function: setExpiresString],
        [Function (anonymous)]
      ],
      error: [ [Function: ERROR] ],
      send: [ [Function] ],
      httpHeaders: [ [Function: HTTP_HEADERS] ],
      httpData: [ [Function: HTTP_DATA] ],
      httpDone: [ [Function: HTTP_DONE] ],
      retry: [
        [Function: FINALIZE_ERROR],
        [Function: INVALIDATE_CREDENTIALS],
        [Function: EXPIRED_SIGNATURE],
        [Function: CLOCK_SKEWED],
        [Function: REDIRECT],
        [Function: RETRY_CHECK],
        [Function: API_CALL_ATTEMPT_RETRY]
      ],
      afterRetry: [ [Function] ],
      build: [
        [Function: buildRequest],
        [Function: addContentType],
        [Function: computeContentMd5],
        [Function: computeSseCustomerKeyMd5],
        [Function: populateURI]
      ],
      extractData: [
        [Function: extractData],
        [Function: extractRequestId],
        [Function: hoistPayloadMember],
        [Function: extractData],
        [Function: extractErrorFrom200Response]
      ],
      extractError: [
        [Function: extractError],
        [Function: extractRequestId],
        [Function: extractError],
        [Function]
      ],
      httpError: [ [Function: ENOTFOUND_ERROR] ],
      beforePresign: [ [Function: prepareSignedUrl] ],
      success: [ [Function: API_CALL_ATTEMPT] ],
      complete: [ [Function: API_CALL] ]
    },
    emit: [Function: emit],
    API_CALL_ATTEMPT: [Function: API_CALL_ATTEMPT],
    API_CALL_ATTEMPT_RETRY: [Function: API_CALL_ATTEMPT_RETRY],
    API_CALL: [Function: API_CALL]
  }